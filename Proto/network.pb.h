// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network.proto

#ifndef PROTOBUF_network_2eproto__INCLUDED
#define PROTOBUF_network_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "serialization.pb.h"
// @@protoc_insertion_point(includes)

namespace Network {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_network_2eproto();
void protobuf_AssignDesc_network_2eproto();
void protobuf_ShutdownFile_network_2eproto();

class GetSignalListStartRequest;
class GetSignalListStartReply;
class GetSignalListNextRequest;
class GetSignalListNextReply;
class GetAppSignalParamRequest;
class GetAppSignalParamReply;
class GetAppSignalStateRequest;
class GetAppSignalStateReply;
class DataSourceInfo;
class GetDataSourcesInfoRequest;
class GetDataSourcesInfoReply;
class AppDataSourceState;
class GetAppDataSourcesStatesReply;
class GetUnitsRequest;
class Unit;
class GetUnitsReply;
class GetServiceInfoRequest;
class ServiceInfo;
class GetServiceInfoReply;

// ===================================================================

class GetSignalListStartRequest : public ::google::protobuf::Message {
 public:
  GetSignalListStartRequest();
  virtual ~GetSignalListStartRequest();

  GetSignalListStartRequest(const GetSignalListStartRequest& from);

  inline GetSignalListStartRequest& operator=(const GetSignalListStartRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignalListStartRequest& default_instance();

  void Swap(GetSignalListStartRequest* other);

  // implements Message ----------------------------------------------

  GetSignalListStartRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSignalListStartRequest& from);
  void MergeFrom(const GetSignalListStartRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetSignalListStartRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetSignalListStartRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetSignalListStartReply : public ::google::protobuf::Message {
 public:
  GetSignalListStartReply();
  virtual ~GetSignalListStartReply();

  GetSignalListStartReply(const GetSignalListStartReply& from);

  inline GetSignalListStartReply& operator=(const GetSignalListStartReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignalListStartReply& default_instance();

  void Swap(GetSignalListStartReply* other);

  // implements Message ----------------------------------------------

  GetSignalListStartReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSignalListStartReply& from);
  void MergeFrom(const GetSignalListStartReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 totalItemCount = 2;
  inline bool has_totalitemcount() const;
  inline void clear_totalitemcount();
  static const int kTotalItemCountFieldNumber = 2;
  inline ::google::protobuf::int32 totalitemcount() const;
  inline void set_totalitemcount(::google::protobuf::int32 value);

  // optional int32 partCount = 3;
  inline bool has_partcount() const;
  inline void clear_partcount();
  static const int kPartCountFieldNumber = 3;
  inline ::google::protobuf::int32 partcount() const;
  inline void set_partcount(::google::protobuf::int32 value);

  // optional int32 itemsPerPart = 4;
  inline bool has_itemsperpart() const;
  inline void clear_itemsperpart();
  static const int kItemsPerPartFieldNumber = 4;
  inline ::google::protobuf::int32 itemsperpart() const;
  inline void set_itemsperpart(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.GetSignalListStartReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_totalitemcount();
  inline void clear_has_totalitemcount();
  inline void set_has_partcount();
  inline void clear_has_partcount();
  inline void set_has_itemsperpart();
  inline void clear_has_itemsperpart();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 totalitemcount_;
  ::google::protobuf::int32 partcount_;
  ::google::protobuf::int32 itemsperpart_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetSignalListStartReply* default_instance_;
};
// -------------------------------------------------------------------

class GetSignalListNextRequest : public ::google::protobuf::Message {
 public:
  GetSignalListNextRequest();
  virtual ~GetSignalListNextRequest();

  GetSignalListNextRequest(const GetSignalListNextRequest& from);

  inline GetSignalListNextRequest& operator=(const GetSignalListNextRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignalListNextRequest& default_instance();

  void Swap(GetSignalListNextRequest* other);

  // implements Message ----------------------------------------------

  GetSignalListNextRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSignalListNextRequest& from);
  void MergeFrom(const GetSignalListNextRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 part = 1;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 1;
  inline ::google::protobuf::int32 part() const;
  inline void set_part(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.GetSignalListNextRequest)
 private:
  inline void set_has_part();
  inline void clear_has_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 part_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetSignalListNextRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetSignalListNextReply : public ::google::protobuf::Message {
 public:
  GetSignalListNextReply();
  virtual ~GetSignalListNextReply();

  GetSignalListNextReply(const GetSignalListNextReply& from);

  inline GetSignalListNextReply& operator=(const GetSignalListNextReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignalListNextReply& default_instance();

  void Swap(GetSignalListNextReply* other);

  // implements Message ----------------------------------------------

  GetSignalListNextReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSignalListNextReply& from);
  void MergeFrom(const GetSignalListNextReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 part = 2;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 2;
  inline ::google::protobuf::int32 part() const;
  inline void set_part(::google::protobuf::int32 value);

  // repeated string appSignalIds = 3;
  inline int appsignalids_size() const;
  inline void clear_appsignalids();
  static const int kAppSignalIdsFieldNumber = 3;
  inline const ::std::string& appsignalids(int index) const;
  inline ::std::string* mutable_appsignalids(int index);
  inline void set_appsignalids(int index, const ::std::string& value);
  inline void set_appsignalids(int index, const char* value);
  inline void set_appsignalids(int index, const char* value, size_t size);
  inline ::std::string* add_appsignalids();
  inline void add_appsignalids(const ::std::string& value);
  inline void add_appsignalids(const char* value);
  inline void add_appsignalids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& appsignalids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_appsignalids();

  // @@protoc_insertion_point(class_scope:Network.GetSignalListNextReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_part();
  inline void clear_has_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 part_;
  ::google::protobuf::RepeatedPtrField< ::std::string> appsignalids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetSignalListNextReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalParamRequest : public ::google::protobuf::Message {
 public:
  GetAppSignalParamRequest();
  virtual ~GetAppSignalParamRequest();

  GetAppSignalParamRequest(const GetAppSignalParamRequest& from);

  inline GetAppSignalParamRequest& operator=(const GetAppSignalParamRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalParamRequest& default_instance();

  void Swap(GetAppSignalParamRequest* other);

  // implements Message ----------------------------------------------

  GetAppSignalParamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalParamRequest& from);
  void MergeFrom(const GetAppSignalParamRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 signalHashes = 1;
  inline int signalhashes_size() const;
  inline void clear_signalhashes();
  static const int kSignalHashesFieldNumber = 1;
  inline ::google::protobuf::uint64 signalhashes(int index) const;
  inline void set_signalhashes(int index, ::google::protobuf::uint64 value);
  inline void add_signalhashes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      signalhashes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_signalhashes();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalParamRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > signalhashes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalParamRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalParamReply : public ::google::protobuf::Message {
 public:
  GetAppSignalParamReply();
  virtual ~GetAppSignalParamReply();

  GetAppSignalParamReply(const GetAppSignalParamReply& from);

  inline GetAppSignalParamReply& operator=(const GetAppSignalParamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalParamReply& default_instance();

  void Swap(GetAppSignalParamReply* other);

  // implements Message ----------------------------------------------

  GetAppSignalParamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalParamReply& from);
  void MergeFrom(const GetAppSignalParamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Proto.AppSignal appSignalParams = 2;
  inline int appsignalparams_size() const;
  inline void clear_appsignalparams();
  static const int kAppSignalParamsFieldNumber = 2;
  inline const ::Proto::AppSignal& appsignalparams(int index) const;
  inline ::Proto::AppSignal* mutable_appsignalparams(int index);
  inline ::Proto::AppSignal* add_appsignalparams();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >&
      appsignalparams() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >*
      mutable_appsignalparams();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalParamReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal > appsignalparams_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalParamReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStateRequest : public ::google::protobuf::Message {
 public:
  GetAppSignalStateRequest();
  virtual ~GetAppSignalStateRequest();

  GetAppSignalStateRequest(const GetAppSignalStateRequest& from);

  inline GetAppSignalStateRequest& operator=(const GetAppSignalStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStateRequest& default_instance();

  void Swap(GetAppSignalStateRequest* other);

  // implements Message ----------------------------------------------

  GetAppSignalStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStateRequest& from);
  void MergeFrom(const GetAppSignalStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 signalHashes = 1;
  inline int signalhashes_size() const;
  inline void clear_signalhashes();
  static const int kSignalHashesFieldNumber = 1;
  inline ::google::protobuf::uint64 signalhashes(int index) const;
  inline void set_signalhashes(int index, ::google::protobuf::uint64 value);
  inline void add_signalhashes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      signalhashes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_signalhashes();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStateRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > signalhashes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStateReply : public ::google::protobuf::Message {
 public:
  GetAppSignalStateReply();
  virtual ~GetAppSignalStateReply();

  GetAppSignalStateReply(const GetAppSignalStateReply& from);

  inline GetAppSignalStateReply& operator=(const GetAppSignalStateReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStateReply& default_instance();

  void Swap(GetAppSignalStateReply* other);

  // implements Message ----------------------------------------------

  GetAppSignalStateReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStateReply& from);
  void MergeFrom(const GetAppSignalStateReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Proto.AppSignalState appSignalStates = 2;
  inline int appsignalstates_size() const;
  inline void clear_appsignalstates();
  static const int kAppSignalStatesFieldNumber = 2;
  inline const ::Proto::AppSignalState& appsignalstates(int index) const;
  inline ::Proto::AppSignalState* mutable_appsignalstates(int index);
  inline ::Proto::AppSignalState* add_appsignalstates();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >&
      appsignalstates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >*
      mutable_appsignalstates();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStateReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState > appsignalstates_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStateReply* default_instance_;
};
// -------------------------------------------------------------------

class DataSourceInfo : public ::google::protobuf::Message {
 public:
  DataSourceInfo();
  virtual ~DataSourceInfo();

  DataSourceInfo(const DataSourceInfo& from);

  inline DataSourceInfo& operator=(const DataSourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataSourceInfo& default_instance();

  void Swap(DataSourceInfo* other);

  // implements Message ----------------------------------------------

  DataSourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataSourceInfo& from);
  void MergeFrom(const DataSourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string equipmentID = 2;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentIDFieldNumber = 2;
  inline const ::std::string& equipmentid() const;
  inline void set_equipmentid(const ::std::string& value);
  inline void set_equipmentid(const char* value);
  inline void set_equipmentid(const char* value, size_t size);
  inline ::std::string* mutable_equipmentid();
  inline ::std::string* release_equipmentid();
  inline void set_allocated_equipmentid(::std::string* equipmentid);

  // optional string caption = 3;
  inline bool has_caption() const;
  inline void clear_caption();
  static const int kCaptionFieldNumber = 3;
  inline const ::std::string& caption() const;
  inline void set_caption(const ::std::string& value);
  inline void set_caption(const char* value);
  inline void set_caption(const char* value, size_t size);
  inline ::std::string* mutable_caption();
  inline ::std::string* release_caption();
  inline void set_allocated_caption(::std::string* caption);

  // optional int32 dataType = 4;
  inline bool has_datatype() const;
  inline void clear_datatype();
  static const int kDataTypeFieldNumber = 4;
  inline ::google::protobuf::int32 datatype() const;
  inline void set_datatype(::google::protobuf::int32 value);

  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 6;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 6;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional int32 channel = 7;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 7;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);

  // optional int32 subsystemID = 8;
  inline bool has_subsystemid() const;
  inline void clear_subsystemid();
  static const int kSubsystemIDFieldNumber = 8;
  inline ::google::protobuf::int32 subsystemid() const;
  inline void set_subsystemid(::google::protobuf::int32 value);

  // optional string subsystem = 9;
  inline bool has_subsystem() const;
  inline void clear_subsystem();
  static const int kSubsystemFieldNumber = 9;
  inline const ::std::string& subsystem() const;
  inline void set_subsystem(const ::std::string& value);
  inline void set_subsystem(const char* value);
  inline void set_subsystem(const char* value, size_t size);
  inline ::std::string* mutable_subsystem();
  inline ::std::string* release_subsystem();
  inline void set_allocated_subsystem(::std::string* subsystem);

  // optional int32 lmNumber = 10;
  inline bool has_lmnumber() const;
  inline void clear_lmnumber();
  static const int kLmNumberFieldNumber = 10;
  inline ::google::protobuf::int32 lmnumber() const;
  inline void set_lmnumber(::google::protobuf::int32 value);

  // optional int32 lmModuleType = 11;
  inline bool has_lmmoduletype() const;
  inline void clear_lmmoduletype();
  static const int kLmModuleTypeFieldNumber = 11;
  inline ::google::protobuf::int32 lmmoduletype() const;
  inline void set_lmmoduletype(::google::protobuf::int32 value);

  // optional string lmAdapterID = 12;
  inline bool has_lmadapterid() const;
  inline void clear_lmadapterid();
  static const int kLmAdapterIDFieldNumber = 12;
  inline const ::std::string& lmadapterid() const;
  inline void set_lmadapterid(const ::std::string& value);
  inline void set_lmadapterid(const char* value);
  inline void set_lmadapterid(const char* value, size_t size);
  inline ::std::string* mutable_lmadapterid();
  inline ::std::string* release_lmadapterid();
  inline void set_allocated_lmadapterid(::std::string* lmadapterid);

  // optional bool lmDataEnable = 13;
  inline bool has_lmdataenable() const;
  inline void clear_lmdataenable();
  static const int kLmDataEnableFieldNumber = 13;
  inline bool lmdataenable() const;
  inline void set_lmdataenable(bool value);

  // optional uint64 lmDataID = 14;
  inline bool has_lmdataid() const;
  inline void clear_lmdataid();
  static const int kLmDataIDFieldNumber = 14;
  inline ::google::protobuf::uint64 lmdataid() const;
  inline void set_lmdataid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Network.DataSourceInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();
  inline void set_has_caption();
  inline void clear_has_caption();
  inline void set_has_datatype();
  inline void clear_has_datatype();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_subsystemid();
  inline void clear_has_subsystemid();
  inline void set_has_subsystem();
  inline void clear_has_subsystem();
  inline void set_has_lmnumber();
  inline void clear_has_lmnumber();
  inline void set_has_lmmoduletype();
  inline void clear_has_lmmoduletype();
  inline void set_has_lmadapterid();
  inline void clear_has_lmadapterid();
  inline void set_has_lmdataenable();
  inline void clear_has_lmdataenable();
  inline void set_has_lmdataid();
  inline void clear_has_lmdataid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* equipmentid_;
  ::std::string* caption_;
  ::std::string* ip_;
  ::google::protobuf::int32 datatype_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 subsystemid_;
  ::std::string* subsystem_;
  ::google::protobuf::int32 lmnumber_;
  ::google::protobuf::int32 lmmoduletype_;
  ::std::string* lmadapterid_;
  ::google::protobuf::uint64 lmdataid_;
  bool lmdataenable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static DataSourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetDataSourcesInfoRequest : public ::google::protobuf::Message {
 public:
  GetDataSourcesInfoRequest();
  virtual ~GetDataSourcesInfoRequest();

  GetDataSourcesInfoRequest(const GetDataSourcesInfoRequest& from);

  inline GetDataSourcesInfoRequest& operator=(const GetDataSourcesInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDataSourcesInfoRequest& default_instance();

  void Swap(GetDataSourcesInfoRequest* other);

  // implements Message ----------------------------------------------

  GetDataSourcesInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDataSourcesInfoRequest& from);
  void MergeFrom(const GetDataSourcesInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetDataSourcesInfoRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetDataSourcesInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetDataSourcesInfoReply : public ::google::protobuf::Message {
 public:
  GetDataSourcesInfoReply();
  virtual ~GetDataSourcesInfoReply();

  GetDataSourcesInfoReply(const GetDataSourcesInfoReply& from);

  inline GetDataSourcesInfoReply& operator=(const GetDataSourcesInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDataSourcesInfoReply& default_instance();

  void Swap(GetDataSourcesInfoReply* other);

  // implements Message ----------------------------------------------

  GetDataSourcesInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDataSourcesInfoReply& from);
  void MergeFrom(const GetDataSourcesInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.DataSourceInfo dataSourceInfo = 2;
  inline int datasourceinfo_size() const;
  inline void clear_datasourceinfo();
  static const int kDataSourceInfoFieldNumber = 2;
  inline const ::Network::DataSourceInfo& datasourceinfo(int index) const;
  inline ::Network::DataSourceInfo* mutable_datasourceinfo(int index);
  inline ::Network::DataSourceInfo* add_datasourceinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >&
      datasourceinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >*
      mutable_datasourceinfo();

  // @@protoc_insertion_point(class_scope:Network.GetDataSourcesInfoReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo > datasourceinfo_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetDataSourcesInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class AppDataSourceState : public ::google::protobuf::Message {
 public:
  AppDataSourceState();
  virtual ~AppDataSourceState();

  AppDataSourceState(const AppDataSourceState& from);

  inline AppDataSourceState& operator=(const AppDataSourceState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppDataSourceState& default_instance();

  void Swap(AppDataSourceState* other);

  // implements Message ----------------------------------------------

  AppDataSourceState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppDataSourceState& from);
  void MergeFrom(const AppDataSourceState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int64 uptime = 2;
  inline bool has_uptime() const;
  inline void clear_uptime();
  static const int kUptimeFieldNumber = 2;
  inline ::google::protobuf::int64 uptime() const;
  inline void set_uptime(::google::protobuf::int64 value);

  // optional int64 receivedDataSize = 3;
  inline bool has_receiveddatasize() const;
  inline void clear_receiveddatasize();
  static const int kReceivedDataSizeFieldNumber = 3;
  inline ::google::protobuf::int64 receiveddatasize() const;
  inline void set_receiveddatasize(::google::protobuf::int64 value);

  // optional double dataReceivingRate = 4;
  inline bool has_datareceivingrate() const;
  inline void clear_datareceivingrate();
  static const int kDataReceivingRateFieldNumber = 4;
  inline double datareceivingrate() const;
  inline void set_datareceivingrate(double value);

  // optional int64 receivedFramesCount = 5;
  inline bool has_receivedframescount() const;
  inline void clear_receivedframescount();
  static const int kReceivedFramesCountFieldNumber = 5;
  inline ::google::protobuf::int64 receivedframescount() const;
  inline void set_receivedframescount(::google::protobuf::int64 value);

  // optional bool processingEnabled = 6;
  inline bool has_processingenabled() const;
  inline void clear_processingenabled();
  static const int kProcessingEnabledFieldNumber = 6;
  inline bool processingenabled() const;
  inline void set_processingenabled(bool value);

  // optional int64 processedPacketCount = 7;
  inline bool has_processedpacketcount() const;
  inline void clear_processedpacketcount();
  static const int kProcessedPacketCountFieldNumber = 7;
  inline ::google::protobuf::int64 processedpacketcount() const;
  inline void set_processedpacketcount(::google::protobuf::int64 value);

  // optional int64 errorProtocolVersion = 8;
  inline bool has_errorprotocolversion() const;
  inline void clear_errorprotocolversion();
  static const int kErrorProtocolVersionFieldNumber = 8;
  inline ::google::protobuf::int64 errorprotocolversion() const;
  inline void set_errorprotocolversion(::google::protobuf::int64 value);

  // optional int64 errorFramesQuantity = 9;
  inline bool has_errorframesquantity() const;
  inline void clear_errorframesquantity();
  static const int kErrorFramesQuantityFieldNumber = 9;
  inline ::google::protobuf::int64 errorframesquantity() const;
  inline void set_errorframesquantity(::google::protobuf::int64 value);

  // optional int64 errorFrameNo = 10;
  inline bool has_errorframeno() const;
  inline void clear_errorframeno();
  static const int kErrorFrameNoFieldNumber = 10;
  inline ::google::protobuf::int64 errorframeno() const;
  inline void set_errorframeno(::google::protobuf::int64 value);

  // optional int64 lostedPackets = 11;
  inline bool has_lostedpackets() const;
  inline void clear_lostedpackets();
  static const int kLostedPacketsFieldNumber = 11;
  inline ::google::protobuf::int64 lostedpackets() const;
  inline void set_lostedpackets(::google::protobuf::int64 value);

  // optional int64 errorDataID = 12;
  inline bool has_errordataid() const;
  inline void clear_errordataid();
  static const int kErrorDataIDFieldNumber = 12;
  inline ::google::protobuf::int64 errordataid() const;
  inline void set_errordataid(::google::protobuf::int64 value);

  // optional uint64 receivedDataID = 13;
  inline bool has_receiveddataid() const;
  inline void clear_receiveddataid();
  static const int kReceivedDataIDFieldNumber = 13;
  inline ::google::protobuf::uint64 receiveddataid() const;
  inline void set_receiveddataid(::google::protobuf::uint64 value);

  // optional bool processingSkiped = 14;
  inline bool has_processingskiped() const;
  inline void clear_processingskiped();
  static const int kProcessingSkipedFieldNumber = 14;
  inline bool processingskiped() const;
  inline void set_processingskiped(bool value);

  // @@protoc_insertion_point(class_scope:Network.AppDataSourceState)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uptime();
  inline void clear_has_uptime();
  inline void set_has_receiveddatasize();
  inline void clear_has_receiveddatasize();
  inline void set_has_datareceivingrate();
  inline void clear_has_datareceivingrate();
  inline void set_has_receivedframescount();
  inline void clear_has_receivedframescount();
  inline void set_has_processingenabled();
  inline void clear_has_processingenabled();
  inline void set_has_processedpacketcount();
  inline void clear_has_processedpacketcount();
  inline void set_has_errorprotocolversion();
  inline void clear_has_errorprotocolversion();
  inline void set_has_errorframesquantity();
  inline void clear_has_errorframesquantity();
  inline void set_has_errorframeno();
  inline void clear_has_errorframeno();
  inline void set_has_lostedpackets();
  inline void clear_has_lostedpackets();
  inline void set_has_errordataid();
  inline void clear_has_errordataid();
  inline void set_has_receiveddataid();
  inline void clear_has_receiveddataid();
  inline void set_has_processingskiped();
  inline void clear_has_processingskiped();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int64 uptime_;
  ::google::protobuf::int64 receiveddatasize_;
  double datareceivingrate_;
  ::google::protobuf::int64 receivedframescount_;
  ::google::protobuf::int64 processedpacketcount_;
  ::google::protobuf::int64 errorprotocolversion_;
  ::google::protobuf::int64 errorframesquantity_;
  ::google::protobuf::int64 errorframeno_;
  ::google::protobuf::int64 lostedpackets_;
  ::google::protobuf::int64 errordataid_;
  ::google::protobuf::uint64 receiveddataid_;
  bool processingenabled_;
  bool processingskiped_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static AppDataSourceState* default_instance_;
};
// -------------------------------------------------------------------

class GetAppDataSourcesStatesReply : public ::google::protobuf::Message {
 public:
  GetAppDataSourcesStatesReply();
  virtual ~GetAppDataSourcesStatesReply();

  GetAppDataSourcesStatesReply(const GetAppDataSourcesStatesReply& from);

  inline GetAppDataSourcesStatesReply& operator=(const GetAppDataSourcesStatesReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppDataSourcesStatesReply& default_instance();

  void Swap(GetAppDataSourcesStatesReply* other);

  // implements Message ----------------------------------------------

  GetAppDataSourcesStatesReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppDataSourcesStatesReply& from);
  void MergeFrom(const GetAppDataSourcesStatesReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.AppDataSourceState appDataSourcesStates = 2;
  inline int appdatasourcesstates_size() const;
  inline void clear_appdatasourcesstates();
  static const int kAppDataSourcesStatesFieldNumber = 2;
  inline const ::Network::AppDataSourceState& appdatasourcesstates(int index) const;
  inline ::Network::AppDataSourceState* mutable_appdatasourcesstates(int index);
  inline ::Network::AppDataSourceState* add_appdatasourcesstates();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState >&
      appdatasourcesstates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState >*
      mutable_appdatasourcesstates();

  // @@protoc_insertion_point(class_scope:Network.GetAppDataSourcesStatesReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState > appdatasourcesstates_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppDataSourcesStatesReply* default_instance_;
};
// -------------------------------------------------------------------

class GetUnitsRequest : public ::google::protobuf::Message {
 public:
  GetUnitsRequest();
  virtual ~GetUnitsRequest();

  GetUnitsRequest(const GetUnitsRequest& from);

  inline GetUnitsRequest& operator=(const GetUnitsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUnitsRequest& default_instance();

  void Swap(GetUnitsRequest* other);

  // implements Message ----------------------------------------------

  GetUnitsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUnitsRequest& from);
  void MergeFrom(const GetUnitsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetUnitsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetUnitsRequest* default_instance_;
};
// -------------------------------------------------------------------

class Unit : public ::google::protobuf::Message {
 public:
  Unit();
  virtual ~Unit();

  Unit(const Unit& from);

  inline Unit& operator=(const Unit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Unit& default_instance();

  void Swap(Unit* other);

  // implements Message ----------------------------------------------

  Unit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Unit& from);
  void MergeFrom(const Unit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string unit = 2;
  inline bool has_unit() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 2;
  inline const ::std::string& unit() const;
  inline void set_unit(const ::std::string& value);
  inline void set_unit(const char* value);
  inline void set_unit(const char* value, size_t size);
  inline ::std::string* mutable_unit();
  inline ::std::string* release_unit();
  inline void set_allocated_unit(::std::string* unit);

  // @@protoc_insertion_point(class_scope:Network.Unit)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_unit();
  inline void clear_has_unit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* unit_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static Unit* default_instance_;
};
// -------------------------------------------------------------------

class GetUnitsReply : public ::google::protobuf::Message {
 public:
  GetUnitsReply();
  virtual ~GetUnitsReply();

  GetUnitsReply(const GetUnitsReply& from);

  inline GetUnitsReply& operator=(const GetUnitsReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUnitsReply& default_instance();

  void Swap(GetUnitsReply* other);

  // implements Message ----------------------------------------------

  GetUnitsReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUnitsReply& from);
  void MergeFrom(const GetUnitsReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.Unit units = 2;
  inline int units_size() const;
  inline void clear_units();
  static const int kUnitsFieldNumber = 2;
  inline const ::Network::Unit& units(int index) const;
  inline ::Network::Unit* mutable_units(int index);
  inline ::Network::Unit* add_units();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::Unit >&
      units() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::Unit >*
      mutable_units();

  // @@protoc_insertion_point(class_scope:Network.GetUnitsReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::Unit > units_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetUnitsReply* default_instance_;
};
// -------------------------------------------------------------------

class GetServiceInfoRequest : public ::google::protobuf::Message {
 public:
  GetServiceInfoRequest();
  virtual ~GetServiceInfoRequest();

  GetServiceInfoRequest(const GetServiceInfoRequest& from);

  inline GetServiceInfoRequest& operator=(const GetServiceInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceInfoRequest& default_instance();

  void Swap(GetServiceInfoRequest* other);

  // implements Message ----------------------------------------------

  GetServiceInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServiceInfoRequest& from);
  void MergeFrom(const GetServiceInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetServiceInfoRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetServiceInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class ServiceInfo : public ::google::protobuf::Message {
 public:
  ServiceInfo();
  virtual ~ServiceInfo();

  ServiceInfo(const ServiceInfo& from);

  inline ServiceInfo& operator=(const ServiceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceInfo& default_instance();

  void Swap(ServiceInfo* other);

  // implements Message ----------------------------------------------

  ServiceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceInfo& from);
  void MergeFrom(const ServiceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 majorVersion = 2 [default = 0];
  inline bool has_majorversion() const;
  inline void clear_majorversion();
  static const int kMajorVersionFieldNumber = 2;
  inline ::google::protobuf::int32 majorversion() const;
  inline void set_majorversion(::google::protobuf::int32 value);

  // optional int32 minorVersion = 3 [default = 0];
  inline bool has_minorversion() const;
  inline void clear_minorversion();
  static const int kMinorVersionFieldNumber = 3;
  inline ::google::protobuf::int32 minorversion() const;
  inline void set_minorversion(::google::protobuf::int32 value);

  // optional int32 buildNo = 4 [default = 0];
  inline bool has_buildno() const;
  inline void clear_buildno();
  static const int kBuildNoFieldNumber = 4;
  inline ::google::protobuf::int32 buildno() const;
  inline void set_buildno(::google::protobuf::int32 value);

  // optional uint32 crc = 5 [default = 0];
  inline bool has_crc() const;
  inline void clear_crc();
  static const int kCrcFieldNumber = 5;
  inline ::google::protobuf::uint32 crc() const;
  inline void set_crc(::google::protobuf::uint32 value);

  // optional int64 uptime = 6 [default = 0];
  inline bool has_uptime() const;
  inline void clear_uptime();
  static const int kUptimeFieldNumber = 6;
  inline ::google::protobuf::int64 uptime() const;
  inline void set_uptime(::google::protobuf::int64 value);

  // optional int32 serviceState = 7 [default = 0];
  inline bool has_servicestate() const;
  inline void clear_servicestate();
  static const int kServiceStateFieldNumber = 7;
  inline ::google::protobuf::int32 servicestate() const;
  inline void set_servicestate(::google::protobuf::int32 value);

  // optional int64 serviceUptime = 8 [default = 0];
  inline bool has_serviceuptime() const;
  inline void clear_serviceuptime();
  static const int kServiceUptimeFieldNumber = 8;
  inline ::google::protobuf::int64 serviceuptime() const;
  inline void set_serviceuptime(::google::protobuf::int64 value);

  // optional uint32 clientRequestIP = 9 [default = 0];
  inline bool has_clientrequestip() const;
  inline void clear_clientrequestip();
  static const int kClientRequestIPFieldNumber = 9;
  inline ::google::protobuf::uint32 clientrequestip() const;
  inline void set_clientrequestip(::google::protobuf::uint32 value);

  // optional int32 clientRequestPort = 10 [default = 0];
  inline bool has_clientrequestport() const;
  inline void clear_clientrequestport();
  static const int kClientRequestPortFieldNumber = 10;
  inline ::google::protobuf::int32 clientrequestport() const;
  inline void set_clientrequestport(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.ServiceInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_majorversion();
  inline void clear_has_majorversion();
  inline void set_has_minorversion();
  inline void clear_has_minorversion();
  inline void set_has_buildno();
  inline void clear_has_buildno();
  inline void set_has_crc();
  inline void clear_has_crc();
  inline void set_has_uptime();
  inline void clear_has_uptime();
  inline void set_has_servicestate();
  inline void clear_has_servicestate();
  inline void set_has_serviceuptime();
  inline void clear_has_serviceuptime();
  inline void set_has_clientrequestip();
  inline void clear_has_clientrequestip();
  inline void set_has_clientrequestport();
  inline void clear_has_clientrequestport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 majorversion_;
  ::google::protobuf::int32 minorversion_;
  ::google::protobuf::int32 buildno_;
  ::google::protobuf::int64 uptime_;
  ::google::protobuf::uint32 crc_;
  ::google::protobuf::int32 servicestate_;
  ::google::protobuf::int64 serviceuptime_;
  ::google::protobuf::uint32 clientrequestip_;
  ::google::protobuf::int32 clientrequestport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static ServiceInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetServiceInfoReply : public ::google::protobuf::Message {
 public:
  GetServiceInfoReply();
  virtual ~GetServiceInfoReply();

  GetServiceInfoReply(const GetServiceInfoReply& from);

  inline GetServiceInfoReply& operator=(const GetServiceInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceInfoReply& default_instance();

  void Swap(GetServiceInfoReply* other);

  // implements Message ----------------------------------------------

  GetServiceInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServiceInfoReply& from);
  void MergeFrom(const GetServiceInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // required .Network.ServiceInfo serviceInfo = 2;
  inline bool has_serviceinfo() const;
  inline void clear_serviceinfo();
  static const int kServiceInfoFieldNumber = 2;
  inline const ::Network::ServiceInfo& serviceinfo() const;
  inline ::Network::ServiceInfo* mutable_serviceinfo();
  inline ::Network::ServiceInfo* release_serviceinfo();
  inline void set_allocated_serviceinfo(::Network::ServiceInfo* serviceinfo);

  // @@protoc_insertion_point(class_scope:Network.GetServiceInfoReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_serviceinfo();
  inline void clear_has_serviceinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Network::ServiceInfo* serviceinfo_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetServiceInfoReply* default_instance_;
};
// ===================================================================


// ===================================================================

// GetSignalListStartRequest

// -------------------------------------------------------------------

// GetSignalListStartReply

// optional int32 error = 1 [default = 0];
inline bool GetSignalListStartReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSignalListStartReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSignalListStartReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSignalListStartReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetSignalListStartReply::error() const {
  return error_;
}
inline void GetSignalListStartReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 totalItemCount = 2;
inline bool GetSignalListStartReply::has_totalitemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSignalListStartReply::set_has_totalitemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSignalListStartReply::clear_has_totalitemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSignalListStartReply::clear_totalitemcount() {
  totalitemcount_ = 0;
  clear_has_totalitemcount();
}
inline ::google::protobuf::int32 GetSignalListStartReply::totalitemcount() const {
  return totalitemcount_;
}
inline void GetSignalListStartReply::set_totalitemcount(::google::protobuf::int32 value) {
  set_has_totalitemcount();
  totalitemcount_ = value;
}

// optional int32 partCount = 3;
inline bool GetSignalListStartReply::has_partcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSignalListStartReply::set_has_partcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSignalListStartReply::clear_has_partcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSignalListStartReply::clear_partcount() {
  partcount_ = 0;
  clear_has_partcount();
}
inline ::google::protobuf::int32 GetSignalListStartReply::partcount() const {
  return partcount_;
}
inline void GetSignalListStartReply::set_partcount(::google::protobuf::int32 value) {
  set_has_partcount();
  partcount_ = value;
}

// optional int32 itemsPerPart = 4;
inline bool GetSignalListStartReply::has_itemsperpart() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetSignalListStartReply::set_has_itemsperpart() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetSignalListStartReply::clear_has_itemsperpart() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetSignalListStartReply::clear_itemsperpart() {
  itemsperpart_ = 0;
  clear_has_itemsperpart();
}
inline ::google::protobuf::int32 GetSignalListStartReply::itemsperpart() const {
  return itemsperpart_;
}
inline void GetSignalListStartReply::set_itemsperpart(::google::protobuf::int32 value) {
  set_has_itemsperpart();
  itemsperpart_ = value;
}

// -------------------------------------------------------------------

// GetSignalListNextRequest

// optional int32 part = 1;
inline bool GetSignalListNextRequest::has_part() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSignalListNextRequest::set_has_part() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSignalListNextRequest::clear_has_part() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSignalListNextRequest::clear_part() {
  part_ = 0;
  clear_has_part();
}
inline ::google::protobuf::int32 GetSignalListNextRequest::part() const {
  return part_;
}
inline void GetSignalListNextRequest::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
}

// -------------------------------------------------------------------

// GetSignalListNextReply

// optional int32 error = 1 [default = 0];
inline bool GetSignalListNextReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSignalListNextReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSignalListNextReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSignalListNextReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetSignalListNextReply::error() const {
  return error_;
}
inline void GetSignalListNextReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 part = 2;
inline bool GetSignalListNextReply::has_part() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSignalListNextReply::set_has_part() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSignalListNextReply::clear_has_part() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSignalListNextReply::clear_part() {
  part_ = 0;
  clear_has_part();
}
inline ::google::protobuf::int32 GetSignalListNextReply::part() const {
  return part_;
}
inline void GetSignalListNextReply::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
}

// repeated string appSignalIds = 3;
inline int GetSignalListNextReply::appsignalids_size() const {
  return appsignalids_.size();
}
inline void GetSignalListNextReply::clear_appsignalids() {
  appsignalids_.Clear();
}
inline const ::std::string& GetSignalListNextReply::appsignalids(int index) const {
  return appsignalids_.Get(index);
}
inline ::std::string* GetSignalListNextReply::mutable_appsignalids(int index) {
  return appsignalids_.Mutable(index);
}
inline void GetSignalListNextReply::set_appsignalids(int index, const ::std::string& value) {
  appsignalids_.Mutable(index)->assign(value);
}
inline void GetSignalListNextReply::set_appsignalids(int index, const char* value) {
  appsignalids_.Mutable(index)->assign(value);
}
inline void GetSignalListNextReply::set_appsignalids(int index, const char* value, size_t size) {
  appsignalids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetSignalListNextReply::add_appsignalids() {
  return appsignalids_.Add();
}
inline void GetSignalListNextReply::add_appsignalids(const ::std::string& value) {
  appsignalids_.Add()->assign(value);
}
inline void GetSignalListNextReply::add_appsignalids(const char* value) {
  appsignalids_.Add()->assign(value);
}
inline void GetSignalListNextReply::add_appsignalids(const char* value, size_t size) {
  appsignalids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetSignalListNextReply::appsignalids() const {
  return appsignalids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetSignalListNextReply::mutable_appsignalids() {
  return &appsignalids_;
}

// -------------------------------------------------------------------

// GetAppSignalParamRequest

// repeated uint64 signalHashes = 1;
inline int GetAppSignalParamRequest::signalhashes_size() const {
  return signalhashes_.size();
}
inline void GetAppSignalParamRequest::clear_signalhashes() {
  signalhashes_.Clear();
}
inline ::google::protobuf::uint64 GetAppSignalParamRequest::signalhashes(int index) const {
  return signalhashes_.Get(index);
}
inline void GetAppSignalParamRequest::set_signalhashes(int index, ::google::protobuf::uint64 value) {
  signalhashes_.Set(index, value);
}
inline void GetAppSignalParamRequest::add_signalhashes(::google::protobuf::uint64 value) {
  signalhashes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetAppSignalParamRequest::signalhashes() const {
  return signalhashes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetAppSignalParamRequest::mutable_signalhashes() {
  return &signalhashes_;
}

// -------------------------------------------------------------------

// GetAppSignalParamReply

// optional int32 error = 1 [default = 0];
inline bool GetAppSignalParamReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalParamReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalParamReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalParamReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppSignalParamReply::error() const {
  return error_;
}
inline void GetAppSignalParamReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Proto.AppSignal appSignalParams = 2;
inline int GetAppSignalParamReply::appsignalparams_size() const {
  return appsignalparams_.size();
}
inline void GetAppSignalParamReply::clear_appsignalparams() {
  appsignalparams_.Clear();
}
inline const ::Proto::AppSignal& GetAppSignalParamReply::appsignalparams(int index) const {
  return appsignalparams_.Get(index);
}
inline ::Proto::AppSignal* GetAppSignalParamReply::mutable_appsignalparams(int index) {
  return appsignalparams_.Mutable(index);
}
inline ::Proto::AppSignal* GetAppSignalParamReply::add_appsignalparams() {
  return appsignalparams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >&
GetAppSignalParamReply::appsignalparams() const {
  return appsignalparams_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >*
GetAppSignalParamReply::mutable_appsignalparams() {
  return &appsignalparams_;
}

// -------------------------------------------------------------------

// GetAppSignalStateRequest

// repeated uint64 signalHashes = 1;
inline int GetAppSignalStateRequest::signalhashes_size() const {
  return signalhashes_.size();
}
inline void GetAppSignalStateRequest::clear_signalhashes() {
  signalhashes_.Clear();
}
inline ::google::protobuf::uint64 GetAppSignalStateRequest::signalhashes(int index) const {
  return signalhashes_.Get(index);
}
inline void GetAppSignalStateRequest::set_signalhashes(int index, ::google::protobuf::uint64 value) {
  signalhashes_.Set(index, value);
}
inline void GetAppSignalStateRequest::add_signalhashes(::google::protobuf::uint64 value) {
  signalhashes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetAppSignalStateRequest::signalhashes() const {
  return signalhashes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetAppSignalStateRequest::mutable_signalhashes() {
  return &signalhashes_;
}

// -------------------------------------------------------------------

// GetAppSignalStateReply

// optional int32 error = 1 [default = 0];
inline bool GetAppSignalStateReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalStateReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalStateReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalStateReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppSignalStateReply::error() const {
  return error_;
}
inline void GetAppSignalStateReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Proto.AppSignalState appSignalStates = 2;
inline int GetAppSignalStateReply::appsignalstates_size() const {
  return appsignalstates_.size();
}
inline void GetAppSignalStateReply::clear_appsignalstates() {
  appsignalstates_.Clear();
}
inline const ::Proto::AppSignalState& GetAppSignalStateReply::appsignalstates(int index) const {
  return appsignalstates_.Get(index);
}
inline ::Proto::AppSignalState* GetAppSignalStateReply::mutable_appsignalstates(int index) {
  return appsignalstates_.Mutable(index);
}
inline ::Proto::AppSignalState* GetAppSignalStateReply::add_appsignalstates() {
  return appsignalstates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >&
GetAppSignalStateReply::appsignalstates() const {
  return appsignalstates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >*
GetAppSignalStateReply::mutable_appsignalstates() {
  return &appsignalstates_;
}

// -------------------------------------------------------------------

// DataSourceInfo

// optional uint64 id = 1;
inline bool DataSourceInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSourceInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataSourceInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataSourceInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DataSourceInfo::id() const {
  return id_;
}
inline void DataSourceInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional string equipmentID = 2;
inline bool DataSourceInfo::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSourceInfo::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataSourceInfo::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataSourceInfo::clear_equipmentid() {
  if (equipmentid_ != &::google::protobuf::internal::kEmptyString) {
    equipmentid_->clear();
  }
  clear_has_equipmentid();
}
inline const ::std::string& DataSourceInfo::equipmentid() const {
  return *equipmentid_;
}
inline void DataSourceInfo::set_equipmentid(const ::std::string& value) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(value);
}
inline void DataSourceInfo::set_equipmentid(const char* value) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(value);
}
inline void DataSourceInfo::set_equipmentid(const char* value, size_t size) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_equipmentid() {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  return equipmentid_;
}
inline ::std::string* DataSourceInfo::release_equipmentid() {
  clear_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = equipmentid_;
    equipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_equipmentid(::std::string* equipmentid) {
  if (equipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete equipmentid_;
  }
  if (equipmentid) {
    set_has_equipmentid();
    equipmentid_ = equipmentid;
  } else {
    clear_has_equipmentid();
    equipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string caption = 3;
inline bool DataSourceInfo::has_caption() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataSourceInfo::set_has_caption() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataSourceInfo::clear_has_caption() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataSourceInfo::clear_caption() {
  if (caption_ != &::google::protobuf::internal::kEmptyString) {
    caption_->clear();
  }
  clear_has_caption();
}
inline const ::std::string& DataSourceInfo::caption() const {
  return *caption_;
}
inline void DataSourceInfo::set_caption(const ::std::string& value) {
  set_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    caption_ = new ::std::string;
  }
  caption_->assign(value);
}
inline void DataSourceInfo::set_caption(const char* value) {
  set_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    caption_ = new ::std::string;
  }
  caption_->assign(value);
}
inline void DataSourceInfo::set_caption(const char* value, size_t size) {
  set_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    caption_ = new ::std::string;
  }
  caption_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_caption() {
  set_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    caption_ = new ::std::string;
  }
  return caption_;
}
inline ::std::string* DataSourceInfo::release_caption() {
  clear_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = caption_;
    caption_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_caption(::std::string* caption) {
  if (caption_ != &::google::protobuf::internal::kEmptyString) {
    delete caption_;
  }
  if (caption) {
    set_has_caption();
    caption_ = caption;
  } else {
    clear_has_caption();
    caption_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 dataType = 4;
inline bool DataSourceInfo::has_datatype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataSourceInfo::set_has_datatype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataSourceInfo::clear_has_datatype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataSourceInfo::clear_datatype() {
  datatype_ = 0;
  clear_has_datatype();
}
inline ::google::protobuf::int32 DataSourceInfo::datatype() const {
  return datatype_;
}
inline void DataSourceInfo::set_datatype(::google::protobuf::int32 value) {
  set_has_datatype();
  datatype_ = value;
}

// optional string ip = 5;
inline bool DataSourceInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataSourceInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataSourceInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataSourceInfo::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& DataSourceInfo::ip() const {
  return *ip_;
}
inline void DataSourceInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void DataSourceInfo::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void DataSourceInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* DataSourceInfo::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 port = 6;
inline bool DataSourceInfo::has_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataSourceInfo::set_has_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataSourceInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataSourceInfo::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 DataSourceInfo::port() const {
  return port_;
}
inline void DataSourceInfo::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
}

// optional int32 channel = 7;
inline bool DataSourceInfo::has_channel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DataSourceInfo::set_has_channel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DataSourceInfo::clear_has_channel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DataSourceInfo::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 DataSourceInfo::channel() const {
  return channel_;
}
inline void DataSourceInfo::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional int32 subsystemID = 8;
inline bool DataSourceInfo::has_subsystemid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DataSourceInfo::set_has_subsystemid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DataSourceInfo::clear_has_subsystemid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DataSourceInfo::clear_subsystemid() {
  subsystemid_ = 0;
  clear_has_subsystemid();
}
inline ::google::protobuf::int32 DataSourceInfo::subsystemid() const {
  return subsystemid_;
}
inline void DataSourceInfo::set_subsystemid(::google::protobuf::int32 value) {
  set_has_subsystemid();
  subsystemid_ = value;
}

// optional string subsystem = 9;
inline bool DataSourceInfo::has_subsystem() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DataSourceInfo::set_has_subsystem() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DataSourceInfo::clear_has_subsystem() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DataSourceInfo::clear_subsystem() {
  if (subsystem_ != &::google::protobuf::internal::kEmptyString) {
    subsystem_->clear();
  }
  clear_has_subsystem();
}
inline const ::std::string& DataSourceInfo::subsystem() const {
  return *subsystem_;
}
inline void DataSourceInfo::set_subsystem(const ::std::string& value) {
  set_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    subsystem_ = new ::std::string;
  }
  subsystem_->assign(value);
}
inline void DataSourceInfo::set_subsystem(const char* value) {
  set_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    subsystem_ = new ::std::string;
  }
  subsystem_->assign(value);
}
inline void DataSourceInfo::set_subsystem(const char* value, size_t size) {
  set_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    subsystem_ = new ::std::string;
  }
  subsystem_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_subsystem() {
  set_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    subsystem_ = new ::std::string;
  }
  return subsystem_;
}
inline ::std::string* DataSourceInfo::release_subsystem() {
  clear_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = subsystem_;
    subsystem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_subsystem(::std::string* subsystem) {
  if (subsystem_ != &::google::protobuf::internal::kEmptyString) {
    delete subsystem_;
  }
  if (subsystem) {
    set_has_subsystem();
    subsystem_ = subsystem;
  } else {
    clear_has_subsystem();
    subsystem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 lmNumber = 10;
inline bool DataSourceInfo::has_lmnumber() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DataSourceInfo::set_has_lmnumber() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DataSourceInfo::clear_has_lmnumber() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DataSourceInfo::clear_lmnumber() {
  lmnumber_ = 0;
  clear_has_lmnumber();
}
inline ::google::protobuf::int32 DataSourceInfo::lmnumber() const {
  return lmnumber_;
}
inline void DataSourceInfo::set_lmnumber(::google::protobuf::int32 value) {
  set_has_lmnumber();
  lmnumber_ = value;
}

// optional int32 lmModuleType = 11;
inline bool DataSourceInfo::has_lmmoduletype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DataSourceInfo::set_has_lmmoduletype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DataSourceInfo::clear_has_lmmoduletype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DataSourceInfo::clear_lmmoduletype() {
  lmmoduletype_ = 0;
  clear_has_lmmoduletype();
}
inline ::google::protobuf::int32 DataSourceInfo::lmmoduletype() const {
  return lmmoduletype_;
}
inline void DataSourceInfo::set_lmmoduletype(::google::protobuf::int32 value) {
  set_has_lmmoduletype();
  lmmoduletype_ = value;
}

// optional string lmAdapterID = 12;
inline bool DataSourceInfo::has_lmadapterid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DataSourceInfo::set_has_lmadapterid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DataSourceInfo::clear_has_lmadapterid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DataSourceInfo::clear_lmadapterid() {
  if (lmadapterid_ != &::google::protobuf::internal::kEmptyString) {
    lmadapterid_->clear();
  }
  clear_has_lmadapterid();
}
inline const ::std::string& DataSourceInfo::lmadapterid() const {
  return *lmadapterid_;
}
inline void DataSourceInfo::set_lmadapterid(const ::std::string& value) {
  set_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    lmadapterid_ = new ::std::string;
  }
  lmadapterid_->assign(value);
}
inline void DataSourceInfo::set_lmadapterid(const char* value) {
  set_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    lmadapterid_ = new ::std::string;
  }
  lmadapterid_->assign(value);
}
inline void DataSourceInfo::set_lmadapterid(const char* value, size_t size) {
  set_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    lmadapterid_ = new ::std::string;
  }
  lmadapterid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_lmadapterid() {
  set_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    lmadapterid_ = new ::std::string;
  }
  return lmadapterid_;
}
inline ::std::string* DataSourceInfo::release_lmadapterid() {
  clear_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = lmadapterid_;
    lmadapterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_lmadapterid(::std::string* lmadapterid) {
  if (lmadapterid_ != &::google::protobuf::internal::kEmptyString) {
    delete lmadapterid_;
  }
  if (lmadapterid) {
    set_has_lmadapterid();
    lmadapterid_ = lmadapterid;
  } else {
    clear_has_lmadapterid();
    lmadapterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool lmDataEnable = 13;
inline bool DataSourceInfo::has_lmdataenable() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DataSourceInfo::set_has_lmdataenable() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DataSourceInfo::clear_has_lmdataenable() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DataSourceInfo::clear_lmdataenable() {
  lmdataenable_ = false;
  clear_has_lmdataenable();
}
inline bool DataSourceInfo::lmdataenable() const {
  return lmdataenable_;
}
inline void DataSourceInfo::set_lmdataenable(bool value) {
  set_has_lmdataenable();
  lmdataenable_ = value;
}

// optional uint64 lmDataID = 14;
inline bool DataSourceInfo::has_lmdataid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DataSourceInfo::set_has_lmdataid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DataSourceInfo::clear_has_lmdataid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DataSourceInfo::clear_lmdataid() {
  lmdataid_ = GOOGLE_ULONGLONG(0);
  clear_has_lmdataid();
}
inline ::google::protobuf::uint64 DataSourceInfo::lmdataid() const {
  return lmdataid_;
}
inline void DataSourceInfo::set_lmdataid(::google::protobuf::uint64 value) {
  set_has_lmdataid();
  lmdataid_ = value;
}

// -------------------------------------------------------------------

// GetDataSourcesInfoRequest

// -------------------------------------------------------------------

// GetDataSourcesInfoReply

// optional int32 error = 1 [default = 0];
inline bool GetDataSourcesInfoReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDataSourcesInfoReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDataSourcesInfoReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDataSourcesInfoReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetDataSourcesInfoReply::error() const {
  return error_;
}
inline void GetDataSourcesInfoReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.DataSourceInfo dataSourceInfo = 2;
inline int GetDataSourcesInfoReply::datasourceinfo_size() const {
  return datasourceinfo_.size();
}
inline void GetDataSourcesInfoReply::clear_datasourceinfo() {
  datasourceinfo_.Clear();
}
inline const ::Network::DataSourceInfo& GetDataSourcesInfoReply::datasourceinfo(int index) const {
  return datasourceinfo_.Get(index);
}
inline ::Network::DataSourceInfo* GetDataSourcesInfoReply::mutable_datasourceinfo(int index) {
  return datasourceinfo_.Mutable(index);
}
inline ::Network::DataSourceInfo* GetDataSourcesInfoReply::add_datasourceinfo() {
  return datasourceinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >&
GetDataSourcesInfoReply::datasourceinfo() const {
  return datasourceinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >*
GetDataSourcesInfoReply::mutable_datasourceinfo() {
  return &datasourceinfo_;
}

// -------------------------------------------------------------------

// AppDataSourceState

// optional uint64 id = 1;
inline bool AppDataSourceState::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppDataSourceState::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppDataSourceState::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppDataSourceState::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 AppDataSourceState::id() const {
  return id_;
}
inline void AppDataSourceState::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 uptime = 2;
inline bool AppDataSourceState::has_uptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppDataSourceState::set_has_uptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppDataSourceState::clear_has_uptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppDataSourceState::clear_uptime() {
  uptime_ = GOOGLE_LONGLONG(0);
  clear_has_uptime();
}
inline ::google::protobuf::int64 AppDataSourceState::uptime() const {
  return uptime_;
}
inline void AppDataSourceState::set_uptime(::google::protobuf::int64 value) {
  set_has_uptime();
  uptime_ = value;
}

// optional int64 receivedDataSize = 3;
inline bool AppDataSourceState::has_receiveddatasize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppDataSourceState::set_has_receiveddatasize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppDataSourceState::clear_has_receiveddatasize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppDataSourceState::clear_receiveddatasize() {
  receiveddatasize_ = GOOGLE_LONGLONG(0);
  clear_has_receiveddatasize();
}
inline ::google::protobuf::int64 AppDataSourceState::receiveddatasize() const {
  return receiveddatasize_;
}
inline void AppDataSourceState::set_receiveddatasize(::google::protobuf::int64 value) {
  set_has_receiveddatasize();
  receiveddatasize_ = value;
}

// optional double dataReceivingRate = 4;
inline bool AppDataSourceState::has_datareceivingrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppDataSourceState::set_has_datareceivingrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppDataSourceState::clear_has_datareceivingrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppDataSourceState::clear_datareceivingrate() {
  datareceivingrate_ = 0;
  clear_has_datareceivingrate();
}
inline double AppDataSourceState::datareceivingrate() const {
  return datareceivingrate_;
}
inline void AppDataSourceState::set_datareceivingrate(double value) {
  set_has_datareceivingrate();
  datareceivingrate_ = value;
}

// optional int64 receivedFramesCount = 5;
inline bool AppDataSourceState::has_receivedframescount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppDataSourceState::set_has_receivedframescount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppDataSourceState::clear_has_receivedframescount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppDataSourceState::clear_receivedframescount() {
  receivedframescount_ = GOOGLE_LONGLONG(0);
  clear_has_receivedframescount();
}
inline ::google::protobuf::int64 AppDataSourceState::receivedframescount() const {
  return receivedframescount_;
}
inline void AppDataSourceState::set_receivedframescount(::google::protobuf::int64 value) {
  set_has_receivedframescount();
  receivedframescount_ = value;
}

// optional bool processingEnabled = 6;
inline bool AppDataSourceState::has_processingenabled() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppDataSourceState::set_has_processingenabled() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppDataSourceState::clear_has_processingenabled() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppDataSourceState::clear_processingenabled() {
  processingenabled_ = false;
  clear_has_processingenabled();
}
inline bool AppDataSourceState::processingenabled() const {
  return processingenabled_;
}
inline void AppDataSourceState::set_processingenabled(bool value) {
  set_has_processingenabled();
  processingenabled_ = value;
}

// optional int64 processedPacketCount = 7;
inline bool AppDataSourceState::has_processedpacketcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppDataSourceState::set_has_processedpacketcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AppDataSourceState::clear_has_processedpacketcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AppDataSourceState::clear_processedpacketcount() {
  processedpacketcount_ = GOOGLE_LONGLONG(0);
  clear_has_processedpacketcount();
}
inline ::google::protobuf::int64 AppDataSourceState::processedpacketcount() const {
  return processedpacketcount_;
}
inline void AppDataSourceState::set_processedpacketcount(::google::protobuf::int64 value) {
  set_has_processedpacketcount();
  processedpacketcount_ = value;
}

// optional int64 errorProtocolVersion = 8;
inline bool AppDataSourceState::has_errorprotocolversion() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppDataSourceState::set_has_errorprotocolversion() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AppDataSourceState::clear_has_errorprotocolversion() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AppDataSourceState::clear_errorprotocolversion() {
  errorprotocolversion_ = GOOGLE_LONGLONG(0);
  clear_has_errorprotocolversion();
}
inline ::google::protobuf::int64 AppDataSourceState::errorprotocolversion() const {
  return errorprotocolversion_;
}
inline void AppDataSourceState::set_errorprotocolversion(::google::protobuf::int64 value) {
  set_has_errorprotocolversion();
  errorprotocolversion_ = value;
}

// optional int64 errorFramesQuantity = 9;
inline bool AppDataSourceState::has_errorframesquantity() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AppDataSourceState::set_has_errorframesquantity() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AppDataSourceState::clear_has_errorframesquantity() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AppDataSourceState::clear_errorframesquantity() {
  errorframesquantity_ = GOOGLE_LONGLONG(0);
  clear_has_errorframesquantity();
}
inline ::google::protobuf::int64 AppDataSourceState::errorframesquantity() const {
  return errorframesquantity_;
}
inline void AppDataSourceState::set_errorframesquantity(::google::protobuf::int64 value) {
  set_has_errorframesquantity();
  errorframesquantity_ = value;
}

// optional int64 errorFrameNo = 10;
inline bool AppDataSourceState::has_errorframeno() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AppDataSourceState::set_has_errorframeno() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AppDataSourceState::clear_has_errorframeno() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AppDataSourceState::clear_errorframeno() {
  errorframeno_ = GOOGLE_LONGLONG(0);
  clear_has_errorframeno();
}
inline ::google::protobuf::int64 AppDataSourceState::errorframeno() const {
  return errorframeno_;
}
inline void AppDataSourceState::set_errorframeno(::google::protobuf::int64 value) {
  set_has_errorframeno();
  errorframeno_ = value;
}

// optional int64 lostedPackets = 11;
inline bool AppDataSourceState::has_lostedpackets() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AppDataSourceState::set_has_lostedpackets() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AppDataSourceState::clear_has_lostedpackets() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AppDataSourceState::clear_lostedpackets() {
  lostedpackets_ = GOOGLE_LONGLONG(0);
  clear_has_lostedpackets();
}
inline ::google::protobuf::int64 AppDataSourceState::lostedpackets() const {
  return lostedpackets_;
}
inline void AppDataSourceState::set_lostedpackets(::google::protobuf::int64 value) {
  set_has_lostedpackets();
  lostedpackets_ = value;
}

// optional int64 errorDataID = 12;
inline bool AppDataSourceState::has_errordataid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AppDataSourceState::set_has_errordataid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AppDataSourceState::clear_has_errordataid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AppDataSourceState::clear_errordataid() {
  errordataid_ = GOOGLE_LONGLONG(0);
  clear_has_errordataid();
}
inline ::google::protobuf::int64 AppDataSourceState::errordataid() const {
  return errordataid_;
}
inline void AppDataSourceState::set_errordataid(::google::protobuf::int64 value) {
  set_has_errordataid();
  errordataid_ = value;
}

// optional uint64 receivedDataID = 13;
inline bool AppDataSourceState::has_receiveddataid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AppDataSourceState::set_has_receiveddataid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AppDataSourceState::clear_has_receiveddataid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AppDataSourceState::clear_receiveddataid() {
  receiveddataid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiveddataid();
}
inline ::google::protobuf::uint64 AppDataSourceState::receiveddataid() const {
  return receiveddataid_;
}
inline void AppDataSourceState::set_receiveddataid(::google::protobuf::uint64 value) {
  set_has_receiveddataid();
  receiveddataid_ = value;
}

// optional bool processingSkiped = 14;
inline bool AppDataSourceState::has_processingskiped() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AppDataSourceState::set_has_processingskiped() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AppDataSourceState::clear_has_processingskiped() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AppDataSourceState::clear_processingskiped() {
  processingskiped_ = false;
  clear_has_processingskiped();
}
inline bool AppDataSourceState::processingskiped() const {
  return processingskiped_;
}
inline void AppDataSourceState::set_processingskiped(bool value) {
  set_has_processingskiped();
  processingskiped_ = value;
}

// -------------------------------------------------------------------

// GetAppDataSourcesStatesReply

// optional int32 error = 1 [default = 0];
inline bool GetAppDataSourcesStatesReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppDataSourcesStatesReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppDataSourcesStatesReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppDataSourcesStatesReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppDataSourcesStatesReply::error() const {
  return error_;
}
inline void GetAppDataSourcesStatesReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.AppDataSourceState appDataSourcesStates = 2;
inline int GetAppDataSourcesStatesReply::appdatasourcesstates_size() const {
  return appdatasourcesstates_.size();
}
inline void GetAppDataSourcesStatesReply::clear_appdatasourcesstates() {
  appdatasourcesstates_.Clear();
}
inline const ::Network::AppDataSourceState& GetAppDataSourcesStatesReply::appdatasourcesstates(int index) const {
  return appdatasourcesstates_.Get(index);
}
inline ::Network::AppDataSourceState* GetAppDataSourcesStatesReply::mutable_appdatasourcesstates(int index) {
  return appdatasourcesstates_.Mutable(index);
}
inline ::Network::AppDataSourceState* GetAppDataSourcesStatesReply::add_appdatasourcesstates() {
  return appdatasourcesstates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState >&
GetAppDataSourcesStatesReply::appdatasourcesstates() const {
  return appdatasourcesstates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState >*
GetAppDataSourcesStatesReply::mutable_appdatasourcesstates() {
  return &appdatasourcesstates_;
}

// -------------------------------------------------------------------

// GetUnitsRequest

// -------------------------------------------------------------------

// Unit

// optional int32 id = 1;
inline bool Unit::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Unit::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Unit::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Unit::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Unit::id() const {
  return id_;
}
inline void Unit::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string unit = 2;
inline bool Unit::has_unit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Unit::set_has_unit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Unit::clear_has_unit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Unit::clear_unit() {
  if (unit_ != &::google::protobuf::internal::kEmptyString) {
    unit_->clear();
  }
  clear_has_unit();
}
inline const ::std::string& Unit::unit() const {
  return *unit_;
}
inline void Unit::set_unit(const ::std::string& value) {
  set_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    unit_ = new ::std::string;
  }
  unit_->assign(value);
}
inline void Unit::set_unit(const char* value) {
  set_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    unit_ = new ::std::string;
  }
  unit_->assign(value);
}
inline void Unit::set_unit(const char* value, size_t size) {
  set_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    unit_ = new ::std::string;
  }
  unit_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Unit::mutable_unit() {
  set_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    unit_ = new ::std::string;
  }
  return unit_;
}
inline ::std::string* Unit::release_unit() {
  clear_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unit_;
    unit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Unit::set_allocated_unit(::std::string* unit) {
  if (unit_ != &::google::protobuf::internal::kEmptyString) {
    delete unit_;
  }
  if (unit) {
    set_has_unit();
    unit_ = unit;
  } else {
    clear_has_unit();
    unit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetUnitsReply

// optional int32 error = 1 [default = 0];
inline bool GetUnitsReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUnitsReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUnitsReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUnitsReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetUnitsReply::error() const {
  return error_;
}
inline void GetUnitsReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.Unit units = 2;
inline int GetUnitsReply::units_size() const {
  return units_.size();
}
inline void GetUnitsReply::clear_units() {
  units_.Clear();
}
inline const ::Network::Unit& GetUnitsReply::units(int index) const {
  return units_.Get(index);
}
inline ::Network::Unit* GetUnitsReply::mutable_units(int index) {
  return units_.Mutable(index);
}
inline ::Network::Unit* GetUnitsReply::add_units() {
  return units_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::Unit >&
GetUnitsReply::units() const {
  return units_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::Unit >*
GetUnitsReply::mutable_units() {
  return &units_;
}

// -------------------------------------------------------------------

// GetServiceInfoRequest

// -------------------------------------------------------------------

// ServiceInfo

// optional int32 type = 1 [default = 0];
inline bool ServiceInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ServiceInfo::type() const {
  return type_;
}
inline void ServiceInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 majorVersion = 2 [default = 0];
inline bool ServiceInfo::has_majorversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceInfo::set_has_majorversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceInfo::clear_has_majorversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceInfo::clear_majorversion() {
  majorversion_ = 0;
  clear_has_majorversion();
}
inline ::google::protobuf::int32 ServiceInfo::majorversion() const {
  return majorversion_;
}
inline void ServiceInfo::set_majorversion(::google::protobuf::int32 value) {
  set_has_majorversion();
  majorversion_ = value;
}

// optional int32 minorVersion = 3 [default = 0];
inline bool ServiceInfo::has_minorversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceInfo::set_has_minorversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceInfo::clear_has_minorversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceInfo::clear_minorversion() {
  minorversion_ = 0;
  clear_has_minorversion();
}
inline ::google::protobuf::int32 ServiceInfo::minorversion() const {
  return minorversion_;
}
inline void ServiceInfo::set_minorversion(::google::protobuf::int32 value) {
  set_has_minorversion();
  minorversion_ = value;
}

// optional int32 buildNo = 4 [default = 0];
inline bool ServiceInfo::has_buildno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceInfo::set_has_buildno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceInfo::clear_has_buildno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceInfo::clear_buildno() {
  buildno_ = 0;
  clear_has_buildno();
}
inline ::google::protobuf::int32 ServiceInfo::buildno() const {
  return buildno_;
}
inline void ServiceInfo::set_buildno(::google::protobuf::int32 value) {
  set_has_buildno();
  buildno_ = value;
}

// optional uint32 crc = 5 [default = 0];
inline bool ServiceInfo::has_crc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceInfo::set_has_crc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceInfo::clear_has_crc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceInfo::clear_crc() {
  crc_ = 0u;
  clear_has_crc();
}
inline ::google::protobuf::uint32 ServiceInfo::crc() const {
  return crc_;
}
inline void ServiceInfo::set_crc(::google::protobuf::uint32 value) {
  set_has_crc();
  crc_ = value;
}

// optional int64 uptime = 6 [default = 0];
inline bool ServiceInfo::has_uptime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServiceInfo::set_has_uptime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServiceInfo::clear_has_uptime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServiceInfo::clear_uptime() {
  uptime_ = GOOGLE_LONGLONG(0);
  clear_has_uptime();
}
inline ::google::protobuf::int64 ServiceInfo::uptime() const {
  return uptime_;
}
inline void ServiceInfo::set_uptime(::google::protobuf::int64 value) {
  set_has_uptime();
  uptime_ = value;
}

// optional int32 serviceState = 7 [default = 0];
inline bool ServiceInfo::has_servicestate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServiceInfo::set_has_servicestate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServiceInfo::clear_has_servicestate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServiceInfo::clear_servicestate() {
  servicestate_ = 0;
  clear_has_servicestate();
}
inline ::google::protobuf::int32 ServiceInfo::servicestate() const {
  return servicestate_;
}
inline void ServiceInfo::set_servicestate(::google::protobuf::int32 value) {
  set_has_servicestate();
  servicestate_ = value;
}

// optional int64 serviceUptime = 8 [default = 0];
inline bool ServiceInfo::has_serviceuptime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServiceInfo::set_has_serviceuptime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServiceInfo::clear_has_serviceuptime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServiceInfo::clear_serviceuptime() {
  serviceuptime_ = GOOGLE_LONGLONG(0);
  clear_has_serviceuptime();
}
inline ::google::protobuf::int64 ServiceInfo::serviceuptime() const {
  return serviceuptime_;
}
inline void ServiceInfo::set_serviceuptime(::google::protobuf::int64 value) {
  set_has_serviceuptime();
  serviceuptime_ = value;
}

// optional uint32 clientRequestIP = 9 [default = 0];
inline bool ServiceInfo::has_clientrequestip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServiceInfo::set_has_clientrequestip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServiceInfo::clear_has_clientrequestip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServiceInfo::clear_clientrequestip() {
  clientrequestip_ = 0u;
  clear_has_clientrequestip();
}
inline ::google::protobuf::uint32 ServiceInfo::clientrequestip() const {
  return clientrequestip_;
}
inline void ServiceInfo::set_clientrequestip(::google::protobuf::uint32 value) {
  set_has_clientrequestip();
  clientrequestip_ = value;
}

// optional int32 clientRequestPort = 10 [default = 0];
inline bool ServiceInfo::has_clientrequestport() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServiceInfo::set_has_clientrequestport() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServiceInfo::clear_has_clientrequestport() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServiceInfo::clear_clientrequestport() {
  clientrequestport_ = 0;
  clear_has_clientrequestport();
}
inline ::google::protobuf::int32 ServiceInfo::clientrequestport() const {
  return clientrequestport_;
}
inline void ServiceInfo::set_clientrequestport(::google::protobuf::int32 value) {
  set_has_clientrequestport();
  clientrequestport_ = value;
}

// -------------------------------------------------------------------

// GetServiceInfoReply

// required int32 error = 1 [default = 0];
inline bool GetServiceInfoReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetServiceInfoReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetServiceInfoReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetServiceInfoReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetServiceInfoReply::error() const {
  return error_;
}
inline void GetServiceInfoReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// required .Network.ServiceInfo serviceInfo = 2;
inline bool GetServiceInfoReply::has_serviceinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetServiceInfoReply::set_has_serviceinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetServiceInfoReply::clear_has_serviceinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetServiceInfoReply::clear_serviceinfo() {
  if (serviceinfo_ != NULL) serviceinfo_->::Network::ServiceInfo::Clear();
  clear_has_serviceinfo();
}
inline const ::Network::ServiceInfo& GetServiceInfoReply::serviceinfo() const {
  return serviceinfo_ != NULL ? *serviceinfo_ : *default_instance_->serviceinfo_;
}
inline ::Network::ServiceInfo* GetServiceInfoReply::mutable_serviceinfo() {
  set_has_serviceinfo();
  if (serviceinfo_ == NULL) serviceinfo_ = new ::Network::ServiceInfo;
  return serviceinfo_;
}
inline ::Network::ServiceInfo* GetServiceInfoReply::release_serviceinfo() {
  clear_has_serviceinfo();
  ::Network::ServiceInfo* temp = serviceinfo_;
  serviceinfo_ = NULL;
  return temp;
}
inline void GetServiceInfoReply::set_allocated_serviceinfo(::Network::ServiceInfo* serviceinfo) {
  delete serviceinfo_;
  serviceinfo_ = serviceinfo;
  if (serviceinfo) {
    set_has_serviceinfo();
  } else {
    clear_has_serviceinfo();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Network

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_network_2eproto__INCLUDED
