// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network.proto

#ifndef PROTOBUF_network_2eproto__INCLUDED
#define PROTOBUF_network_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "serialization.pb.h"
// @@protoc_insertion_point(includes)

namespace Network {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_network_2eproto();
void protobuf_AssignDesc_network_2eproto();
void protobuf_ShutdownFile_network_2eproto();

class GetSignalListStartRequest;
class GetSignalListStartReply;
class GetSignalListNextRequest;
class GetSignalListNextReply;
class GetAppSignalParamRequest;
class GetAppSignalParamReply;
class GetAppSignalRequest;
class GetAppSignalReply;
class GetAppSignalStateRequest;
class GetAppSignalStateReply;
class DataSourceInfo;
class GetDataSourcesInfoRequest;
class GetDataSourcesInfoReply;
class AppDataSourceState;
class GetAppDataSourcesStatesReply;
class GetUnitsRequest;
class Unit;
class GetUnitsReply;
class AppDataServiceState;
class SoftwareInfo;
class GetServiceInfoRequest;
class ServiceInfo;
class GetServiceInfoReply;
class ConfigurationServiceState;
class ServiceClientInfo;
class ServiceClients;
class BuildInfo;
class ConfigurationServiceSettings;
class GetTuningSourcesInfo;
class GetTuningSourcesInfoReply;
class GetTuningSourcesStates;
class TuningSourceState;
class GetTuningSourcesStatesReply;
class ChangeConrolledTuningSourceRequest;
class ChangeConrolledTuningSourceReply;
class TuningSignalsRead;
class TuningSignalState;
class TuningSignalsReadReply;
class TuningWriteCommand;
class TuningSignalsWrite;
class TuningSignalWriteResult;
class TuningSignalsWriteReply;
class TuningSignalsApply;
class TuningSignalsApplyReply;
class SaveAppSignalsStatesToArchiveRequest;
class SaveAppSignalsStatesToArchiveReply;
class GetAppSignalStatesFromArchiveStartRequest;
class GetAppSignalStatesFromArchiveStartReply;
class GetAppSignalStatesFromArchiveNextRequest;
class GetAppSignalStatesFromArchiveNextReply;
class GetAppSignalStatesFromArchiveCancelRequest;
class GetAppSignalStatesFromArchiveCancelReply;

// ===================================================================

class GetSignalListStartRequest : public ::google::protobuf::Message {
 public:
  GetSignalListStartRequest();
  virtual ~GetSignalListStartRequest();

  GetSignalListStartRequest(const GetSignalListStartRequest& from);

  inline GetSignalListStartRequest& operator=(const GetSignalListStartRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignalListStartRequest& default_instance();

  void Swap(GetSignalListStartRequest* other);

  // implements Message ----------------------------------------------

  GetSignalListStartRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSignalListStartRequest& from);
  void MergeFrom(const GetSignalListStartRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetSignalListStartRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetSignalListStartRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetSignalListStartReply : public ::google::protobuf::Message {
 public:
  GetSignalListStartReply();
  virtual ~GetSignalListStartReply();

  GetSignalListStartReply(const GetSignalListStartReply& from);

  inline GetSignalListStartReply& operator=(const GetSignalListStartReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignalListStartReply& default_instance();

  void Swap(GetSignalListStartReply* other);

  // implements Message ----------------------------------------------

  GetSignalListStartReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSignalListStartReply& from);
  void MergeFrom(const GetSignalListStartReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 totalItemCount = 2;
  inline bool has_totalitemcount() const;
  inline void clear_totalitemcount();
  static const int kTotalItemCountFieldNumber = 2;
  inline ::google::protobuf::int32 totalitemcount() const;
  inline void set_totalitemcount(::google::protobuf::int32 value);

  // optional int32 partCount = 3;
  inline bool has_partcount() const;
  inline void clear_partcount();
  static const int kPartCountFieldNumber = 3;
  inline ::google::protobuf::int32 partcount() const;
  inline void set_partcount(::google::protobuf::int32 value);

  // optional int32 itemsPerPart = 4;
  inline bool has_itemsperpart() const;
  inline void clear_itemsperpart();
  static const int kItemsPerPartFieldNumber = 4;
  inline ::google::protobuf::int32 itemsperpart() const;
  inline void set_itemsperpart(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.GetSignalListStartReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_totalitemcount();
  inline void clear_has_totalitemcount();
  inline void set_has_partcount();
  inline void clear_has_partcount();
  inline void set_has_itemsperpart();
  inline void clear_has_itemsperpart();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 totalitemcount_;
  ::google::protobuf::int32 partcount_;
  ::google::protobuf::int32 itemsperpart_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetSignalListStartReply* default_instance_;
};
// -------------------------------------------------------------------

class GetSignalListNextRequest : public ::google::protobuf::Message {
 public:
  GetSignalListNextRequest();
  virtual ~GetSignalListNextRequest();

  GetSignalListNextRequest(const GetSignalListNextRequest& from);

  inline GetSignalListNextRequest& operator=(const GetSignalListNextRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignalListNextRequest& default_instance();

  void Swap(GetSignalListNextRequest* other);

  // implements Message ----------------------------------------------

  GetSignalListNextRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSignalListNextRequest& from);
  void MergeFrom(const GetSignalListNextRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 part = 1;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 1;
  inline ::google::protobuf::int32 part() const;
  inline void set_part(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.GetSignalListNextRequest)
 private:
  inline void set_has_part();
  inline void clear_has_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 part_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetSignalListNextRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetSignalListNextReply : public ::google::protobuf::Message {
 public:
  GetSignalListNextReply();
  virtual ~GetSignalListNextReply();

  GetSignalListNextReply(const GetSignalListNextReply& from);

  inline GetSignalListNextReply& operator=(const GetSignalListNextReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignalListNextReply& default_instance();

  void Swap(GetSignalListNextReply* other);

  // implements Message ----------------------------------------------

  GetSignalListNextReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSignalListNextReply& from);
  void MergeFrom(const GetSignalListNextReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 part = 2;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 2;
  inline ::google::protobuf::int32 part() const;
  inline void set_part(::google::protobuf::int32 value);

  // repeated string appSignalIds = 3;
  inline int appsignalids_size() const;
  inline void clear_appsignalids();
  static const int kAppSignalIdsFieldNumber = 3;
  inline const ::std::string& appsignalids(int index) const;
  inline ::std::string* mutable_appsignalids(int index);
  inline void set_appsignalids(int index, const ::std::string& value);
  inline void set_appsignalids(int index, const char* value);
  inline void set_appsignalids(int index, const char* value, size_t size);
  inline ::std::string* add_appsignalids();
  inline void add_appsignalids(const ::std::string& value);
  inline void add_appsignalids(const char* value);
  inline void add_appsignalids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& appsignalids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_appsignalids();

  // @@protoc_insertion_point(class_scope:Network.GetSignalListNextReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_part();
  inline void clear_has_part();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 part_;
  ::google::protobuf::RepeatedPtrField< ::std::string> appsignalids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetSignalListNextReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalParamRequest : public ::google::protobuf::Message {
 public:
  GetAppSignalParamRequest();
  virtual ~GetAppSignalParamRequest();

  GetAppSignalParamRequest(const GetAppSignalParamRequest& from);

  inline GetAppSignalParamRequest& operator=(const GetAppSignalParamRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalParamRequest& default_instance();

  void Swap(GetAppSignalParamRequest* other);

  // implements Message ----------------------------------------------

  GetAppSignalParamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalParamRequest& from);
  void MergeFrom(const GetAppSignalParamRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 signalHashes = 1;
  inline int signalhashes_size() const;
  inline void clear_signalhashes();
  static const int kSignalHashesFieldNumber = 1;
  inline ::google::protobuf::uint64 signalhashes(int index) const;
  inline void set_signalhashes(int index, ::google::protobuf::uint64 value);
  inline void add_signalhashes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      signalhashes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_signalhashes();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalParamRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > signalhashes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalParamRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalParamReply : public ::google::protobuf::Message {
 public:
  GetAppSignalParamReply();
  virtual ~GetAppSignalParamReply();

  GetAppSignalParamReply(const GetAppSignalParamReply& from);

  inline GetAppSignalParamReply& operator=(const GetAppSignalParamReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalParamReply& default_instance();

  void Swap(GetAppSignalParamReply* other);

  // implements Message ----------------------------------------------

  GetAppSignalParamReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalParamReply& from);
  void MergeFrom(const GetAppSignalParamReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Proto.AppSignal appSignals = 2;
  inline int appsignals_size() const;
  inline void clear_appsignals();
  static const int kAppSignalsFieldNumber = 2;
  inline const ::Proto::AppSignal& appsignals(int index) const;
  inline ::Proto::AppSignal* mutable_appsignals(int index);
  inline ::Proto::AppSignal* add_appsignals();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >&
      appsignals() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >*
      mutable_appsignals();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalParamReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal > appsignals_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalParamReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalRequest : public ::google::protobuf::Message {
 public:
  GetAppSignalRequest();
  virtual ~GetAppSignalRequest();

  GetAppSignalRequest(const GetAppSignalRequest& from);

  inline GetAppSignalRequest& operator=(const GetAppSignalRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalRequest& default_instance();

  void Swap(GetAppSignalRequest* other);

  // implements Message ----------------------------------------------

  GetAppSignalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalRequest& from);
  void MergeFrom(const GetAppSignalRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 signalHashes = 1;
  inline int signalhashes_size() const;
  inline void clear_signalhashes();
  static const int kSignalHashesFieldNumber = 1;
  inline ::google::protobuf::uint64 signalhashes(int index) const;
  inline void set_signalhashes(int index, ::google::protobuf::uint64 value);
  inline void add_signalhashes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      signalhashes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_signalhashes();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > signalhashes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalReply : public ::google::protobuf::Message {
 public:
  GetAppSignalReply();
  virtual ~GetAppSignalReply();

  GetAppSignalReply(const GetAppSignalReply& from);

  inline GetAppSignalReply& operator=(const GetAppSignalReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalReply& default_instance();

  void Swap(GetAppSignalReply* other);

  // implements Message ----------------------------------------------

  GetAppSignalReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalReply& from);
  void MergeFrom(const GetAppSignalReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Proto.AppSignal appSignals = 2;
  inline int appsignals_size() const;
  inline void clear_appsignals();
  static const int kAppSignalsFieldNumber = 2;
  inline const ::Proto::AppSignal& appsignals(int index) const;
  inline ::Proto::AppSignal* mutable_appsignals(int index);
  inline ::Proto::AppSignal* add_appsignals();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >&
      appsignals() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >*
      mutable_appsignals();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal > appsignals_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStateRequest : public ::google::protobuf::Message {
 public:
  GetAppSignalStateRequest();
  virtual ~GetAppSignalStateRequest();

  GetAppSignalStateRequest(const GetAppSignalStateRequest& from);

  inline GetAppSignalStateRequest& operator=(const GetAppSignalStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStateRequest& default_instance();

  void Swap(GetAppSignalStateRequest* other);

  // implements Message ----------------------------------------------

  GetAppSignalStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStateRequest& from);
  void MergeFrom(const GetAppSignalStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 signalHashes = 1;
  inline int signalhashes_size() const;
  inline void clear_signalhashes();
  static const int kSignalHashesFieldNumber = 1;
  inline ::google::protobuf::uint64 signalhashes(int index) const;
  inline void set_signalhashes(int index, ::google::protobuf::uint64 value);
  inline void add_signalhashes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      signalhashes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_signalhashes();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStateRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > signalhashes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStateReply : public ::google::protobuf::Message {
 public:
  GetAppSignalStateReply();
  virtual ~GetAppSignalStateReply();

  GetAppSignalStateReply(const GetAppSignalStateReply& from);

  inline GetAppSignalStateReply& operator=(const GetAppSignalStateReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStateReply& default_instance();

  void Swap(GetAppSignalStateReply* other);

  // implements Message ----------------------------------------------

  GetAppSignalStateReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStateReply& from);
  void MergeFrom(const GetAppSignalStateReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Proto.AppSignalState appSignalStates = 2;
  inline int appsignalstates_size() const;
  inline void clear_appsignalstates();
  static const int kAppSignalStatesFieldNumber = 2;
  inline const ::Proto::AppSignalState& appsignalstates(int index) const;
  inline ::Proto::AppSignalState* mutable_appsignalstates(int index);
  inline ::Proto::AppSignalState* add_appsignalstates();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >&
      appsignalstates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >*
      mutable_appsignalstates();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStateReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState > appsignalstates_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStateReply* default_instance_;
};
// -------------------------------------------------------------------

class DataSourceInfo : public ::google::protobuf::Message {
 public:
  DataSourceInfo();
  virtual ~DataSourceInfo();

  DataSourceInfo(const DataSourceInfo& from);

  inline DataSourceInfo& operator=(const DataSourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataSourceInfo& default_instance();

  void Swap(DataSourceInfo* other);

  // implements Message ----------------------------------------------

  DataSourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataSourceInfo& from);
  void MergeFrom(const DataSourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string equipmentID = 2;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentIDFieldNumber = 2;
  inline const ::std::string& equipmentid() const;
  inline void set_equipmentid(const ::std::string& value);
  inline void set_equipmentid(const char* value);
  inline void set_equipmentid(const char* value, size_t size);
  inline ::std::string* mutable_equipmentid();
  inline ::std::string* release_equipmentid();
  inline void set_allocated_equipmentid(::std::string* equipmentid);

  // optional string caption = 3;
  inline bool has_caption() const;
  inline void clear_caption();
  static const int kCaptionFieldNumber = 3;
  inline const ::std::string& caption() const;
  inline void set_caption(const ::std::string& value);
  inline void set_caption(const char* value);
  inline void set_caption(const char* value, size_t size);
  inline ::std::string* mutable_caption();
  inline ::std::string* release_caption();
  inline void set_allocated_caption(::std::string* caption);

  // optional int32 dataType = 4;
  inline bool has_datatype() const;
  inline void clear_datatype();
  static const int kDataTypeFieldNumber = 4;
  inline ::google::protobuf::int32 datatype() const;
  inline void set_datatype(::google::protobuf::int32 value);

  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional int32 port = 6;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 6;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // optional int32 channel = 7;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 7;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);

  // optional int32 subsystemID = 8;
  inline bool has_subsystemid() const;
  inline void clear_subsystemid();
  static const int kSubsystemIDFieldNumber = 8;
  inline ::google::protobuf::int32 subsystemid() const;
  inline void set_subsystemid(::google::protobuf::int32 value);

  // optional string subsystem = 9;
  inline bool has_subsystem() const;
  inline void clear_subsystem();
  static const int kSubsystemFieldNumber = 9;
  inline const ::std::string& subsystem() const;
  inline void set_subsystem(const ::std::string& value);
  inline void set_subsystem(const char* value);
  inline void set_subsystem(const char* value, size_t size);
  inline ::std::string* mutable_subsystem();
  inline ::std::string* release_subsystem();
  inline void set_allocated_subsystem(::std::string* subsystem);

  // optional int32 lmNumber = 10;
  inline bool has_lmnumber() const;
  inline void clear_lmnumber();
  static const int kLmNumberFieldNumber = 10;
  inline ::google::protobuf::int32 lmnumber() const;
  inline void set_lmnumber(::google::protobuf::int32 value);

  // optional int32 lmModuleType = 11;
  inline bool has_lmmoduletype() const;
  inline void clear_lmmoduletype();
  static const int kLmModuleTypeFieldNumber = 11;
  inline ::google::protobuf::int32 lmmoduletype() const;
  inline void set_lmmoduletype(::google::protobuf::int32 value);

  // optional string lmAdapterID = 12;
  inline bool has_lmadapterid() const;
  inline void clear_lmadapterid();
  static const int kLmAdapterIDFieldNumber = 12;
  inline const ::std::string& lmadapterid() const;
  inline void set_lmadapterid(const ::std::string& value);
  inline void set_lmadapterid(const char* value);
  inline void set_lmadapterid(const char* value, size_t size);
  inline ::std::string* mutable_lmadapterid();
  inline ::std::string* release_lmadapterid();
  inline void set_allocated_lmadapterid(::std::string* lmadapterid);

  // optional bool lmDataEnable = 13;
  inline bool has_lmdataenable() const;
  inline void clear_lmdataenable();
  static const int kLmDataEnableFieldNumber = 13;
  inline bool lmdataenable() const;
  inline void set_lmdataenable(bool value);

  // optional uint64 lmDataID = 14;
  inline bool has_lmdataid() const;
  inline void clear_lmdataid();
  static const int kLmDataIDFieldNumber = 14;
  inline ::google::protobuf::uint64 lmdataid() const;
  inline void set_lmdataid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Network.DataSourceInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();
  inline void set_has_caption();
  inline void clear_has_caption();
  inline void set_has_datatype();
  inline void clear_has_datatype();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_subsystemid();
  inline void clear_has_subsystemid();
  inline void set_has_subsystem();
  inline void clear_has_subsystem();
  inline void set_has_lmnumber();
  inline void clear_has_lmnumber();
  inline void set_has_lmmoduletype();
  inline void clear_has_lmmoduletype();
  inline void set_has_lmadapterid();
  inline void clear_has_lmadapterid();
  inline void set_has_lmdataenable();
  inline void clear_has_lmdataenable();
  inline void set_has_lmdataid();
  inline void clear_has_lmdataid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* equipmentid_;
  ::std::string* caption_;
  ::std::string* ip_;
  ::google::protobuf::int32 datatype_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 subsystemid_;
  ::std::string* subsystem_;
  ::google::protobuf::int32 lmnumber_;
  ::google::protobuf::int32 lmmoduletype_;
  ::std::string* lmadapterid_;
  ::google::protobuf::uint64 lmdataid_;
  bool lmdataenable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static DataSourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetDataSourcesInfoRequest : public ::google::protobuf::Message {
 public:
  GetDataSourcesInfoRequest();
  virtual ~GetDataSourcesInfoRequest();

  GetDataSourcesInfoRequest(const GetDataSourcesInfoRequest& from);

  inline GetDataSourcesInfoRequest& operator=(const GetDataSourcesInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDataSourcesInfoRequest& default_instance();

  void Swap(GetDataSourcesInfoRequest* other);

  // implements Message ----------------------------------------------

  GetDataSourcesInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDataSourcesInfoRequest& from);
  void MergeFrom(const GetDataSourcesInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetDataSourcesInfoRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetDataSourcesInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetDataSourcesInfoReply : public ::google::protobuf::Message {
 public:
  GetDataSourcesInfoReply();
  virtual ~GetDataSourcesInfoReply();

  GetDataSourcesInfoReply(const GetDataSourcesInfoReply& from);

  inline GetDataSourcesInfoReply& operator=(const GetDataSourcesInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDataSourcesInfoReply& default_instance();

  void Swap(GetDataSourcesInfoReply* other);

  // implements Message ----------------------------------------------

  GetDataSourcesInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDataSourcesInfoReply& from);
  void MergeFrom(const GetDataSourcesInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.DataSourceInfo dataSourceInfo = 2;
  inline int datasourceinfo_size() const;
  inline void clear_datasourceinfo();
  static const int kDataSourceInfoFieldNumber = 2;
  inline const ::Network::DataSourceInfo& datasourceinfo(int index) const;
  inline ::Network::DataSourceInfo* mutable_datasourceinfo(int index);
  inline ::Network::DataSourceInfo* add_datasourceinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >&
      datasourceinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >*
      mutable_datasourceinfo();

  // @@protoc_insertion_point(class_scope:Network.GetDataSourcesInfoReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo > datasourceinfo_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetDataSourcesInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class AppDataSourceState : public ::google::protobuf::Message {
 public:
  AppDataSourceState();
  virtual ~AppDataSourceState();

  AppDataSourceState(const AppDataSourceState& from);

  inline AppDataSourceState& operator=(const AppDataSourceState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppDataSourceState& default_instance();

  void Swap(AppDataSourceState* other);

  // implements Message ----------------------------------------------

  AppDataSourceState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppDataSourceState& from);
  void MergeFrom(const AppDataSourceState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int64 uptime = 2;
  inline bool has_uptime() const;
  inline void clear_uptime();
  static const int kUptimeFieldNumber = 2;
  inline ::google::protobuf::int64 uptime() const;
  inline void set_uptime(::google::protobuf::int64 value);

  // optional int64 receivedDataSize = 3;
  inline bool has_receiveddatasize() const;
  inline void clear_receiveddatasize();
  static const int kReceivedDataSizeFieldNumber = 3;
  inline ::google::protobuf::int64 receiveddatasize() const;
  inline void set_receiveddatasize(::google::protobuf::int64 value);

  // optional double dataReceivingRate = 4;
  inline bool has_datareceivingrate() const;
  inline void clear_datareceivingrate();
  static const int kDataReceivingRateFieldNumber = 4;
  inline double datareceivingrate() const;
  inline void set_datareceivingrate(double value);

  // optional int64 receivedFramesCount = 5;
  inline bool has_receivedframescount() const;
  inline void clear_receivedframescount();
  static const int kReceivedFramesCountFieldNumber = 5;
  inline ::google::protobuf::int64 receivedframescount() const;
  inline void set_receivedframescount(::google::protobuf::int64 value);

  // optional bool processingEnabled = 6;
  inline bool has_processingenabled() const;
  inline void clear_processingenabled();
  static const int kProcessingEnabledFieldNumber = 6;
  inline bool processingenabled() const;
  inline void set_processingenabled(bool value);

  // optional int64 processedPacketCount = 7;
  inline bool has_processedpacketcount() const;
  inline void clear_processedpacketcount();
  static const int kProcessedPacketCountFieldNumber = 7;
  inline ::google::protobuf::int64 processedpacketcount() const;
  inline void set_processedpacketcount(::google::protobuf::int64 value);

  // optional int64 errorProtocolVersion = 8;
  inline bool has_errorprotocolversion() const;
  inline void clear_errorprotocolversion();
  static const int kErrorProtocolVersionFieldNumber = 8;
  inline ::google::protobuf::int64 errorprotocolversion() const;
  inline void set_errorprotocolversion(::google::protobuf::int64 value);

  // optional int64 errorFramesQuantity = 9;
  inline bool has_errorframesquantity() const;
  inline void clear_errorframesquantity();
  static const int kErrorFramesQuantityFieldNumber = 9;
  inline ::google::protobuf::int64 errorframesquantity() const;
  inline void set_errorframesquantity(::google::protobuf::int64 value);

  // optional int64 errorFrameNo = 10;
  inline bool has_errorframeno() const;
  inline void clear_errorframeno();
  static const int kErrorFrameNoFieldNumber = 10;
  inline ::google::protobuf::int64 errorframeno() const;
  inline void set_errorframeno(::google::protobuf::int64 value);

  // optional int64 lostedPackets = 11;
  inline bool has_lostedpackets() const;
  inline void clear_lostedpackets();
  static const int kLostedPacketsFieldNumber = 11;
  inline ::google::protobuf::int64 lostedpackets() const;
  inline void set_lostedpackets(::google::protobuf::int64 value);

  // optional int64 errorDataID = 12;
  inline bool has_errordataid() const;
  inline void clear_errordataid();
  static const int kErrorDataIDFieldNumber = 12;
  inline ::google::protobuf::int64 errordataid() const;
  inline void set_errordataid(::google::protobuf::int64 value);

  // optional uint64 receivedDataID = 13;
  inline bool has_receiveddataid() const;
  inline void clear_receiveddataid();
  static const int kReceivedDataIDFieldNumber = 13;
  inline ::google::protobuf::uint64 receiveddataid() const;
  inline void set_receiveddataid(::google::protobuf::uint64 value);

  // optional bool processingSkiped = 14;
  inline bool has_processingskiped() const;
  inline void clear_processingskiped();
  static const int kProcessingSkipedFieldNumber = 14;
  inline bool processingskiped() const;
  inline void set_processingskiped(bool value);

  // optional int32 state = 15;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 15;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int64 errorBadFrameSize = 16;
  inline bool has_errorbadframesize() const;
  inline void clear_errorbadframesize();
  static const int kErrorBadFrameSizeFieldNumber = 16;
  inline ::google::protobuf::int64 errorbadframesize() const;
  inline void set_errorbadframesize(::google::protobuf::int64 value);

  // optional bool hasErrors = 17;
  inline bool has_haserrors() const;
  inline void clear_haserrors();
  static const int kHasErrorsFieldNumber = 17;
  inline bool haserrors() const;
  inline void set_haserrors(bool value);

  // @@protoc_insertion_point(class_scope:Network.AppDataSourceState)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uptime();
  inline void clear_has_uptime();
  inline void set_has_receiveddatasize();
  inline void clear_has_receiveddatasize();
  inline void set_has_datareceivingrate();
  inline void clear_has_datareceivingrate();
  inline void set_has_receivedframescount();
  inline void clear_has_receivedframescount();
  inline void set_has_processingenabled();
  inline void clear_has_processingenabled();
  inline void set_has_processedpacketcount();
  inline void clear_has_processedpacketcount();
  inline void set_has_errorprotocolversion();
  inline void clear_has_errorprotocolversion();
  inline void set_has_errorframesquantity();
  inline void clear_has_errorframesquantity();
  inline void set_has_errorframeno();
  inline void clear_has_errorframeno();
  inline void set_has_lostedpackets();
  inline void clear_has_lostedpackets();
  inline void set_has_errordataid();
  inline void clear_has_errordataid();
  inline void set_has_receiveddataid();
  inline void clear_has_receiveddataid();
  inline void set_has_processingskiped();
  inline void clear_has_processingskiped();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_errorbadframesize();
  inline void clear_has_errorbadframesize();
  inline void set_has_haserrors();
  inline void clear_has_haserrors();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int64 uptime_;
  ::google::protobuf::int64 receiveddatasize_;
  double datareceivingrate_;
  ::google::protobuf::int64 receivedframescount_;
  ::google::protobuf::int64 processedpacketcount_;
  ::google::protobuf::int64 errorprotocolversion_;
  ::google::protobuf::int64 errorframesquantity_;
  ::google::protobuf::int64 errorframeno_;
  ::google::protobuf::int64 lostedpackets_;
  ::google::protobuf::int64 errordataid_;
  ::google::protobuf::uint64 receiveddataid_;
  bool processingenabled_;
  bool processingskiped_;
  bool haserrors_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 errorbadframesize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static AppDataSourceState* default_instance_;
};
// -------------------------------------------------------------------

class GetAppDataSourcesStatesReply : public ::google::protobuf::Message {
 public:
  GetAppDataSourcesStatesReply();
  virtual ~GetAppDataSourcesStatesReply();

  GetAppDataSourcesStatesReply(const GetAppDataSourcesStatesReply& from);

  inline GetAppDataSourcesStatesReply& operator=(const GetAppDataSourcesStatesReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppDataSourcesStatesReply& default_instance();

  void Swap(GetAppDataSourcesStatesReply* other);

  // implements Message ----------------------------------------------

  GetAppDataSourcesStatesReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppDataSourcesStatesReply& from);
  void MergeFrom(const GetAppDataSourcesStatesReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.AppDataSourceState appDataSourcesStates = 2;
  inline int appdatasourcesstates_size() const;
  inline void clear_appdatasourcesstates();
  static const int kAppDataSourcesStatesFieldNumber = 2;
  inline const ::Network::AppDataSourceState& appdatasourcesstates(int index) const;
  inline ::Network::AppDataSourceState* mutable_appdatasourcesstates(int index);
  inline ::Network::AppDataSourceState* add_appdatasourcesstates();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState >&
      appdatasourcesstates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState >*
      mutable_appdatasourcesstates();

  // @@protoc_insertion_point(class_scope:Network.GetAppDataSourcesStatesReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState > appdatasourcesstates_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppDataSourcesStatesReply* default_instance_;
};
// -------------------------------------------------------------------

class GetUnitsRequest : public ::google::protobuf::Message {
 public:
  GetUnitsRequest();
  virtual ~GetUnitsRequest();

  GetUnitsRequest(const GetUnitsRequest& from);

  inline GetUnitsRequest& operator=(const GetUnitsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUnitsRequest& default_instance();

  void Swap(GetUnitsRequest* other);

  // implements Message ----------------------------------------------

  GetUnitsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUnitsRequest& from);
  void MergeFrom(const GetUnitsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetUnitsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetUnitsRequest* default_instance_;
};
// -------------------------------------------------------------------

class Unit : public ::google::protobuf::Message {
 public:
  Unit();
  virtual ~Unit();

  Unit(const Unit& from);

  inline Unit& operator=(const Unit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Unit& default_instance();

  void Swap(Unit* other);

  // implements Message ----------------------------------------------

  Unit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Unit& from);
  void MergeFrom(const Unit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string unit = 2;
  inline bool has_unit() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 2;
  inline const ::std::string& unit() const;
  inline void set_unit(const ::std::string& value);
  inline void set_unit(const char* value);
  inline void set_unit(const char* value, size_t size);
  inline ::std::string* mutable_unit();
  inline ::std::string* release_unit();
  inline void set_allocated_unit(::std::string* unit);

  // @@protoc_insertion_point(class_scope:Network.Unit)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_unit();
  inline void clear_has_unit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* unit_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static Unit* default_instance_;
};
// -------------------------------------------------------------------

class GetUnitsReply : public ::google::protobuf::Message {
 public:
  GetUnitsReply();
  virtual ~GetUnitsReply();

  GetUnitsReply(const GetUnitsReply& from);

  inline GetUnitsReply& operator=(const GetUnitsReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUnitsReply& default_instance();

  void Swap(GetUnitsReply* other);

  // implements Message ----------------------------------------------

  GetUnitsReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUnitsReply& from);
  void MergeFrom(const GetUnitsReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.Unit units = 2;
  inline int units_size() const;
  inline void clear_units();
  static const int kUnitsFieldNumber = 2;
  inline const ::Network::Unit& units(int index) const;
  inline ::Network::Unit* mutable_units(int index);
  inline ::Network::Unit* add_units();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::Unit >&
      units() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::Unit >*
      mutable_units();

  // @@protoc_insertion_point(class_scope:Network.GetUnitsReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::Unit > units_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetUnitsReply* default_instance_;
};
// -------------------------------------------------------------------

class AppDataServiceState : public ::google::protobuf::Message {
 public:
  AppDataServiceState();
  virtual ~AppDataServiceState();

  AppDataServiceState(const AppDataServiceState& from);

  inline AppDataServiceState& operator=(const AppDataServiceState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppDataServiceState& default_instance();

  void Swap(AppDataServiceState* other);

  // implements Message ----------------------------------------------

  AppDataServiceState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppDataServiceState& from);
  void MergeFrom(const AppDataServiceState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool CfgServiceIsConnected = 1 [default = false];
  inline bool has_cfgserviceisconnected() const;
  inline void clear_cfgserviceisconnected();
  static const int kCfgServiceIsConnectedFieldNumber = 1;
  inline bool cfgserviceisconnected() const;
  inline void set_cfgserviceisconnected(bool value);

  // optional string CfgServiceIp = 2;
  inline bool has_cfgserviceip() const;
  inline void clear_cfgserviceip();
  static const int kCfgServiceIpFieldNumber = 2;
  inline const ::std::string& cfgserviceip() const;
  inline void set_cfgserviceip(const ::std::string& value);
  inline void set_cfgserviceip(const char* value);
  inline void set_cfgserviceip(const char* value, size_t size);
  inline ::std::string* mutable_cfgserviceip();
  inline ::std::string* release_cfgserviceip();
  inline void set_allocated_cfgserviceip(::std::string* cfgserviceip);

  // optional int32 CfgServicePort = 3;
  inline bool has_cfgserviceport() const;
  inline void clear_cfgserviceport();
  static const int kCfgServicePortFieldNumber = 3;
  inline ::google::protobuf::int32 cfgserviceport() const;
  inline void set_cfgserviceport(::google::protobuf::int32 value);

  // required bool ArchiveServiceIsConnected = 4 [default = false];
  inline bool has_archiveserviceisconnected() const;
  inline void clear_archiveserviceisconnected();
  static const int kArchiveServiceIsConnectedFieldNumber = 4;
  inline bool archiveserviceisconnected() const;
  inline void set_archiveserviceisconnected(bool value);

  // optional string ArchiveServiceIp = 5;
  inline bool has_archiveserviceip() const;
  inline void clear_archiveserviceip();
  static const int kArchiveServiceIpFieldNumber = 5;
  inline const ::std::string& archiveserviceip() const;
  inline void set_archiveserviceip(const ::std::string& value);
  inline void set_archiveserviceip(const char* value);
  inline void set_archiveserviceip(const char* value, size_t size);
  inline ::std::string* mutable_archiveserviceip();
  inline ::std::string* release_archiveserviceip();
  inline void set_allocated_archiveserviceip(::std::string* archiveserviceip);

  // optional int32 ArchiveServicePort = 6;
  inline bool has_archiveserviceport() const;
  inline void clear_archiveserviceport();
  static const int kArchiveServicePortFieldNumber = 6;
  inline ::google::protobuf::int32 archiveserviceport() const;
  inline void set_archiveserviceport(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.AppDataServiceState)
 private:
  inline void set_has_cfgserviceisconnected();
  inline void clear_has_cfgserviceisconnected();
  inline void set_has_cfgserviceip();
  inline void clear_has_cfgserviceip();
  inline void set_has_cfgserviceport();
  inline void clear_has_cfgserviceport();
  inline void set_has_archiveserviceisconnected();
  inline void clear_has_archiveserviceisconnected();
  inline void set_has_archiveserviceip();
  inline void clear_has_archiveserviceip();
  inline void set_has_archiveserviceport();
  inline void clear_has_archiveserviceport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* cfgserviceip_;
  bool cfgserviceisconnected_;
  bool archiveserviceisconnected_;
  ::google::protobuf::int32 cfgserviceport_;
  ::std::string* archiveserviceip_;
  ::google::protobuf::int32 archiveserviceport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static AppDataServiceState* default_instance_;
};
// -------------------------------------------------------------------

class SoftwareInfo : public ::google::protobuf::Message {
 public:
  SoftwareInfo();
  virtual ~SoftwareInfo();

  SoftwareInfo(const SoftwareInfo& from);

  inline SoftwareInfo& operator=(const SoftwareInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoftwareInfo& default_instance();

  void Swap(SoftwareInfo* other);

  // implements Message ----------------------------------------------

  SoftwareInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoftwareInfo& from);
  void MergeFrom(const SoftwareInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 softwareType = 1 [default = 8000];
  inline bool has_softwaretype() const;
  inline void clear_softwaretype();
  static const int kSoftwareTypeFieldNumber = 1;
  inline ::google::protobuf::int32 softwaretype() const;
  inline void set_softwaretype(::google::protobuf::int32 value);

  // required string equipmentId = 2;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentIdFieldNumber = 2;
  inline const ::std::string& equipmentid() const;
  inline void set_equipmentid(const ::std::string& value);
  inline void set_equipmentid(const char* value);
  inline void set_equipmentid(const char* value, size_t size);
  inline ::std::string* mutable_equipmentid();
  inline ::std::string* release_equipmentid();
  inline void set_allocated_equipmentid(::std::string* equipmentid);

  // required int32 majorVersion = 3 [default = 0];
  inline bool has_majorversion() const;
  inline void clear_majorversion();
  static const int kMajorVersionFieldNumber = 3;
  inline ::google::protobuf::int32 majorversion() const;
  inline void set_majorversion(::google::protobuf::int32 value);

  // required int32 minorVersion = 4 [default = 0];
  inline bool has_minorversion() const;
  inline void clear_minorversion();
  static const int kMinorVersionFieldNumber = 4;
  inline ::google::protobuf::int32 minorversion() const;
  inline void set_minorversion(::google::protobuf::int32 value);

  // required int32 commitNo = 5 [default = 0];
  inline bool has_commitno() const;
  inline void clear_commitno();
  static const int kCommitNoFieldNumber = 5;
  inline ::google::protobuf::int32 commitno() const;
  inline void set_commitno(::google::protobuf::int32 value);

  // required string buildBranch = 6;
  inline bool has_buildbranch() const;
  inline void clear_buildbranch();
  static const int kBuildBranchFieldNumber = 6;
  inline const ::std::string& buildbranch() const;
  inline void set_buildbranch(const ::std::string& value);
  inline void set_buildbranch(const char* value);
  inline void set_buildbranch(const char* value, size_t size);
  inline ::std::string* mutable_buildbranch();
  inline ::std::string* release_buildbranch();
  inline void set_allocated_buildbranch(::std::string* buildbranch);

  // required string commitSHA = 7;
  inline bool has_commitsha() const;
  inline void clear_commitsha();
  static const int kCommitSHAFieldNumber = 7;
  inline const ::std::string& commitsha() const;
  inline void set_commitsha(const ::std::string& value);
  inline void set_commitsha(const char* value);
  inline void set_commitsha(const char* value, size_t size);
  inline ::std::string* mutable_commitsha();
  inline ::std::string* release_commitsha();
  inline void set_allocated_commitsha(::std::string* commitsha);

  // required string userName = 8;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 8;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required int32 buildNo = 9 [default = 0];
  inline bool has_buildno() const;
  inline void clear_buildno();
  static const int kBuildNoFieldNumber = 9;
  inline ::google::protobuf::int32 buildno() const;
  inline void set_buildno(::google::protobuf::int32 value);

  // required uint32 crc = 10 [default = 0];
  inline bool has_crc() const;
  inline void clear_crc();
  static const int kCrcFieldNumber = 10;
  inline ::google::protobuf::uint32 crc() const;
  inline void set_crc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Network.SoftwareInfo)
 private:
  inline void set_has_softwaretype();
  inline void clear_has_softwaretype();
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();
  inline void set_has_majorversion();
  inline void clear_has_majorversion();
  inline void set_has_minorversion();
  inline void clear_has_minorversion();
  inline void set_has_commitno();
  inline void clear_has_commitno();
  inline void set_has_buildbranch();
  inline void clear_has_buildbranch();
  inline void set_has_commitsha();
  inline void clear_has_commitsha();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_buildno();
  inline void clear_has_buildno();
  inline void set_has_crc();
  inline void clear_has_crc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* equipmentid_;
  ::google::protobuf::int32 softwaretype_;
  ::google::protobuf::int32 majorversion_;
  ::google::protobuf::int32 minorversion_;
  ::google::protobuf::int32 commitno_;
  ::std::string* buildbranch_;
  ::std::string* commitsha_;
  ::std::string* username_;
  ::google::protobuf::int32 buildno_;
  ::google::protobuf::uint32 crc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static SoftwareInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetServiceInfoRequest : public ::google::protobuf::Message {
 public:
  GetServiceInfoRequest();
  virtual ~GetServiceInfoRequest();

  GetServiceInfoRequest(const GetServiceInfoRequest& from);

  inline GetServiceInfoRequest& operator=(const GetServiceInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceInfoRequest& default_instance();

  void Swap(GetServiceInfoRequest* other);

  // implements Message ----------------------------------------------

  GetServiceInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServiceInfoRequest& from);
  void MergeFrom(const GetServiceInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetServiceInfoRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetServiceInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class ServiceInfo : public ::google::protobuf::Message {
 public:
  ServiceInfo();
  virtual ~ServiceInfo();

  ServiceInfo(const ServiceInfo& from);

  inline ServiceInfo& operator=(const ServiceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceInfo& default_instance();

  void Swap(ServiceInfo* other);

  // implements Message ----------------------------------------------

  ServiceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceInfo& from);
  void MergeFrom(const ServiceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Network.SoftwareInfo softwareInfo = 1;
  inline bool has_softwareinfo() const;
  inline void clear_softwareinfo();
  static const int kSoftwareInfoFieldNumber = 1;
  inline const ::Network::SoftwareInfo& softwareinfo() const;
  inline ::Network::SoftwareInfo* mutable_softwareinfo();
  inline ::Network::SoftwareInfo* release_softwareinfo();
  inline void set_allocated_softwareinfo(::Network::SoftwareInfo* softwareinfo);

  // optional int64 uptime = 2 [default = 0];
  inline bool has_uptime() const;
  inline void clear_uptime();
  static const int kUptimeFieldNumber = 2;
  inline ::google::protobuf::int64 uptime() const;
  inline void set_uptime(::google::protobuf::int64 value);

  // optional int32 serviceState = 3 [default = 0];
  inline bool has_servicestate() const;
  inline void clear_servicestate();
  static const int kServiceStateFieldNumber = 3;
  inline ::google::protobuf::int32 servicestate() const;
  inline void set_servicestate(::google::protobuf::int32 value);

  // optional int64 serviceUptime = 4 [default = 0];
  inline bool has_serviceuptime() const;
  inline void clear_serviceuptime();
  static const int kServiceUptimeFieldNumber = 4;
  inline ::google::protobuf::int64 serviceuptime() const;
  inline void set_serviceuptime(::google::protobuf::int64 value);

  // optional uint32 clientRequestIP = 5 [default = 0];
  inline bool has_clientrequestip() const;
  inline void clear_clientrequestip();
  static const int kClientRequestIPFieldNumber = 5;
  inline ::google::protobuf::uint32 clientrequestip() const;
  inline void set_clientrequestip(::google::protobuf::uint32 value);

  // optional int32 clientRequestPort = 6 [default = 0];
  inline bool has_clientrequestport() const;
  inline void clear_clientrequestport();
  static const int kClientRequestPortFieldNumber = 6;
  inline ::google::protobuf::int32 clientrequestport() const;
  inline void set_clientrequestport(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.ServiceInfo)
 private:
  inline void set_has_softwareinfo();
  inline void clear_has_softwareinfo();
  inline void set_has_uptime();
  inline void clear_has_uptime();
  inline void set_has_servicestate();
  inline void clear_has_servicestate();
  inline void set_has_serviceuptime();
  inline void clear_has_serviceuptime();
  inline void set_has_clientrequestip();
  inline void clear_has_clientrequestip();
  inline void set_has_clientrequestport();
  inline void clear_has_clientrequestport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Network::SoftwareInfo* softwareinfo_;
  ::google::protobuf::int64 uptime_;
  ::google::protobuf::int64 serviceuptime_;
  ::google::protobuf::int32 servicestate_;
  ::google::protobuf::uint32 clientrequestip_;
  ::google::protobuf::int32 clientrequestport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static ServiceInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetServiceInfoReply : public ::google::protobuf::Message {
 public:
  GetServiceInfoReply();
  virtual ~GetServiceInfoReply();

  GetServiceInfoReply(const GetServiceInfoReply& from);

  inline GetServiceInfoReply& operator=(const GetServiceInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceInfoReply& default_instance();

  void Swap(GetServiceInfoReply* other);

  // implements Message ----------------------------------------------

  GetServiceInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServiceInfoReply& from);
  void MergeFrom(const GetServiceInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // required .Network.ServiceInfo serviceInfo = 2;
  inline bool has_serviceinfo() const;
  inline void clear_serviceinfo();
  static const int kServiceInfoFieldNumber = 2;
  inline const ::Network::ServiceInfo& serviceinfo() const;
  inline ::Network::ServiceInfo* mutable_serviceinfo();
  inline ::Network::ServiceInfo* release_serviceinfo();
  inline void set_allocated_serviceinfo(::Network::ServiceInfo* serviceinfo);

  // @@protoc_insertion_point(class_scope:Network.GetServiceInfoReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_serviceinfo();
  inline void clear_has_serviceinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Network::ServiceInfo* serviceinfo_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetServiceInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class ConfigurationServiceState : public ::google::protobuf::Message {
 public:
  ConfigurationServiceState();
  virtual ~ConfigurationServiceState();

  ConfigurationServiceState(const ConfigurationServiceState& from);

  inline ConfigurationServiceState& operator=(const ConfigurationServiceState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigurationServiceState& default_instance();

  void Swap(ConfigurationServiceState* other);

  // implements Message ----------------------------------------------

  ConfigurationServiceState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigurationServiceState& from);
  void MergeFrom(const ConfigurationServiceState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string currentBuildDirectory = 1;
  inline bool has_currentbuilddirectory() const;
  inline void clear_currentbuilddirectory();
  static const int kCurrentBuildDirectoryFieldNumber = 1;
  inline const ::std::string& currentbuilddirectory() const;
  inline void set_currentbuilddirectory(const ::std::string& value);
  inline void set_currentbuilddirectory(const char* value);
  inline void set_currentbuilddirectory(const char* value, size_t size);
  inline ::std::string* mutable_currentbuilddirectory();
  inline ::std::string* release_currentbuilddirectory();
  inline void set_allocated_currentbuilddirectory(::std::string* currentbuilddirectory);

  // required int32 checkBuildAttemptQuantity = 2;
  inline bool has_checkbuildattemptquantity() const;
  inline void clear_checkbuildattemptquantity();
  static const int kCheckBuildAttemptQuantityFieldNumber = 2;
  inline ::google::protobuf::int32 checkbuildattemptquantity() const;
  inline void set_checkbuildattemptquantity(::google::protobuf::int32 value);

  // required int32 buildCheckerState = 3;
  inline bool has_buildcheckerstate() const;
  inline void clear_buildcheckerstate();
  static const int kBuildCheckerStateFieldNumber = 3;
  inline ::google::protobuf::int32 buildcheckerstate() const;
  inline void set_buildcheckerstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.ConfigurationServiceState)
 private:
  inline void set_has_currentbuilddirectory();
  inline void clear_has_currentbuilddirectory();
  inline void set_has_checkbuildattemptquantity();
  inline void clear_has_checkbuildattemptquantity();
  inline void set_has_buildcheckerstate();
  inline void clear_has_buildcheckerstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* currentbuilddirectory_;
  ::google::protobuf::int32 checkbuildattemptquantity_;
  ::google::protobuf::int32 buildcheckerstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static ConfigurationServiceState* default_instance_;
};
// -------------------------------------------------------------------

class ServiceClientInfo : public ::google::protobuf::Message {
 public:
  ServiceClientInfo();
  virtual ~ServiceClientInfo();

  ServiceClientInfo(const ServiceClientInfo& from);

  inline ServiceClientInfo& operator=(const ServiceClientInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceClientInfo& default_instance();

  void Swap(ServiceClientInfo* other);

  // implements Message ----------------------------------------------

  ServiceClientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceClientInfo& from);
  void MergeFrom(const ServiceClientInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline ::google::protobuf::int32 ip() const;
  inline void set_ip(::google::protobuf::int32 value);

  // required int64 uptime = 5;
  inline bool has_uptime() const;
  inline void clear_uptime();
  static const int kUptimeFieldNumber = 5;
  inline ::google::protobuf::int64 uptime() const;
  inline void set_uptime(::google::protobuf::int64 value);

  // required bool isActual = 6;
  inline bool has_isactual() const;
  inline void clear_isactual();
  static const int kIsActualFieldNumber = 6;
  inline bool isactual() const;
  inline void set_isactual(bool value);

  // required int64 replyQuantity = 7;
  inline bool has_replyquantity() const;
  inline void clear_replyquantity();
  static const int kReplyQuantityFieldNumber = 7;
  inline ::google::protobuf::int64 replyquantity() const;
  inline void set_replyquantity(::google::protobuf::int64 value);

  // required .Network.SoftwareInfo softwareInfo = 11;
  inline bool has_softwareinfo() const;
  inline void clear_softwareinfo();
  static const int kSoftwareInfoFieldNumber = 11;
  inline const ::Network::SoftwareInfo& softwareinfo() const;
  inline ::Network::SoftwareInfo* mutable_softwareinfo();
  inline ::Network::SoftwareInfo* release_softwareinfo();
  inline void set_allocated_softwareinfo(::Network::SoftwareInfo* softwareinfo);

  // @@protoc_insertion_point(class_scope:Network.ServiceClientInfo)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_uptime();
  inline void clear_has_uptime();
  inline void set_has_isactual();
  inline void clear_has_isactual();
  inline void set_has_replyquantity();
  inline void clear_has_replyquantity();
  inline void set_has_softwareinfo();
  inline void clear_has_softwareinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 uptime_;
  ::google::protobuf::int32 ip_;
  bool isactual_;
  ::google::protobuf::int64 replyquantity_;
  ::Network::SoftwareInfo* softwareinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static ServiceClientInfo* default_instance_;
};
// -------------------------------------------------------------------

class ServiceClients : public ::google::protobuf::Message {
 public:
  ServiceClients();
  virtual ~ServiceClients();

  ServiceClients(const ServiceClients& from);

  inline ServiceClients& operator=(const ServiceClients& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceClients& default_instance();

  void Swap(ServiceClients* other);

  // implements Message ----------------------------------------------

  ServiceClients* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServiceClients& from);
  void MergeFrom(const ServiceClients& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Network.ServiceClientInfo clients = 1;
  inline int clients_size() const;
  inline void clear_clients();
  static const int kClientsFieldNumber = 1;
  inline const ::Network::ServiceClientInfo& clients(int index) const;
  inline ::Network::ServiceClientInfo* mutable_clients(int index);
  inline ::Network::ServiceClientInfo* add_clients();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::ServiceClientInfo >&
      clients() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::ServiceClientInfo >*
      mutable_clients();

  // @@protoc_insertion_point(class_scope:Network.ServiceClients)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::ServiceClientInfo > clients_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static ServiceClients* default_instance_;
};
// -------------------------------------------------------------------

class BuildInfo : public ::google::protobuf::Message {
 public:
  BuildInfo();
  virtual ~BuildInfo();

  BuildInfo(const BuildInfo& from);

  inline BuildInfo& operator=(const BuildInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildInfo& default_instance();

  void Swap(BuildInfo* other);

  // implements Message ----------------------------------------------

  BuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildInfo& from);
  void MergeFrom(const BuildInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string project = 1;
  inline bool has_project() const;
  inline void clear_project();
  static const int kProjectFieldNumber = 1;
  inline const ::std::string& project() const;
  inline void set_project(const ::std::string& value);
  inline void set_project(const char* value);
  inline void set_project(const char* value, size_t size);
  inline ::std::string* mutable_project();
  inline ::std::string* release_project();
  inline void set_allocated_project(::std::string* project);

  // required int32 id = 2 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required bool release = 3 [default = false];
  inline bool has_release() const;
  inline void clear_release();
  static const int kReleaseFieldNumber = 3;
  inline bool release() const;
  inline void set_release(bool value);

  // required int64 date = 4;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 4;
  inline ::google::protobuf::int64 date() const;
  inline void set_date(::google::protobuf::int64 value);

  // required int32 changeset = 5 [default = 0];
  inline bool has_changeset() const;
  inline void clear_changeset();
  static const int kChangesetFieldNumber = 5;
  inline ::google::protobuf::int32 changeset() const;
  inline void set_changeset(::google::protobuf::int32 value);

  // required string user = 6;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 6;
  inline const ::std::string& user() const;
  inline void set_user(const ::std::string& value);
  inline void set_user(const char* value);
  inline void set_user(const char* value, size_t size);
  inline ::std::string* mutable_user();
  inline ::std::string* release_user();
  inline void set_allocated_user(::std::string* user);

  // required string workstation = 7;
  inline bool has_workstation() const;
  inline void clear_workstation();
  static const int kWorkstationFieldNumber = 7;
  inline const ::std::string& workstation() const;
  inline void set_workstation(const ::std::string& value);
  inline void set_workstation(const char* value);
  inline void set_workstation(const char* value, size_t size);
  inline ::std::string* mutable_workstation();
  inline ::std::string* release_workstation();
  inline void set_allocated_workstation(::std::string* workstation);

  // @@protoc_insertion_point(class_scope:Network.BuildInfo)
 private:
  inline void set_has_project();
  inline void clear_has_project();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_release();
  inline void clear_has_release();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_changeset();
  inline void clear_has_changeset();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_workstation();
  inline void clear_has_workstation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* project_;
  ::google::protobuf::int32 id_;
  bool release_;
  ::google::protobuf::int64 date_;
  ::std::string* user_;
  ::std::string* workstation_;
  ::google::protobuf::int32 changeset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static BuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class ConfigurationServiceSettings : public ::google::protobuf::Message {
 public:
  ConfigurationServiceSettings();
  virtual ~ConfigurationServiceSettings();

  ConfigurationServiceSettings(const ConfigurationServiceSettings& from);

  inline ConfigurationServiceSettings& operator=(const ConfigurationServiceSettings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigurationServiceSettings& default_instance();

  void Swap(ConfigurationServiceSettings* other);

  // implements Message ----------------------------------------------

  ConfigurationServiceSettings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigurationServiceSettings& from);
  void MergeFrom(const ConfigurationServiceSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string equipmentID = 1;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentIDFieldNumber = 1;
  inline const ::std::string& equipmentid() const;
  inline void set_equipmentid(const ::std::string& value);
  inline void set_equipmentid(const char* value);
  inline void set_equipmentid(const char* value, size_t size);
  inline ::std::string* mutable_equipmentid();
  inline ::std::string* release_equipmentid();
  inline void set_allocated_equipmentid(::std::string* equipmentid);

  // required string autoloadBuildPath = 2;
  inline bool has_autoloadbuildpath() const;
  inline void clear_autoloadbuildpath();
  static const int kAutoloadBuildPathFieldNumber = 2;
  inline const ::std::string& autoloadbuildpath() const;
  inline void set_autoloadbuildpath(const ::std::string& value);
  inline void set_autoloadbuildpath(const char* value);
  inline void set_autoloadbuildpath(const char* value, size_t size);
  inline ::std::string* mutable_autoloadbuildpath();
  inline ::std::string* release_autoloadbuildpath();
  inline void set_allocated_autoloadbuildpath(::std::string* autoloadbuildpath);

  // required string workDirectory = 3;
  inline bool has_workdirectory() const;
  inline void clear_workdirectory();
  static const int kWorkDirectoryFieldNumber = 3;
  inline const ::std::string& workdirectory() const;
  inline void set_workdirectory(const ::std::string& value);
  inline void set_workdirectory(const char* value);
  inline void set_workdirectory(const char* value, size_t size);
  inline ::std::string* mutable_workdirectory();
  inline ::std::string* release_workdirectory();
  inline void set_allocated_workdirectory(::std::string* workdirectory);

  // @@protoc_insertion_point(class_scope:Network.ConfigurationServiceSettings)
 private:
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();
  inline void set_has_autoloadbuildpath();
  inline void clear_has_autoloadbuildpath();
  inline void set_has_workdirectory();
  inline void clear_has_workdirectory();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* equipmentid_;
  ::std::string* autoloadbuildpath_;
  ::std::string* workdirectory_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static ConfigurationServiceSettings* default_instance_;
};
// -------------------------------------------------------------------

class GetTuningSourcesInfo : public ::google::protobuf::Message {
 public:
  GetTuningSourcesInfo();
  virtual ~GetTuningSourcesInfo();

  GetTuningSourcesInfo(const GetTuningSourcesInfo& from);

  inline GetTuningSourcesInfo& operator=(const GetTuningSourcesInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTuningSourcesInfo& default_instance();

  void Swap(GetTuningSourcesInfo* other);

  // implements Message ----------------------------------------------

  GetTuningSourcesInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTuningSourcesInfo& from);
  void MergeFrom(const GetTuningSourcesInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetTuningSourcesInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetTuningSourcesInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetTuningSourcesInfoReply : public ::google::protobuf::Message {
 public:
  GetTuningSourcesInfoReply();
  virtual ~GetTuningSourcesInfoReply();

  GetTuningSourcesInfoReply(const GetTuningSourcesInfoReply& from);

  inline GetTuningSourcesInfoReply& operator=(const GetTuningSourcesInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTuningSourcesInfoReply& default_instance();

  void Swap(GetTuningSourcesInfoReply* other);

  // implements Message ----------------------------------------------

  GetTuningSourcesInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTuningSourcesInfoReply& from);
  void MergeFrom(const GetTuningSourcesInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.DataSourceInfo tuningSourceInfo = 2;
  inline int tuningsourceinfo_size() const;
  inline void clear_tuningsourceinfo();
  static const int kTuningSourceInfoFieldNumber = 2;
  inline const ::Network::DataSourceInfo& tuningsourceinfo(int index) const;
  inline ::Network::DataSourceInfo* mutable_tuningsourceinfo(int index);
  inline ::Network::DataSourceInfo* add_tuningsourceinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >&
      tuningsourceinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >*
      mutable_tuningsourceinfo();

  // optional bool singleLmControlMode = 3 [default = true];
  inline bool has_singlelmcontrolmode() const;
  inline void clear_singlelmcontrolmode();
  static const int kSingleLmControlModeFieldNumber = 3;
  inline bool singlelmcontrolmode() const;
  inline void set_singlelmcontrolmode(bool value);

  // @@protoc_insertion_point(class_scope:Network.GetTuningSourcesInfoReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_singlelmcontrolmode();
  inline void clear_has_singlelmcontrolmode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo > tuningsourceinfo_;
  ::google::protobuf::int32 error_;
  bool singlelmcontrolmode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetTuningSourcesInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class GetTuningSourcesStates : public ::google::protobuf::Message {
 public:
  GetTuningSourcesStates();
  virtual ~GetTuningSourcesStates();

  GetTuningSourcesStates(const GetTuningSourcesStates& from);

  inline GetTuningSourcesStates& operator=(const GetTuningSourcesStates& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTuningSourcesStates& default_instance();

  void Swap(GetTuningSourcesStates* other);

  // implements Message ----------------------------------------------

  GetTuningSourcesStates* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTuningSourcesStates& from);
  void MergeFrom(const GetTuningSourcesStates& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.GetTuningSourcesStates)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetTuningSourcesStates* default_instance_;
};
// -------------------------------------------------------------------

class TuningSourceState : public ::google::protobuf::Message {
 public:
  TuningSourceState();
  virtual ~TuningSourceState();

  TuningSourceState(const TuningSourceState& from);

  inline TuningSourceState& operator=(const TuningSourceState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSourceState& default_instance();

  void Swap(TuningSourceState* other);

  // implements Message ----------------------------------------------

  TuningSourceState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSourceState& from);
  void MergeFrom(const TuningSourceState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sourceID = 1 [default = 0];
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIDFieldNumber = 1;
  inline ::google::protobuf::uint64 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint64 value);

  // optional bool isReply = 2 [default = false];
  inline bool has_isreply() const;
  inline void clear_isreply();
  static const int kIsReplyFieldNumber = 2;
  inline bool isreply() const;
  inline void set_isreply(bool value);

  // optional int64 requestCount = 3 [default = 0];
  inline bool has_requestcount() const;
  inline void clear_requestcount();
  static const int kRequestCountFieldNumber = 3;
  inline ::google::protobuf::int64 requestcount() const;
  inline void set_requestcount(::google::protobuf::int64 value);

  // optional int64 replyCount = 4 [default = 0];
  inline bool has_replycount() const;
  inline void clear_replycount();
  static const int kReplyCountFieldNumber = 4;
  inline ::google::protobuf::int64 replycount() const;
  inline void set_replycount(::google::protobuf::int64 value);

  // optional int32 commandQueueSize = 5 [default = 0];
  inline bool has_commandqueuesize() const;
  inline void clear_commandqueuesize();
  static const int kCommandQueueSizeFieldNumber = 5;
  inline ::google::protobuf::int32 commandqueuesize() const;
  inline void set_commandqueuesize(::google::protobuf::int32 value);

  // optional int64 errUntimelyReplay = 6 [default = 0];
  inline bool has_erruntimelyreplay() const;
  inline void clear_erruntimelyreplay();
  static const int kErrUntimelyReplayFieldNumber = 6;
  inline ::google::protobuf::int64 erruntimelyreplay() const;
  inline void set_erruntimelyreplay(::google::protobuf::int64 value);

  // optional int64 errSent = 7 [default = 0];
  inline bool has_errsent() const;
  inline void clear_errsent();
  static const int kErrSentFieldNumber = 7;
  inline ::google::protobuf::int64 errsent() const;
  inline void set_errsent(::google::protobuf::int64 value);

  // optional int64 errPartialSent = 8 [default = 0];
  inline bool has_errpartialsent() const;
  inline void clear_errpartialsent();
  static const int kErrPartialSentFieldNumber = 8;
  inline ::google::protobuf::int64 errpartialsent() const;
  inline void set_errpartialsent(::google::protobuf::int64 value);

  // optional int64 errReplySize = 9 [default = 0];
  inline bool has_errreplysize() const;
  inline void clear_errreplysize();
  static const int kErrReplySizeFieldNumber = 9;
  inline ::google::protobuf::int64 errreplysize() const;
  inline void set_errreplysize(::google::protobuf::int64 value);

  // optional int64 errNoReply = 10 [default = 0];
  inline bool has_errnoreply() const;
  inline void clear_errnoreply();
  static const int kErrNoReplyFieldNumber = 10;
  inline ::google::protobuf::int64 errnoreply() const;
  inline void set_errnoreply(::google::protobuf::int64 value);

  // optional int64 errRupProtocolVersion = 11 [default = 0];
  inline bool has_errrupprotocolversion() const;
  inline void clear_errrupprotocolversion();
  static const int kErrRupProtocolVersionFieldNumber = 11;
  inline ::google::protobuf::int64 errrupprotocolversion() const;
  inline void set_errrupprotocolversion(::google::protobuf::int64 value);

  // optional int64 errRupFrameSize = 12 [default = 0];
  inline bool has_errrupframesize() const;
  inline void clear_errrupframesize();
  static const int kErrRupFrameSizeFieldNumber = 12;
  inline ::google::protobuf::int64 errrupframesize() const;
  inline void set_errrupframesize(::google::protobuf::int64 value);

  // optional int64 errRupNonTuningData = 13 [default = 0];
  inline bool has_errrupnontuningdata() const;
  inline void clear_errrupnontuningdata();
  static const int kErrRupNonTuningDataFieldNumber = 13;
  inline ::google::protobuf::int64 errrupnontuningdata() const;
  inline void set_errrupnontuningdata(::google::protobuf::int64 value);

  // optional int64 errRupModuleType = 14 [default = 0];
  inline bool has_errrupmoduletype() const;
  inline void clear_errrupmoduletype();
  static const int kErrRupModuleTypeFieldNumber = 14;
  inline ::google::protobuf::int64 errrupmoduletype() const;
  inline void set_errrupmoduletype(::google::protobuf::int64 value);

  // optional int64 errRupFramesQuantity = 15 [default = 0];
  inline bool has_errrupframesquantity() const;
  inline void clear_errrupframesquantity();
  static const int kErrRupFramesQuantityFieldNumber = 15;
  inline ::google::protobuf::int64 errrupframesquantity() const;
  inline void set_errrupframesquantity(::google::protobuf::int64 value);

  // optional int64 errRupFrameNumber = 16 [default = 0];
  inline bool has_errrupframenumber() const;
  inline void clear_errrupframenumber();
  static const int kErrRupFrameNumberFieldNumber = 16;
  inline ::google::protobuf::int64 errrupframenumber() const;
  inline void set_errrupframenumber(::google::protobuf::int64 value);

  // optional int64 errFotipProtocolVersion = 17 [default = 0];
  inline bool has_errfotipprotocolversion() const;
  inline void clear_errfotipprotocolversion();
  static const int kErrFotipProtocolVersionFieldNumber = 17;
  inline ::google::protobuf::int64 errfotipprotocolversion() const;
  inline void set_errfotipprotocolversion(::google::protobuf::int64 value);

  // optional int64 errFotipUniqueID = 18 [default = 0];
  inline bool has_errfotipuniqueid() const;
  inline void clear_errfotipuniqueid();
  static const int kErrFotipUniqueIDFieldNumber = 18;
  inline ::google::protobuf::int64 errfotipuniqueid() const;
  inline void set_errfotipuniqueid(::google::protobuf::int64 value);

  // optional int64 errFotipLmNumber = 19 [default = 0];
  inline bool has_errfotiplmnumber() const;
  inline void clear_errfotiplmnumber();
  static const int kErrFotipLmNumberFieldNumber = 19;
  inline ::google::protobuf::int64 errfotiplmnumber() const;
  inline void set_errfotiplmnumber(::google::protobuf::int64 value);

  // optional int64 errFotipSubsystemCode = 20 [default = 0];
  inline bool has_errfotipsubsystemcode() const;
  inline void clear_errfotipsubsystemcode();
  static const int kErrFotipSubsystemCodeFieldNumber = 20;
  inline ::google::protobuf::int64 errfotipsubsystemcode() const;
  inline void set_errfotipsubsystemcode(::google::protobuf::int64 value);

  // optional int64 errFotipOperationCode = 21 [default = 0];
  inline bool has_errfotipoperationcode() const;
  inline void clear_errfotipoperationcode();
  static const int kErrFotipOperationCodeFieldNumber = 21;
  inline ::google::protobuf::int64 errfotipoperationcode() const;
  inline void set_errfotipoperationcode(::google::protobuf::int64 value);

  // optional int64 errFotipFrameSize = 22 [default = 0];
  inline bool has_errfotipframesize() const;
  inline void clear_errfotipframesize();
  static const int kErrFotipFrameSizeFieldNumber = 22;
  inline ::google::protobuf::int64 errfotipframesize() const;
  inline void set_errfotipframesize(::google::protobuf::int64 value);

  // optional int64 errFotipRomSize = 23 [default = 0];
  inline bool has_errfotipromsize() const;
  inline void clear_errfotipromsize();
  static const int kErrFotipRomSizeFieldNumber = 23;
  inline ::google::protobuf::int64 errfotipromsize() const;
  inline void set_errfotipromsize(::google::protobuf::int64 value);

  // optional int64 errFotipRomFrameSize = 24 [default = 0];
  inline bool has_errfotipromframesize() const;
  inline void clear_errfotipromframesize();
  static const int kErrFotipRomFrameSizeFieldNumber = 24;
  inline ::google::protobuf::int64 errfotipromframesize() const;
  inline void set_errfotipromframesize(::google::protobuf::int64 value);

  // optional int64 fotipFlagBoundsCheckSuccess = 25 [default = 0];
  inline bool has_fotipflagboundschecksuccess() const;
  inline void clear_fotipflagboundschecksuccess();
  static const int kFotipFlagBoundsCheckSuccessFieldNumber = 25;
  inline ::google::protobuf::int64 fotipflagboundschecksuccess() const;
  inline void set_fotipflagboundschecksuccess(::google::protobuf::int64 value);

  // optional int64 fotipFlagWriteSuccess = 26 [default = 0];
  inline bool has_fotipflagwritesuccess() const;
  inline void clear_fotipflagwritesuccess();
  static const int kFotipFlagWriteSuccessFieldNumber = 26;
  inline ::google::protobuf::int64 fotipflagwritesuccess() const;
  inline void set_fotipflagwritesuccess(::google::protobuf::int64 value);

  // optional int64 fotipFlagDataTypeErr = 27 [default = 0];
  inline bool has_fotipflagdatatypeerr() const;
  inline void clear_fotipflagdatatypeerr();
  static const int kFotipFlagDataTypeErrFieldNumber = 27;
  inline ::google::protobuf::int64 fotipflagdatatypeerr() const;
  inline void set_fotipflagdatatypeerr(::google::protobuf::int64 value);

  // optional int64 fotipFlagOpCodeErr = 28 [default = 0];
  inline bool has_fotipflagopcodeerr() const;
  inline void clear_fotipflagopcodeerr();
  static const int kFotipFlagOpCodeErrFieldNumber = 28;
  inline ::google::protobuf::int64 fotipflagopcodeerr() const;
  inline void set_fotipflagopcodeerr(::google::protobuf::int64 value);

  // optional int64 fotipFlagStartAddrErr = 29 [default = 0];
  inline bool has_fotipflagstartaddrerr() const;
  inline void clear_fotipflagstartaddrerr();
  static const int kFotipFlagStartAddrErrFieldNumber = 29;
  inline ::google::protobuf::int64 fotipflagstartaddrerr() const;
  inline void set_fotipflagstartaddrerr(::google::protobuf::int64 value);

  // optional int64 fotipFlagRomSizeErr = 30 [default = 0];
  inline bool has_fotipflagromsizeerr() const;
  inline void clear_fotipflagromsizeerr();
  static const int kFotipFlagRomSizeErrFieldNumber = 30;
  inline ::google::protobuf::int64 fotipflagromsizeerr() const;
  inline void set_fotipflagromsizeerr(::google::protobuf::int64 value);

  // optional int64 fotipFlagRomFrameSizeErr = 31 [default = 0];
  inline bool has_fotipflagromframesizeerr() const;
  inline void clear_fotipflagromframesizeerr();
  static const int kFotipFlagRomFrameSizeErrFieldNumber = 31;
  inline ::google::protobuf::int64 fotipflagromframesizeerr() const;
  inline void set_fotipflagromframesizeerr(::google::protobuf::int64 value);

  // optional int64 fotipFlagFrameSizeErr = 32 [default = 0];
  inline bool has_fotipflagframesizeerr() const;
  inline void clear_fotipflagframesizeerr();
  static const int kFotipFlagFrameSizeErrFieldNumber = 32;
  inline ::google::protobuf::int64 fotipflagframesizeerr() const;
  inline void set_fotipflagframesizeerr(::google::protobuf::int64 value);

  // optional int64 fotipFlagProtocolVersionErr = 33 [default = 0];
  inline bool has_fotipflagprotocolversionerr() const;
  inline void clear_fotipflagprotocolversionerr();
  static const int kFotipFlagProtocolVersionErrFieldNumber = 33;
  inline ::google::protobuf::int64 fotipflagprotocolversionerr() const;
  inline void set_fotipflagprotocolversionerr(::google::protobuf::int64 value);

  // optional int64 fotipFlagSubsystemKeyErr = 34 [default = 0];
  inline bool has_fotipflagsubsystemkeyerr() const;
  inline void clear_fotipflagsubsystemkeyerr();
  static const int kFotipFlagSubsystemKeyErrFieldNumber = 34;
  inline ::google::protobuf::int64 fotipflagsubsystemkeyerr() const;
  inline void set_fotipflagsubsystemkeyerr(::google::protobuf::int64 value);

  // optional int64 fotipFlagUniueIDErr = 35 [default = 0];
  inline bool has_fotipflaguniueiderr() const;
  inline void clear_fotipflaguniueiderr();
  static const int kFotipFlagUniueIDErrFieldNumber = 35;
  inline ::google::protobuf::int64 fotipflaguniueiderr() const;
  inline void set_fotipflaguniueiderr(::google::protobuf::int64 value);

  // optional int64 fotipFlagOffsetErr = 36 [default = 0];
  inline bool has_fotipflagoffseterr() const;
  inline void clear_fotipflagoffseterr();
  static const int kFotipFlagOffsetErrFieldNumber = 36;
  inline ::google::protobuf::int64 fotipflagoffseterr() const;
  inline void set_fotipflagoffseterr(::google::protobuf::int64 value);

  // optional int64 fotipFlagApplySuccess = 37 [default = 0];
  inline bool has_fotipflagapplysuccess() const;
  inline void clear_fotipflagapplysuccess();
  static const int kFotipFlagApplySuccessFieldNumber = 37;
  inline ::google::protobuf::int64 fotipflagapplysuccess() const;
  inline void set_fotipflagapplysuccess(::google::protobuf::int64 value);

  // optional int64 fotipFlagSetSOR = 38 [default = 0];
  inline bool has_fotipflagsetsor() const;
  inline void clear_fotipflagsetsor();
  static const int kFotipFlagSetSORFieldNumber = 38;
  inline ::google::protobuf::int64 fotipflagsetsor() const;
  inline void set_fotipflagsetsor(::google::protobuf::int64 value);

  // optional int64 errAnalogLowBoundCheck = 39 [default = 0];
  inline bool has_erranaloglowboundcheck() const;
  inline void clear_erranaloglowboundcheck();
  static const int kErrAnalogLowBoundCheckFieldNumber = 39;
  inline ::google::protobuf::int64 erranaloglowboundcheck() const;
  inline void set_erranaloglowboundcheck(::google::protobuf::int64 value);

  // optional int64 errAnalogHighBoundCheck = 40 [default = 0];
  inline bool has_erranaloghighboundcheck() const;
  inline void clear_erranaloghighboundcheck();
  static const int kErrAnalogHighBoundCheckFieldNumber = 40;
  inline ::google::protobuf::int64 erranaloghighboundcheck() const;
  inline void set_erranaloghighboundcheck(::google::protobuf::int64 value);

  // optional int64 errRupCRC = 41 [default = 0];
  inline bool has_errrupcrc() const;
  inline void clear_errrupcrc();
  static const int kErrRupCRCFieldNumber = 41;
  inline ::google::protobuf::int64 errrupcrc() const;
  inline void set_errrupcrc(::google::protobuf::int64 value);

  // optional bool controlIsActive = 42 [default = false];
  inline bool has_controlisactive() const;
  inline void clear_controlisactive();
  static const int kControlIsActiveFieldNumber = 42;
  inline bool controlisactive() const;
  inline void set_controlisactive(bool value);

  // optional bool setSOR = 43 [default = false];
  inline bool has_setsor() const;
  inline void clear_setsor();
  static const int kSetSORFieldNumber = 43;
  inline bool setsor() const;
  inline void set_setsor(bool value);

  // @@protoc_insertion_point(class_scope:Network.TuningSourceState)
 private:
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_isreply();
  inline void clear_has_isreply();
  inline void set_has_requestcount();
  inline void clear_has_requestcount();
  inline void set_has_replycount();
  inline void clear_has_replycount();
  inline void set_has_commandqueuesize();
  inline void clear_has_commandqueuesize();
  inline void set_has_erruntimelyreplay();
  inline void clear_has_erruntimelyreplay();
  inline void set_has_errsent();
  inline void clear_has_errsent();
  inline void set_has_errpartialsent();
  inline void clear_has_errpartialsent();
  inline void set_has_errreplysize();
  inline void clear_has_errreplysize();
  inline void set_has_errnoreply();
  inline void clear_has_errnoreply();
  inline void set_has_errrupprotocolversion();
  inline void clear_has_errrupprotocolversion();
  inline void set_has_errrupframesize();
  inline void clear_has_errrupframesize();
  inline void set_has_errrupnontuningdata();
  inline void clear_has_errrupnontuningdata();
  inline void set_has_errrupmoduletype();
  inline void clear_has_errrupmoduletype();
  inline void set_has_errrupframesquantity();
  inline void clear_has_errrupframesquantity();
  inline void set_has_errrupframenumber();
  inline void clear_has_errrupframenumber();
  inline void set_has_errfotipprotocolversion();
  inline void clear_has_errfotipprotocolversion();
  inline void set_has_errfotipuniqueid();
  inline void clear_has_errfotipuniqueid();
  inline void set_has_errfotiplmnumber();
  inline void clear_has_errfotiplmnumber();
  inline void set_has_errfotipsubsystemcode();
  inline void clear_has_errfotipsubsystemcode();
  inline void set_has_errfotipoperationcode();
  inline void clear_has_errfotipoperationcode();
  inline void set_has_errfotipframesize();
  inline void clear_has_errfotipframesize();
  inline void set_has_errfotipromsize();
  inline void clear_has_errfotipromsize();
  inline void set_has_errfotipromframesize();
  inline void clear_has_errfotipromframesize();
  inline void set_has_fotipflagboundschecksuccess();
  inline void clear_has_fotipflagboundschecksuccess();
  inline void set_has_fotipflagwritesuccess();
  inline void clear_has_fotipflagwritesuccess();
  inline void set_has_fotipflagdatatypeerr();
  inline void clear_has_fotipflagdatatypeerr();
  inline void set_has_fotipflagopcodeerr();
  inline void clear_has_fotipflagopcodeerr();
  inline void set_has_fotipflagstartaddrerr();
  inline void clear_has_fotipflagstartaddrerr();
  inline void set_has_fotipflagromsizeerr();
  inline void clear_has_fotipflagromsizeerr();
  inline void set_has_fotipflagromframesizeerr();
  inline void clear_has_fotipflagromframesizeerr();
  inline void set_has_fotipflagframesizeerr();
  inline void clear_has_fotipflagframesizeerr();
  inline void set_has_fotipflagprotocolversionerr();
  inline void clear_has_fotipflagprotocolversionerr();
  inline void set_has_fotipflagsubsystemkeyerr();
  inline void clear_has_fotipflagsubsystemkeyerr();
  inline void set_has_fotipflaguniueiderr();
  inline void clear_has_fotipflaguniueiderr();
  inline void set_has_fotipflagoffseterr();
  inline void clear_has_fotipflagoffseterr();
  inline void set_has_fotipflagapplysuccess();
  inline void clear_has_fotipflagapplysuccess();
  inline void set_has_fotipflagsetsor();
  inline void clear_has_fotipflagsetsor();
  inline void set_has_erranaloglowboundcheck();
  inline void clear_has_erranaloglowboundcheck();
  inline void set_has_erranaloghighboundcheck();
  inline void clear_has_erranaloghighboundcheck();
  inline void set_has_errrupcrc();
  inline void clear_has_errrupcrc();
  inline void set_has_controlisactive();
  inline void clear_has_controlisactive();
  inline void set_has_setsor();
  inline void clear_has_setsor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sourceid_;
  ::google::protobuf::int64 requestcount_;
  ::google::protobuf::int64 replycount_;
  ::google::protobuf::int64 erruntimelyreplay_;
  ::google::protobuf::int64 errsent_;
  ::google::protobuf::int64 errpartialsent_;
  ::google::protobuf::int64 errreplysize_;
  ::google::protobuf::int64 errnoreply_;
  ::google::protobuf::int64 errrupprotocolversion_;
  ::google::protobuf::int64 errrupframesize_;
  ::google::protobuf::int64 errrupnontuningdata_;
  ::google::protobuf::int64 errrupmoduletype_;
  ::google::protobuf::int64 errrupframesquantity_;
  ::google::protobuf::int64 errrupframenumber_;
  ::google::protobuf::int64 errfotipprotocolversion_;
  ::google::protobuf::int64 errfotipuniqueid_;
  ::google::protobuf::int64 errfotiplmnumber_;
  ::google::protobuf::int64 errfotipsubsystemcode_;
  ::google::protobuf::int64 errfotipoperationcode_;
  ::google::protobuf::int64 errfotipframesize_;
  ::google::protobuf::int32 commandqueuesize_;
  bool isreply_;
  bool controlisactive_;
  bool setsor_;
  ::google::protobuf::int64 errfotipromsize_;
  ::google::protobuf::int64 errfotipromframesize_;
  ::google::protobuf::int64 fotipflagboundschecksuccess_;
  ::google::protobuf::int64 fotipflagwritesuccess_;
  ::google::protobuf::int64 fotipflagdatatypeerr_;
  ::google::protobuf::int64 fotipflagopcodeerr_;
  ::google::protobuf::int64 fotipflagstartaddrerr_;
  ::google::protobuf::int64 fotipflagromsizeerr_;
  ::google::protobuf::int64 fotipflagromframesizeerr_;
  ::google::protobuf::int64 fotipflagframesizeerr_;
  ::google::protobuf::int64 fotipflagprotocolversionerr_;
  ::google::protobuf::int64 fotipflagsubsystemkeyerr_;
  ::google::protobuf::int64 fotipflaguniueiderr_;
  ::google::protobuf::int64 fotipflagoffseterr_;
  ::google::protobuf::int64 fotipflagapplysuccess_;
  ::google::protobuf::int64 fotipflagsetsor_;
  ::google::protobuf::int64 erranaloglowboundcheck_;
  ::google::protobuf::int64 erranaloghighboundcheck_;
  ::google::protobuf::int64 errrupcrc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(43 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSourceState* default_instance_;
};
// -------------------------------------------------------------------

class GetTuningSourcesStatesReply : public ::google::protobuf::Message {
 public:
  GetTuningSourcesStatesReply();
  virtual ~GetTuningSourcesStatesReply();

  GetTuningSourcesStatesReply(const GetTuningSourcesStatesReply& from);

  inline GetTuningSourcesStatesReply& operator=(const GetTuningSourcesStatesReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTuningSourcesStatesReply& default_instance();

  void Swap(GetTuningSourcesStatesReply* other);

  // implements Message ----------------------------------------------

  GetTuningSourcesStatesReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTuningSourcesStatesReply& from);
  void MergeFrom(const GetTuningSourcesStatesReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.TuningSourceState tuningSourcesState = 2;
  inline int tuningsourcesstate_size() const;
  inline void clear_tuningsourcesstate();
  static const int kTuningSourcesStateFieldNumber = 2;
  inline const ::Network::TuningSourceState& tuningsourcesstate(int index) const;
  inline ::Network::TuningSourceState* mutable_tuningsourcesstate(int index);
  inline ::Network::TuningSourceState* add_tuningsourcesstate();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::TuningSourceState >&
      tuningsourcesstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::TuningSourceState >*
      mutable_tuningsourcesstate();

  // optional bool singleLmControlMode = 3 [default = true];
  inline bool has_singlelmcontrolmode() const;
  inline void clear_singlelmcontrolmode();
  static const int kSingleLmControlModeFieldNumber = 3;
  inline bool singlelmcontrolmode() const;
  inline void set_singlelmcontrolmode(bool value);

  // @@protoc_insertion_point(class_scope:Network.GetTuningSourcesStatesReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_singlelmcontrolmode();
  inline void clear_has_singlelmcontrolmode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::TuningSourceState > tuningsourcesstate_;
  ::google::protobuf::int32 error_;
  bool singlelmcontrolmode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetTuningSourcesStatesReply* default_instance_;
};
// -------------------------------------------------------------------

class ChangeConrolledTuningSourceRequest : public ::google::protobuf::Message {
 public:
  ChangeConrolledTuningSourceRequest();
  virtual ~ChangeConrolledTuningSourceRequest();

  ChangeConrolledTuningSourceRequest(const ChangeConrolledTuningSourceRequest& from);

  inline ChangeConrolledTuningSourceRequest& operator=(const ChangeConrolledTuningSourceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeConrolledTuningSourceRequest& default_instance();

  void Swap(ChangeConrolledTuningSourceRequest* other);

  // implements Message ----------------------------------------------

  ChangeConrolledTuningSourceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeConrolledTuningSourceRequest& from);
  void MergeFrom(const ChangeConrolledTuningSourceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tuningSourceEquipmentID = 1;
  inline bool has_tuningsourceequipmentid() const;
  inline void clear_tuningsourceequipmentid();
  static const int kTuningSourceEquipmentIDFieldNumber = 1;
  inline const ::std::string& tuningsourceequipmentid() const;
  inline void set_tuningsourceequipmentid(const ::std::string& value);
  inline void set_tuningsourceequipmentid(const char* value);
  inline void set_tuningsourceequipmentid(const char* value, size_t size);
  inline ::std::string* mutable_tuningsourceequipmentid();
  inline ::std::string* release_tuningsourceequipmentid();
  inline void set_allocated_tuningsourceequipmentid(::std::string* tuningsourceequipmentid);

  // optional bool activateControl = 2 [default = false];
  inline bool has_activatecontrol() const;
  inline void clear_activatecontrol();
  static const int kActivateControlFieldNumber = 2;
  inline bool activatecontrol() const;
  inline void set_activatecontrol(bool value);

  // @@protoc_insertion_point(class_scope:Network.ChangeConrolledTuningSourceRequest)
 private:
  inline void set_has_tuningsourceequipmentid();
  inline void clear_has_tuningsourceequipmentid();
  inline void set_has_activatecontrol();
  inline void clear_has_activatecontrol();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* tuningsourceequipmentid_;
  bool activatecontrol_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static ChangeConrolledTuningSourceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ChangeConrolledTuningSourceReply : public ::google::protobuf::Message {
 public:
  ChangeConrolledTuningSourceReply();
  virtual ~ChangeConrolledTuningSourceReply();

  ChangeConrolledTuningSourceReply(const ChangeConrolledTuningSourceReply& from);

  inline ChangeConrolledTuningSourceReply& operator=(const ChangeConrolledTuningSourceReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeConrolledTuningSourceReply& default_instance();

  void Swap(ChangeConrolledTuningSourceReply* other);

  // implements Message ----------------------------------------------

  ChangeConrolledTuningSourceReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeConrolledTuningSourceReply& from);
  void MergeFrom(const ChangeConrolledTuningSourceReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional string controlledTuningSourceEquipmentID = 2;
  inline bool has_controlledtuningsourceequipmentid() const;
  inline void clear_controlledtuningsourceequipmentid();
  static const int kControlledTuningSourceEquipmentIDFieldNumber = 2;
  inline const ::std::string& controlledtuningsourceequipmentid() const;
  inline void set_controlledtuningsourceequipmentid(const ::std::string& value);
  inline void set_controlledtuningsourceequipmentid(const char* value);
  inline void set_controlledtuningsourceequipmentid(const char* value, size_t size);
  inline ::std::string* mutable_controlledtuningsourceequipmentid();
  inline ::std::string* release_controlledtuningsourceequipmentid();
  inline void set_allocated_controlledtuningsourceequipmentid(::std::string* controlledtuningsourceequipmentid);

  // optional bool controlIsActive = 3;
  inline bool has_controlisactive() const;
  inline void clear_controlisactive();
  static const int kControlIsActiveFieldNumber = 3;
  inline bool controlisactive() const;
  inline void set_controlisactive(bool value);

  // @@protoc_insertion_point(class_scope:Network.ChangeConrolledTuningSourceReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_controlledtuningsourceequipmentid();
  inline void clear_has_controlledtuningsourceequipmentid();
  inline void set_has_controlisactive();
  inline void clear_has_controlisactive();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* controlledtuningsourceequipmentid_;
  ::google::protobuf::int32 error_;
  bool controlisactive_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static ChangeConrolledTuningSourceReply* default_instance_;
};
// -------------------------------------------------------------------

class TuningSignalsRead : public ::google::protobuf::Message {
 public:
  TuningSignalsRead();
  virtual ~TuningSignalsRead();

  TuningSignalsRead(const TuningSignalsRead& from);

  inline TuningSignalsRead& operator=(const TuningSignalsRead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSignalsRead& default_instance();

  void Swap(TuningSignalsRead* other);

  // implements Message ----------------------------------------------

  TuningSignalsRead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSignalsRead& from);
  void MergeFrom(const TuningSignalsRead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 signalHash = 2;
  inline int signalhash_size() const;
  inline void clear_signalhash();
  static const int kSignalHashFieldNumber = 2;
  inline ::google::protobuf::uint64 signalhash(int index) const;
  inline void set_signalhash(int index, ::google::protobuf::uint64 value);
  inline void add_signalhash(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      signalhash() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_signalhash();

  // @@protoc_insertion_point(class_scope:Network.TuningSignalsRead)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > signalhash_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSignalsRead* default_instance_;
};
// -------------------------------------------------------------------

class TuningSignalState : public ::google::protobuf::Message {
 public:
  TuningSignalState();
  virtual ~TuningSignalState();

  TuningSignalState(const TuningSignalState& from);

  inline TuningSignalState& operator=(const TuningSignalState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSignalState& default_instance();

  void Swap(TuningSignalState* other);

  // implements Message ----------------------------------------------

  TuningSignalState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSignalState& from);
  void MergeFrom(const TuningSignalState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 signalHash = 1 [default = 0];
  inline bool has_signalhash() const;
  inline void clear_signalhash();
  static const int kSignalHashFieldNumber = 1;
  inline ::google::protobuf::uint64 signalhash() const;
  inline void set_signalhash(::google::protobuf::uint64 value);

  // optional int32 error = 2 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional bool valid = 3 [default = false];
  inline bool has_valid() const;
  inline void clear_valid();
  static const int kValidFieldNumber = 3;
  inline bool valid() const;
  inline void set_valid(bool value);

  // optional .Proto.TuningValue value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline const ::Proto::TuningValue& value() const;
  inline ::Proto::TuningValue* mutable_value();
  inline ::Proto::TuningValue* release_value();
  inline void set_allocated_value(::Proto::TuningValue* value);

  // optional .Proto.TuningValue readLowBound = 5;
  inline bool has_readlowbound() const;
  inline void clear_readlowbound();
  static const int kReadLowBoundFieldNumber = 5;
  inline const ::Proto::TuningValue& readlowbound() const;
  inline ::Proto::TuningValue* mutable_readlowbound();
  inline ::Proto::TuningValue* release_readlowbound();
  inline void set_allocated_readlowbound(::Proto::TuningValue* readlowbound);

  // optional .Proto.TuningValue readHighBound = 6;
  inline bool has_readhighbound() const;
  inline void clear_readhighbound();
  static const int kReadHighBoundFieldNumber = 6;
  inline const ::Proto::TuningValue& readhighbound() const;
  inline ::Proto::TuningValue* mutable_readhighbound();
  inline ::Proto::TuningValue* release_readhighbound();
  inline void set_allocated_readhighbound(::Proto::TuningValue* readhighbound);

  // optional bool writeInProgress = 7 [default = false];
  inline bool has_writeinprogress() const;
  inline void clear_writeinprogress();
  static const int kWriteInProgressFieldNumber = 7;
  inline bool writeinprogress() const;
  inline void set_writeinprogress(bool value);

  // optional int32 writeErrorCode = 8 [default = 0];
  inline bool has_writeerrorcode() const;
  inline void clear_writeerrorcode();
  static const int kWriteErrorCodeFieldNumber = 8;
  inline ::google::protobuf::int32 writeerrorcode() const;
  inline void set_writeerrorcode(::google::protobuf::int32 value);

  // optional fixed64 writeClient = 9 [default = 0];
  inline bool has_writeclient() const;
  inline void clear_writeclient();
  static const int kWriteClientFieldNumber = 9;
  inline ::google::protobuf::uint64 writeclient() const;
  inline void set_writeclient(::google::protobuf::uint64 value);

  // optional sfixed64 successfulReadTime = 10 [default = 0];
  inline bool has_successfulreadtime() const;
  inline void clear_successfulreadtime();
  static const int kSuccessfulReadTimeFieldNumber = 10;
  inline ::google::protobuf::int64 successfulreadtime() const;
  inline void set_successfulreadtime(::google::protobuf::int64 value);

  // optional sfixed64 writeRequestTime = 11 [default = 0];
  inline bool has_writerequesttime() const;
  inline void clear_writerequesttime();
  static const int kWriteRequestTimeFieldNumber = 11;
  inline ::google::protobuf::int64 writerequesttime() const;
  inline void set_writerequesttime(::google::protobuf::int64 value);

  // optional sfixed64 successfulWriteTime = 12 [default = 0];
  inline bool has_successfulwritetime() const;
  inline void clear_successfulwritetime();
  static const int kSuccessfulWriteTimeFieldNumber = 12;
  inline ::google::protobuf::int64 successfulwritetime() const;
  inline void set_successfulwritetime(::google::protobuf::int64 value);

  // optional sfixed64 unsuccessfulWriteTime = 13 [default = 0];
  inline bool has_unsuccessfulwritetime() const;
  inline void clear_unsuccessfulwritetime();
  static const int kUnsuccessfulWriteTimeFieldNumber = 13;
  inline ::google::protobuf::int64 unsuccessfulwritetime() const;
  inline void set_unsuccessfulwritetime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Network.TuningSignalState)
 private:
  inline void set_has_signalhash();
  inline void clear_has_signalhash();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_valid();
  inline void clear_has_valid();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_readlowbound();
  inline void clear_has_readlowbound();
  inline void set_has_readhighbound();
  inline void clear_has_readhighbound();
  inline void set_has_writeinprogress();
  inline void clear_has_writeinprogress();
  inline void set_has_writeerrorcode();
  inline void clear_has_writeerrorcode();
  inline void set_has_writeclient();
  inline void clear_has_writeclient();
  inline void set_has_successfulreadtime();
  inline void clear_has_successfulreadtime();
  inline void set_has_writerequesttime();
  inline void clear_has_writerequesttime();
  inline void set_has_successfulwritetime();
  inline void clear_has_successfulwritetime();
  inline void set_has_unsuccessfulwritetime();
  inline void clear_has_unsuccessfulwritetime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 signalhash_;
  ::Proto::TuningValue* value_;
  ::google::protobuf::int32 error_;
  bool valid_;
  bool writeinprogress_;
  ::Proto::TuningValue* readlowbound_;
  ::Proto::TuningValue* readhighbound_;
  ::google::protobuf::uint64 writeclient_;
  ::google::protobuf::int64 successfulreadtime_;
  ::google::protobuf::int64 writerequesttime_;
  ::google::protobuf::int64 successfulwritetime_;
  ::google::protobuf::int64 unsuccessfulwritetime_;
  ::google::protobuf::int32 writeerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSignalState* default_instance_;
};
// -------------------------------------------------------------------

class TuningSignalsReadReply : public ::google::protobuf::Message {
 public:
  TuningSignalsReadReply();
  virtual ~TuningSignalsReadReply();

  TuningSignalsReadReply(const TuningSignalsReadReply& from);

  inline TuningSignalsReadReply& operator=(const TuningSignalsReadReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSignalsReadReply& default_instance();

  void Swap(TuningSignalsReadReply* other);

  // implements Message ----------------------------------------------

  TuningSignalsReadReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSignalsReadReply& from);
  void MergeFrom(const TuningSignalsReadReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.TuningSignalState tuningSignalState = 2;
  inline int tuningsignalstate_size() const;
  inline void clear_tuningsignalstate();
  static const int kTuningSignalStateFieldNumber = 2;
  inline const ::Network::TuningSignalState& tuningsignalstate(int index) const;
  inline ::Network::TuningSignalState* mutable_tuningsignalstate(int index);
  inline ::Network::TuningSignalState* add_tuningsignalstate();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalState >&
      tuningsignalstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalState >*
      mutable_tuningsignalstate();

  // @@protoc_insertion_point(class_scope:Network.TuningSignalsReadReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalState > tuningsignalstate_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSignalsReadReply* default_instance_;
};
// -------------------------------------------------------------------

class TuningWriteCommand : public ::google::protobuf::Message {
 public:
  TuningWriteCommand();
  virtual ~TuningWriteCommand();

  TuningWriteCommand(const TuningWriteCommand& from);

  inline TuningWriteCommand& operator=(const TuningWriteCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningWriteCommand& default_instance();

  void Swap(TuningWriteCommand* other);

  // implements Message ----------------------------------------------

  TuningWriteCommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningWriteCommand& from);
  void MergeFrom(const TuningWriteCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 signalHash = 1 [default = 0];
  inline bool has_signalhash() const;
  inline void clear_signalhash();
  static const int kSignalHashFieldNumber = 1;
  inline ::google::protobuf::uint64 signalhash() const;
  inline void set_signalhash(::google::protobuf::uint64 value);

  // optional .Proto.TuningValue value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::Proto::TuningValue& value() const;
  inline ::Proto::TuningValue* mutable_value();
  inline ::Proto::TuningValue* release_value();
  inline void set_allocated_value(::Proto::TuningValue* value);

  // @@protoc_insertion_point(class_scope:Network.TuningWriteCommand)
 private:
  inline void set_has_signalhash();
  inline void clear_has_signalhash();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 signalhash_;
  ::Proto::TuningValue* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningWriteCommand* default_instance_;
};
// -------------------------------------------------------------------

class TuningSignalsWrite : public ::google::protobuf::Message {
 public:
  TuningSignalsWrite();
  virtual ~TuningSignalsWrite();

  TuningSignalsWrite(const TuningSignalsWrite& from);

  inline TuningSignalsWrite& operator=(const TuningSignalsWrite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSignalsWrite& default_instance();

  void Swap(TuningSignalsWrite* other);

  // implements Message ----------------------------------------------

  TuningSignalsWrite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSignalsWrite& from);
  void MergeFrom(const TuningSignalsWrite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool autoApply = 2 [default = false];
  inline bool has_autoapply() const;
  inline void clear_autoapply();
  static const int kAutoApplyFieldNumber = 2;
  inline bool autoapply() const;
  inline void set_autoapply(bool value);

  // repeated .Network.TuningWriteCommand commands = 3;
  inline int commands_size() const;
  inline void clear_commands();
  static const int kCommandsFieldNumber = 3;
  inline const ::Network::TuningWriteCommand& commands(int index) const;
  inline ::Network::TuningWriteCommand* mutable_commands(int index);
  inline ::Network::TuningWriteCommand* add_commands();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::TuningWriteCommand >&
      commands() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::TuningWriteCommand >*
      mutable_commands();

  // @@protoc_insertion_point(class_scope:Network.TuningSignalsWrite)
 private:
  inline void set_has_autoapply();
  inline void clear_has_autoapply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::TuningWriteCommand > commands_;
  bool autoapply_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSignalsWrite* default_instance_;
};
// -------------------------------------------------------------------

class TuningSignalWriteResult : public ::google::protobuf::Message {
 public:
  TuningSignalWriteResult();
  virtual ~TuningSignalWriteResult();

  TuningSignalWriteResult(const TuningSignalWriteResult& from);

  inline TuningSignalWriteResult& operator=(const TuningSignalWriteResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSignalWriteResult& default_instance();

  void Swap(TuningSignalWriteResult* other);

  // implements Message ----------------------------------------------

  TuningSignalWriteResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSignalWriteResult& from);
  void MergeFrom(const TuningSignalWriteResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 signalHash = 1 [default = 0];
  inline bool has_signalhash() const;
  inline void clear_signalhash();
  static const int kSignalHashFieldNumber = 1;
  inline ::google::protobuf::uint64 signalhash() const;
  inline void set_signalhash(::google::protobuf::uint64 value);

  // optional int32 error = 2 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.TuningSignalWriteResult)
 private:
  inline void set_has_signalhash();
  inline void clear_has_signalhash();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 signalhash_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSignalWriteResult* default_instance_;
};
// -------------------------------------------------------------------

class TuningSignalsWriteReply : public ::google::protobuf::Message {
 public:
  TuningSignalsWriteReply();
  virtual ~TuningSignalsWriteReply();

  TuningSignalsWriteReply(const TuningSignalsWriteReply& from);

  inline TuningSignalsWriteReply& operator=(const TuningSignalsWriteReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSignalsWriteReply& default_instance();

  void Swap(TuningSignalsWriteReply* other);

  // implements Message ----------------------------------------------

  TuningSignalsWriteReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSignalsWriteReply& from);
  void MergeFrom(const TuningSignalsWriteReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // repeated .Network.TuningSignalWriteResult writeResult = 2;
  inline int writeresult_size() const;
  inline void clear_writeresult();
  static const int kWriteResultFieldNumber = 2;
  inline const ::Network::TuningSignalWriteResult& writeresult(int index) const;
  inline ::Network::TuningSignalWriteResult* mutable_writeresult(int index);
  inline ::Network::TuningSignalWriteResult* add_writeresult();
  inline const ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalWriteResult >&
      writeresult() const;
  inline ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalWriteResult >*
      mutable_writeresult();

  // @@protoc_insertion_point(class_scope:Network.TuningSignalsWriteReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalWriteResult > writeresult_;
  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSignalsWriteReply* default_instance_;
};
// -------------------------------------------------------------------

class TuningSignalsApply : public ::google::protobuf::Message {
 public:
  TuningSignalsApply();
  virtual ~TuningSignalsApply();

  TuningSignalsApply(const TuningSignalsApply& from);

  inline TuningSignalsApply& operator=(const TuningSignalsApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSignalsApply& default_instance();

  void Swap(TuningSignalsApply* other);

  // implements Message ----------------------------------------------

  TuningSignalsApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSignalsApply& from);
  void MergeFrom(const TuningSignalsApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Network.TuningSignalsApply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSignalsApply* default_instance_;
};
// -------------------------------------------------------------------

class TuningSignalsApplyReply : public ::google::protobuf::Message {
 public:
  TuningSignalsApplyReply();
  virtual ~TuningSignalsApplyReply();

  TuningSignalsApplyReply(const TuningSignalsApplyReply& from);

  inline TuningSignalsApplyReply& operator=(const TuningSignalsApplyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TuningSignalsApplyReply& default_instance();

  void Swap(TuningSignalsApplyReply* other);

  // implements Message ----------------------------------------------

  TuningSignalsApplyReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TuningSignalsApplyReply& from);
  void MergeFrom(const TuningSignalsApplyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.TuningSignalsApplyReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static TuningSignalsApplyReply* default_instance_;
};
// -------------------------------------------------------------------

class SaveAppSignalsStatesToArchiveRequest : public ::google::protobuf::Message {
 public:
  SaveAppSignalsStatesToArchiveRequest();
  virtual ~SaveAppSignalsStatesToArchiveRequest();

  SaveAppSignalsStatesToArchiveRequest(const SaveAppSignalsStatesToArchiveRequest& from);

  inline SaveAppSignalsStatesToArchiveRequest& operator=(const SaveAppSignalsStatesToArchiveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveAppSignalsStatesToArchiveRequest& default_instance();

  void Swap(SaveAppSignalsStatesToArchiveRequest* other);

  // implements Message ----------------------------------------------

  SaveAppSignalsStatesToArchiveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveAppSignalsStatesToArchiveRequest& from);
  void MergeFrom(const SaveAppSignalsStatesToArchiveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string clientEquipmentID = 1;
  inline bool has_clientequipmentid() const;
  inline void clear_clientequipmentid();
  static const int kClientEquipmentIDFieldNumber = 1;
  inline const ::std::string& clientequipmentid() const;
  inline void set_clientequipmentid(const ::std::string& value);
  inline void set_clientequipmentid(const char* value);
  inline void set_clientequipmentid(const char* value, size_t size);
  inline ::std::string* mutable_clientequipmentid();
  inline ::std::string* release_clientequipmentid();
  inline void set_allocated_clientequipmentid(::std::string* clientequipmentid);

  // repeated .Proto.AppSignalState appSignalStates = 2;
  inline int appsignalstates_size() const;
  inline void clear_appsignalstates();
  static const int kAppSignalStatesFieldNumber = 2;
  inline const ::Proto::AppSignalState& appsignalstates(int index) const;
  inline ::Proto::AppSignalState* mutable_appsignalstates(int index);
  inline ::Proto::AppSignalState* add_appsignalstates();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >&
      appsignalstates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >*
      mutable_appsignalstates();

  // @@protoc_insertion_point(class_scope:Network.SaveAppSignalsStatesToArchiveRequest)
 private:
  inline void set_has_clientequipmentid();
  inline void clear_has_clientequipmentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* clientequipmentid_;
  ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState > appsignalstates_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static SaveAppSignalsStatesToArchiveRequest* default_instance_;
};
// -------------------------------------------------------------------

class SaveAppSignalsStatesToArchiveReply : public ::google::protobuf::Message {
 public:
  SaveAppSignalsStatesToArchiveReply();
  virtual ~SaveAppSignalsStatesToArchiveReply();

  SaveAppSignalsStatesToArchiveReply(const SaveAppSignalsStatesToArchiveReply& from);

  inline SaveAppSignalsStatesToArchiveReply& operator=(const SaveAppSignalsStatesToArchiveReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveAppSignalsStatesToArchiveReply& default_instance();

  void Swap(SaveAppSignalsStatesToArchiveReply* other);

  // implements Message ----------------------------------------------

  SaveAppSignalsStatesToArchiveReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveAppSignalsStatesToArchiveReply& from);
  void MergeFrom(const SaveAppSignalsStatesToArchiveReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 archError = 2 [default = 100];
  inline bool has_archerror() const;
  inline void clear_archerror();
  static const int kArchErrorFieldNumber = 2;
  inline ::google::protobuf::int32 archerror() const;
  inline void set_archerror(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Network.SaveAppSignalsStatesToArchiveReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_archerror();
  inline void clear_has_archerror();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 archerror_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static SaveAppSignalsStatesToArchiveReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStatesFromArchiveStartRequest : public ::google::protobuf::Message {
 public:
  GetAppSignalStatesFromArchiveStartRequest();
  virtual ~GetAppSignalStatesFromArchiveStartRequest();

  GetAppSignalStatesFromArchiveStartRequest(const GetAppSignalStatesFromArchiveStartRequest& from);

  inline GetAppSignalStatesFromArchiveStartRequest& operator=(const GetAppSignalStatesFromArchiveStartRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStatesFromArchiveStartRequest& default_instance();

  void Swap(GetAppSignalStatesFromArchiveStartRequest* other);

  // implements Message ----------------------------------------------

  GetAppSignalStatesFromArchiveStartRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStatesFromArchiveStartRequest& from);
  void MergeFrom(const GetAppSignalStatesFromArchiveStartRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string clientEquipmentID = 1;
  inline bool has_clientequipmentid() const;
  inline void clear_clientequipmentid();
  static const int kClientEquipmentIDFieldNumber = 1;
  inline const ::std::string& clientequipmentid() const;
  inline void set_clientequipmentid(const ::std::string& value);
  inline void set_clientequipmentid(const char* value);
  inline void set_clientequipmentid(const char* value, size_t size);
  inline ::std::string* mutable_clientequipmentid();
  inline ::std::string* release_clientequipmentid();
  inline void set_allocated_clientequipmentid(::std::string* clientequipmentid);

  // optional int32 timeType = 2 [default = 1];
  inline bool has_timetype() const;
  inline void clear_timetype();
  static const int kTimeTypeFieldNumber = 2;
  inline ::google::protobuf::int32 timetype() const;
  inline void set_timetype(::google::protobuf::int32 value);

  // optional sfixed64 startTime = 3 [default = 0];
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // optional sfixed64 endTime = 4 [default = 0];
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // repeated uint64 signalHashes = 5;
  inline int signalhashes_size() const;
  inline void clear_signalhashes();
  static const int kSignalHashesFieldNumber = 5;
  inline ::google::protobuf::uint64 signalhashes(int index) const;
  inline void set_signalhashes(int index, ::google::protobuf::uint64 value);
  inline void add_signalhashes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      signalhashes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_signalhashes();

  // optional bool removePeriodic = 6 [default = true];
  inline bool has_removeperiodic() const;
  inline void clear_removeperiodic();
  static const int kRemovePeriodicFieldNumber = 6;
  inline bool removeperiodic() const;
  inline void set_removeperiodic(bool value);

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStatesFromArchiveStartRequest)
 private:
  inline void set_has_clientequipmentid();
  inline void clear_has_clientequipmentid();
  inline void set_has_timetype();
  inline void clear_has_timetype();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_removeperiodic();
  inline void clear_has_removeperiodic();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* clientequipmentid_;
  ::google::protobuf::int64 starttime_;
  ::google::protobuf::int64 endtime_;
  ::google::protobuf::int32 timetype_;
  bool removeperiodic_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > signalhashes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStatesFromArchiveStartRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStatesFromArchiveStartReply : public ::google::protobuf::Message {
 public:
  GetAppSignalStatesFromArchiveStartReply();
  virtual ~GetAppSignalStatesFromArchiveStartReply();

  GetAppSignalStatesFromArchiveStartReply(const GetAppSignalStatesFromArchiveStartReply& from);

  inline GetAppSignalStatesFromArchiveStartReply& operator=(const GetAppSignalStatesFromArchiveStartReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStatesFromArchiveStartReply& default_instance();

  void Swap(GetAppSignalStatesFromArchiveStartReply* other);

  // implements Message ----------------------------------------------

  GetAppSignalStatesFromArchiveStartReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStatesFromArchiveStartReply& from);
  void MergeFrom(const GetAppSignalStatesFromArchiveStartReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 archError = 2 [default = 100];
  inline bool has_archerror() const;
  inline void clear_archerror();
  static const int kArchErrorFieldNumber = 2;
  inline ::google::protobuf::int32 archerror() const;
  inline void set_archerror(::google::protobuf::int32 value);

  // optional string errorString = 4;
  inline bool has_errorstring() const;
  inline void clear_errorstring();
  static const int kErrorStringFieldNumber = 4;
  inline const ::std::string& errorstring() const;
  inline void set_errorstring(const ::std::string& value);
  inline void set_errorstring(const char* value);
  inline void set_errorstring(const char* value, size_t size);
  inline ::std::string* mutable_errorstring();
  inline ::std::string* release_errorstring();
  inline void set_allocated_errorstring(::std::string* errorstring);

  // optional uint32 requestID = 3 [default = 0];
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 3;
  inline ::google::protobuf::uint32 requestid() const;
  inline void set_requestid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStatesFromArchiveStartReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_archerror();
  inline void clear_has_archerror();
  inline void set_has_errorstring();
  inline void clear_has_errorstring();
  inline void set_has_requestid();
  inline void clear_has_requestid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 archerror_;
  ::std::string* errorstring_;
  ::google::protobuf::uint32 requestid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStatesFromArchiveStartReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStatesFromArchiveNextRequest : public ::google::protobuf::Message {
 public:
  GetAppSignalStatesFromArchiveNextRequest();
  virtual ~GetAppSignalStatesFromArchiveNextRequest();

  GetAppSignalStatesFromArchiveNextRequest(const GetAppSignalStatesFromArchiveNextRequest& from);

  inline GetAppSignalStatesFromArchiveNextRequest& operator=(const GetAppSignalStatesFromArchiveNextRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStatesFromArchiveNextRequest& default_instance();

  void Swap(GetAppSignalStatesFromArchiveNextRequest* other);

  // implements Message ----------------------------------------------

  GetAppSignalStatesFromArchiveNextRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStatesFromArchiveNextRequest& from);
  void MergeFrom(const GetAppSignalStatesFromArchiveNextRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 requestID = 1 [default = 0];
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 1;
  inline ::google::protobuf::uint32 requestid() const;
  inline void set_requestid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStatesFromArchiveNextRequest)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 requestid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStatesFromArchiveNextRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStatesFromArchiveNextReply : public ::google::protobuf::Message {
 public:
  GetAppSignalStatesFromArchiveNextReply();
  virtual ~GetAppSignalStatesFromArchiveNextReply();

  GetAppSignalStatesFromArchiveNextReply(const GetAppSignalStatesFromArchiveNextReply& from);

  inline GetAppSignalStatesFromArchiveNextReply& operator=(const GetAppSignalStatesFromArchiveNextReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStatesFromArchiveNextReply& default_instance();

  void Swap(GetAppSignalStatesFromArchiveNextReply* other);

  // implements Message ----------------------------------------------

  GetAppSignalStatesFromArchiveNextReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStatesFromArchiveNextReply& from);
  void MergeFrom(const GetAppSignalStatesFromArchiveNextReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 archError = 2 [default = 100];
  inline bool has_archerror() const;
  inline void clear_archerror();
  static const int kArchErrorFieldNumber = 2;
  inline ::google::protobuf::int32 archerror() const;
  inline void set_archerror(::google::protobuf::int32 value);

  // optional uint32 requestID = 3 [default = 0];
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 3;
  inline ::google::protobuf::uint32 requestid() const;
  inline void set_requestid(::google::protobuf::uint32 value);

  // optional string errorString = 10;
  inline bool has_errorstring() const;
  inline void clear_errorstring();
  static const int kErrorStringFieldNumber = 10;
  inline const ::std::string& errorstring() const;
  inline void set_errorstring(const ::std::string& value);
  inline void set_errorstring(const char* value);
  inline void set_errorstring(const char* value, size_t size);
  inline ::std::string* mutable_errorstring();
  inline ::std::string* release_errorstring();
  inline void set_allocated_errorstring(::std::string* errorstring);

  // optional bool dataReady = 4 [default = false];
  inline bool has_dataready() const;
  inline void clear_dataready();
  static const int kDataReadyFieldNumber = 4;
  inline bool dataready() const;
  inline void set_dataready(bool value);

  // optional int32 totalStatesCount = 5 [default = 0];
  inline bool has_totalstatescount() const;
  inline void clear_totalstatescount();
  static const int kTotalStatesCountFieldNumber = 5;
  inline ::google::protobuf::int32 totalstatescount() const;
  inline void set_totalstatescount(::google::protobuf::int32 value);

  // optional int32 sentStatesCount = 6 [default = 0];
  inline bool has_sentstatescount() const;
  inline void clear_sentstatescount();
  static const int kSentStatesCountFieldNumber = 6;
  inline ::google::protobuf::int32 sentstatescount() const;
  inline void set_sentstatescount(::google::protobuf::int32 value);

  // optional int32 statesInPartCount = 7 [default = 0];
  inline bool has_statesinpartcount() const;
  inline void clear_statesinpartcount();
  static const int kStatesInPartCountFieldNumber = 7;
  inline ::google::protobuf::int32 statesinpartcount() const;
  inline void set_statesinpartcount(::google::protobuf::int32 value);

  // optional bool isLastPart = 8 [default = false];
  inline bool has_islastpart() const;
  inline void clear_islastpart();
  static const int kIsLastPartFieldNumber = 8;
  inline bool islastpart() const;
  inline void set_islastpart(bool value);

  // repeated .Proto.AppSignalState appSignalStates = 9;
  inline int appsignalstates_size() const;
  inline void clear_appsignalstates();
  static const int kAppSignalStatesFieldNumber = 9;
  inline const ::Proto::AppSignalState& appsignalstates(int index) const;
  inline ::Proto::AppSignalState* mutable_appsignalstates(int index);
  inline ::Proto::AppSignalState* add_appsignalstates();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >&
      appsignalstates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >*
      mutable_appsignalstates();

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStatesFromArchiveNextReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_archerror();
  inline void clear_has_archerror();
  inline void set_has_requestid();
  inline void clear_has_requestid();
  inline void set_has_errorstring();
  inline void clear_has_errorstring();
  inline void set_has_dataready();
  inline void clear_has_dataready();
  inline void set_has_totalstatescount();
  inline void clear_has_totalstatescount();
  inline void set_has_sentstatescount();
  inline void clear_has_sentstatescount();
  inline void set_has_statesinpartcount();
  inline void clear_has_statesinpartcount();
  inline void set_has_islastpart();
  inline void clear_has_islastpart();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 archerror_;
  ::std::string* errorstring_;
  ::google::protobuf::uint32 requestid_;
  ::google::protobuf::int32 totalstatescount_;
  ::google::protobuf::int32 sentstatescount_;
  bool dataready_;
  bool islastpart_;
  ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState > appsignalstates_;
  ::google::protobuf::int32 statesinpartcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStatesFromArchiveNextReply* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStatesFromArchiveCancelRequest : public ::google::protobuf::Message {
 public:
  GetAppSignalStatesFromArchiveCancelRequest();
  virtual ~GetAppSignalStatesFromArchiveCancelRequest();

  GetAppSignalStatesFromArchiveCancelRequest(const GetAppSignalStatesFromArchiveCancelRequest& from);

  inline GetAppSignalStatesFromArchiveCancelRequest& operator=(const GetAppSignalStatesFromArchiveCancelRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStatesFromArchiveCancelRequest& default_instance();

  void Swap(GetAppSignalStatesFromArchiveCancelRequest* other);

  // implements Message ----------------------------------------------

  GetAppSignalStatesFromArchiveCancelRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStatesFromArchiveCancelRequest& from);
  void MergeFrom(const GetAppSignalStatesFromArchiveCancelRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 requestID = 1 [default = 0];
  inline bool has_requestid() const;
  inline void clear_requestid();
  static const int kRequestIDFieldNumber = 1;
  inline ::google::protobuf::uint32 requestid() const;
  inline void set_requestid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStatesFromArchiveCancelRequest)
 private:
  inline void set_has_requestid();
  inline void clear_has_requestid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 requestid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStatesFromArchiveCancelRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAppSignalStatesFromArchiveCancelReply : public ::google::protobuf::Message {
 public:
  GetAppSignalStatesFromArchiveCancelReply();
  virtual ~GetAppSignalStatesFromArchiveCancelReply();

  GetAppSignalStatesFromArchiveCancelReply(const GetAppSignalStatesFromArchiveCancelReply& from);

  inline GetAppSignalStatesFromArchiveCancelReply& operator=(const GetAppSignalStatesFromArchiveCancelReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSignalStatesFromArchiveCancelReply& default_instance();

  void Swap(GetAppSignalStatesFromArchiveCancelReply* other);

  // implements Message ----------------------------------------------

  GetAppSignalStatesFromArchiveCancelReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAppSignalStatesFromArchiveCancelReply& from);
  void MergeFrom(const GetAppSignalStatesFromArchiveCancelReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1 [default = 0];
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int32 archError = 2 [default = 100];
  inline bool has_archerror() const;
  inline void clear_archerror();
  static const int kArchErrorFieldNumber = 2;
  inline ::google::protobuf::int32 archerror() const;
  inline void set_archerror(::google::protobuf::int32 value);

  // optional string errorString = 3;
  inline bool has_errorstring() const;
  inline void clear_errorstring();
  static const int kErrorStringFieldNumber = 3;
  inline const ::std::string& errorstring() const;
  inline void set_errorstring(const ::std::string& value);
  inline void set_errorstring(const char* value);
  inline void set_errorstring(const char* value, size_t size);
  inline ::std::string* mutable_errorstring();
  inline ::std::string* release_errorstring();
  inline void set_allocated_errorstring(::std::string* errorstring);

  // @@protoc_insertion_point(class_scope:Network.GetAppSignalStatesFromArchiveCancelReply)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_archerror();
  inline void clear_has_archerror();
  inline void set_has_errorstring();
  inline void clear_has_errorstring();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 archerror_;
  ::std::string* errorstring_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_network_2eproto();
  friend void protobuf_AssignDesc_network_2eproto();
  friend void protobuf_ShutdownFile_network_2eproto();

  void InitAsDefaultInstance();
  static GetAppSignalStatesFromArchiveCancelReply* default_instance_;
};
// ===================================================================


// ===================================================================

// GetSignalListStartRequest

// -------------------------------------------------------------------

// GetSignalListStartReply

// optional int32 error = 1 [default = 0];
inline bool GetSignalListStartReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSignalListStartReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSignalListStartReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSignalListStartReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetSignalListStartReply::error() const {
  return error_;
}
inline void GetSignalListStartReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 totalItemCount = 2;
inline bool GetSignalListStartReply::has_totalitemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSignalListStartReply::set_has_totalitemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSignalListStartReply::clear_has_totalitemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSignalListStartReply::clear_totalitemcount() {
  totalitemcount_ = 0;
  clear_has_totalitemcount();
}
inline ::google::protobuf::int32 GetSignalListStartReply::totalitemcount() const {
  return totalitemcount_;
}
inline void GetSignalListStartReply::set_totalitemcount(::google::protobuf::int32 value) {
  set_has_totalitemcount();
  totalitemcount_ = value;
}

// optional int32 partCount = 3;
inline bool GetSignalListStartReply::has_partcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSignalListStartReply::set_has_partcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSignalListStartReply::clear_has_partcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSignalListStartReply::clear_partcount() {
  partcount_ = 0;
  clear_has_partcount();
}
inline ::google::protobuf::int32 GetSignalListStartReply::partcount() const {
  return partcount_;
}
inline void GetSignalListStartReply::set_partcount(::google::protobuf::int32 value) {
  set_has_partcount();
  partcount_ = value;
}

// optional int32 itemsPerPart = 4;
inline bool GetSignalListStartReply::has_itemsperpart() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetSignalListStartReply::set_has_itemsperpart() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetSignalListStartReply::clear_has_itemsperpart() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetSignalListStartReply::clear_itemsperpart() {
  itemsperpart_ = 0;
  clear_has_itemsperpart();
}
inline ::google::protobuf::int32 GetSignalListStartReply::itemsperpart() const {
  return itemsperpart_;
}
inline void GetSignalListStartReply::set_itemsperpart(::google::protobuf::int32 value) {
  set_has_itemsperpart();
  itemsperpart_ = value;
}

// -------------------------------------------------------------------

// GetSignalListNextRequest

// optional int32 part = 1;
inline bool GetSignalListNextRequest::has_part() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSignalListNextRequest::set_has_part() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSignalListNextRequest::clear_has_part() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSignalListNextRequest::clear_part() {
  part_ = 0;
  clear_has_part();
}
inline ::google::protobuf::int32 GetSignalListNextRequest::part() const {
  return part_;
}
inline void GetSignalListNextRequest::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
}

// -------------------------------------------------------------------

// GetSignalListNextReply

// optional int32 error = 1 [default = 0];
inline bool GetSignalListNextReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSignalListNextReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSignalListNextReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSignalListNextReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetSignalListNextReply::error() const {
  return error_;
}
inline void GetSignalListNextReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 part = 2;
inline bool GetSignalListNextReply::has_part() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSignalListNextReply::set_has_part() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSignalListNextReply::clear_has_part() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSignalListNextReply::clear_part() {
  part_ = 0;
  clear_has_part();
}
inline ::google::protobuf::int32 GetSignalListNextReply::part() const {
  return part_;
}
inline void GetSignalListNextReply::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
}

// repeated string appSignalIds = 3;
inline int GetSignalListNextReply::appsignalids_size() const {
  return appsignalids_.size();
}
inline void GetSignalListNextReply::clear_appsignalids() {
  appsignalids_.Clear();
}
inline const ::std::string& GetSignalListNextReply::appsignalids(int index) const {
  return appsignalids_.Get(index);
}
inline ::std::string* GetSignalListNextReply::mutable_appsignalids(int index) {
  return appsignalids_.Mutable(index);
}
inline void GetSignalListNextReply::set_appsignalids(int index, const ::std::string& value) {
  appsignalids_.Mutable(index)->assign(value);
}
inline void GetSignalListNextReply::set_appsignalids(int index, const char* value) {
  appsignalids_.Mutable(index)->assign(value);
}
inline void GetSignalListNextReply::set_appsignalids(int index, const char* value, size_t size) {
  appsignalids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetSignalListNextReply::add_appsignalids() {
  return appsignalids_.Add();
}
inline void GetSignalListNextReply::add_appsignalids(const ::std::string& value) {
  appsignalids_.Add()->assign(value);
}
inline void GetSignalListNextReply::add_appsignalids(const char* value) {
  appsignalids_.Add()->assign(value);
}
inline void GetSignalListNextReply::add_appsignalids(const char* value, size_t size) {
  appsignalids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetSignalListNextReply::appsignalids() const {
  return appsignalids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetSignalListNextReply::mutable_appsignalids() {
  return &appsignalids_;
}

// -------------------------------------------------------------------

// GetAppSignalParamRequest

// repeated uint64 signalHashes = 1;
inline int GetAppSignalParamRequest::signalhashes_size() const {
  return signalhashes_.size();
}
inline void GetAppSignalParamRequest::clear_signalhashes() {
  signalhashes_.Clear();
}
inline ::google::protobuf::uint64 GetAppSignalParamRequest::signalhashes(int index) const {
  return signalhashes_.Get(index);
}
inline void GetAppSignalParamRequest::set_signalhashes(int index, ::google::protobuf::uint64 value) {
  signalhashes_.Set(index, value);
}
inline void GetAppSignalParamRequest::add_signalhashes(::google::protobuf::uint64 value) {
  signalhashes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetAppSignalParamRequest::signalhashes() const {
  return signalhashes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetAppSignalParamRequest::mutable_signalhashes() {
  return &signalhashes_;
}

// -------------------------------------------------------------------

// GetAppSignalParamReply

// optional int32 error = 1 [default = 0];
inline bool GetAppSignalParamReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalParamReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalParamReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalParamReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppSignalParamReply::error() const {
  return error_;
}
inline void GetAppSignalParamReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Proto.AppSignal appSignals = 2;
inline int GetAppSignalParamReply::appsignals_size() const {
  return appsignals_.size();
}
inline void GetAppSignalParamReply::clear_appsignals() {
  appsignals_.Clear();
}
inline const ::Proto::AppSignal& GetAppSignalParamReply::appsignals(int index) const {
  return appsignals_.Get(index);
}
inline ::Proto::AppSignal* GetAppSignalParamReply::mutable_appsignals(int index) {
  return appsignals_.Mutable(index);
}
inline ::Proto::AppSignal* GetAppSignalParamReply::add_appsignals() {
  return appsignals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >&
GetAppSignalParamReply::appsignals() const {
  return appsignals_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >*
GetAppSignalParamReply::mutable_appsignals() {
  return &appsignals_;
}

// -------------------------------------------------------------------

// GetAppSignalRequest

// repeated uint64 signalHashes = 1;
inline int GetAppSignalRequest::signalhashes_size() const {
  return signalhashes_.size();
}
inline void GetAppSignalRequest::clear_signalhashes() {
  signalhashes_.Clear();
}
inline ::google::protobuf::uint64 GetAppSignalRequest::signalhashes(int index) const {
  return signalhashes_.Get(index);
}
inline void GetAppSignalRequest::set_signalhashes(int index, ::google::protobuf::uint64 value) {
  signalhashes_.Set(index, value);
}
inline void GetAppSignalRequest::add_signalhashes(::google::protobuf::uint64 value) {
  signalhashes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetAppSignalRequest::signalhashes() const {
  return signalhashes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetAppSignalRequest::mutable_signalhashes() {
  return &signalhashes_;
}

// -------------------------------------------------------------------

// GetAppSignalReply

// optional int32 error = 1 [default = 0];
inline bool GetAppSignalReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppSignalReply::error() const {
  return error_;
}
inline void GetAppSignalReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Proto.AppSignal appSignals = 2;
inline int GetAppSignalReply::appsignals_size() const {
  return appsignals_.size();
}
inline void GetAppSignalReply::clear_appsignals() {
  appsignals_.Clear();
}
inline const ::Proto::AppSignal& GetAppSignalReply::appsignals(int index) const {
  return appsignals_.Get(index);
}
inline ::Proto::AppSignal* GetAppSignalReply::mutable_appsignals(int index) {
  return appsignals_.Mutable(index);
}
inline ::Proto::AppSignal* GetAppSignalReply::add_appsignals() {
  return appsignals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >&
GetAppSignalReply::appsignals() const {
  return appsignals_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignal >*
GetAppSignalReply::mutable_appsignals() {
  return &appsignals_;
}

// -------------------------------------------------------------------

// GetAppSignalStateRequest

// repeated uint64 signalHashes = 1;
inline int GetAppSignalStateRequest::signalhashes_size() const {
  return signalhashes_.size();
}
inline void GetAppSignalStateRequest::clear_signalhashes() {
  signalhashes_.Clear();
}
inline ::google::protobuf::uint64 GetAppSignalStateRequest::signalhashes(int index) const {
  return signalhashes_.Get(index);
}
inline void GetAppSignalStateRequest::set_signalhashes(int index, ::google::protobuf::uint64 value) {
  signalhashes_.Set(index, value);
}
inline void GetAppSignalStateRequest::add_signalhashes(::google::protobuf::uint64 value) {
  signalhashes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetAppSignalStateRequest::signalhashes() const {
  return signalhashes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetAppSignalStateRequest::mutable_signalhashes() {
  return &signalhashes_;
}

// -------------------------------------------------------------------

// GetAppSignalStateReply

// optional int32 error = 1 [default = 0];
inline bool GetAppSignalStateReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalStateReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalStateReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalStateReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppSignalStateReply::error() const {
  return error_;
}
inline void GetAppSignalStateReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Proto.AppSignalState appSignalStates = 2;
inline int GetAppSignalStateReply::appsignalstates_size() const {
  return appsignalstates_.size();
}
inline void GetAppSignalStateReply::clear_appsignalstates() {
  appsignalstates_.Clear();
}
inline const ::Proto::AppSignalState& GetAppSignalStateReply::appsignalstates(int index) const {
  return appsignalstates_.Get(index);
}
inline ::Proto::AppSignalState* GetAppSignalStateReply::mutable_appsignalstates(int index) {
  return appsignalstates_.Mutable(index);
}
inline ::Proto::AppSignalState* GetAppSignalStateReply::add_appsignalstates() {
  return appsignalstates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >&
GetAppSignalStateReply::appsignalstates() const {
  return appsignalstates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >*
GetAppSignalStateReply::mutable_appsignalstates() {
  return &appsignalstates_;
}

// -------------------------------------------------------------------

// DataSourceInfo

// optional uint64 id = 1;
inline bool DataSourceInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSourceInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataSourceInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataSourceInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DataSourceInfo::id() const {
  return id_;
}
inline void DataSourceInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional string equipmentID = 2;
inline bool DataSourceInfo::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSourceInfo::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataSourceInfo::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataSourceInfo::clear_equipmentid() {
  if (equipmentid_ != &::google::protobuf::internal::kEmptyString) {
    equipmentid_->clear();
  }
  clear_has_equipmentid();
}
inline const ::std::string& DataSourceInfo::equipmentid() const {
  return *equipmentid_;
}
inline void DataSourceInfo::set_equipmentid(const ::std::string& value) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(value);
}
inline void DataSourceInfo::set_equipmentid(const char* value) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(value);
}
inline void DataSourceInfo::set_equipmentid(const char* value, size_t size) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_equipmentid() {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  return equipmentid_;
}
inline ::std::string* DataSourceInfo::release_equipmentid() {
  clear_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = equipmentid_;
    equipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_equipmentid(::std::string* equipmentid) {
  if (equipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete equipmentid_;
  }
  if (equipmentid) {
    set_has_equipmentid();
    equipmentid_ = equipmentid;
  } else {
    clear_has_equipmentid();
    equipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string caption = 3;
inline bool DataSourceInfo::has_caption() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataSourceInfo::set_has_caption() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataSourceInfo::clear_has_caption() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataSourceInfo::clear_caption() {
  if (caption_ != &::google::protobuf::internal::kEmptyString) {
    caption_->clear();
  }
  clear_has_caption();
}
inline const ::std::string& DataSourceInfo::caption() const {
  return *caption_;
}
inline void DataSourceInfo::set_caption(const ::std::string& value) {
  set_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    caption_ = new ::std::string;
  }
  caption_->assign(value);
}
inline void DataSourceInfo::set_caption(const char* value) {
  set_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    caption_ = new ::std::string;
  }
  caption_->assign(value);
}
inline void DataSourceInfo::set_caption(const char* value, size_t size) {
  set_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    caption_ = new ::std::string;
  }
  caption_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_caption() {
  set_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    caption_ = new ::std::string;
  }
  return caption_;
}
inline ::std::string* DataSourceInfo::release_caption() {
  clear_has_caption();
  if (caption_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = caption_;
    caption_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_caption(::std::string* caption) {
  if (caption_ != &::google::protobuf::internal::kEmptyString) {
    delete caption_;
  }
  if (caption) {
    set_has_caption();
    caption_ = caption;
  } else {
    clear_has_caption();
    caption_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 dataType = 4;
inline bool DataSourceInfo::has_datatype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataSourceInfo::set_has_datatype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataSourceInfo::clear_has_datatype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataSourceInfo::clear_datatype() {
  datatype_ = 0;
  clear_has_datatype();
}
inline ::google::protobuf::int32 DataSourceInfo::datatype() const {
  return datatype_;
}
inline void DataSourceInfo::set_datatype(::google::protobuf::int32 value) {
  set_has_datatype();
  datatype_ = value;
}

// optional string ip = 5;
inline bool DataSourceInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataSourceInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataSourceInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataSourceInfo::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& DataSourceInfo::ip() const {
  return *ip_;
}
inline void DataSourceInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void DataSourceInfo::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void DataSourceInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* DataSourceInfo::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 port = 6;
inline bool DataSourceInfo::has_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataSourceInfo::set_has_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataSourceInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataSourceInfo::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 DataSourceInfo::port() const {
  return port_;
}
inline void DataSourceInfo::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
}

// optional int32 channel = 7;
inline bool DataSourceInfo::has_channel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DataSourceInfo::set_has_channel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DataSourceInfo::clear_has_channel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DataSourceInfo::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 DataSourceInfo::channel() const {
  return channel_;
}
inline void DataSourceInfo::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional int32 subsystemID = 8;
inline bool DataSourceInfo::has_subsystemid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DataSourceInfo::set_has_subsystemid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DataSourceInfo::clear_has_subsystemid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DataSourceInfo::clear_subsystemid() {
  subsystemid_ = 0;
  clear_has_subsystemid();
}
inline ::google::protobuf::int32 DataSourceInfo::subsystemid() const {
  return subsystemid_;
}
inline void DataSourceInfo::set_subsystemid(::google::protobuf::int32 value) {
  set_has_subsystemid();
  subsystemid_ = value;
}

// optional string subsystem = 9;
inline bool DataSourceInfo::has_subsystem() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DataSourceInfo::set_has_subsystem() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DataSourceInfo::clear_has_subsystem() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DataSourceInfo::clear_subsystem() {
  if (subsystem_ != &::google::protobuf::internal::kEmptyString) {
    subsystem_->clear();
  }
  clear_has_subsystem();
}
inline const ::std::string& DataSourceInfo::subsystem() const {
  return *subsystem_;
}
inline void DataSourceInfo::set_subsystem(const ::std::string& value) {
  set_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    subsystem_ = new ::std::string;
  }
  subsystem_->assign(value);
}
inline void DataSourceInfo::set_subsystem(const char* value) {
  set_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    subsystem_ = new ::std::string;
  }
  subsystem_->assign(value);
}
inline void DataSourceInfo::set_subsystem(const char* value, size_t size) {
  set_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    subsystem_ = new ::std::string;
  }
  subsystem_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_subsystem() {
  set_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    subsystem_ = new ::std::string;
  }
  return subsystem_;
}
inline ::std::string* DataSourceInfo::release_subsystem() {
  clear_has_subsystem();
  if (subsystem_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = subsystem_;
    subsystem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_subsystem(::std::string* subsystem) {
  if (subsystem_ != &::google::protobuf::internal::kEmptyString) {
    delete subsystem_;
  }
  if (subsystem) {
    set_has_subsystem();
    subsystem_ = subsystem;
  } else {
    clear_has_subsystem();
    subsystem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 lmNumber = 10;
inline bool DataSourceInfo::has_lmnumber() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DataSourceInfo::set_has_lmnumber() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DataSourceInfo::clear_has_lmnumber() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DataSourceInfo::clear_lmnumber() {
  lmnumber_ = 0;
  clear_has_lmnumber();
}
inline ::google::protobuf::int32 DataSourceInfo::lmnumber() const {
  return lmnumber_;
}
inline void DataSourceInfo::set_lmnumber(::google::protobuf::int32 value) {
  set_has_lmnumber();
  lmnumber_ = value;
}

// optional int32 lmModuleType = 11;
inline bool DataSourceInfo::has_lmmoduletype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DataSourceInfo::set_has_lmmoduletype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DataSourceInfo::clear_has_lmmoduletype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DataSourceInfo::clear_lmmoduletype() {
  lmmoduletype_ = 0;
  clear_has_lmmoduletype();
}
inline ::google::protobuf::int32 DataSourceInfo::lmmoduletype() const {
  return lmmoduletype_;
}
inline void DataSourceInfo::set_lmmoduletype(::google::protobuf::int32 value) {
  set_has_lmmoduletype();
  lmmoduletype_ = value;
}

// optional string lmAdapterID = 12;
inline bool DataSourceInfo::has_lmadapterid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DataSourceInfo::set_has_lmadapterid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DataSourceInfo::clear_has_lmadapterid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DataSourceInfo::clear_lmadapterid() {
  if (lmadapterid_ != &::google::protobuf::internal::kEmptyString) {
    lmadapterid_->clear();
  }
  clear_has_lmadapterid();
}
inline const ::std::string& DataSourceInfo::lmadapterid() const {
  return *lmadapterid_;
}
inline void DataSourceInfo::set_lmadapterid(const ::std::string& value) {
  set_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    lmadapterid_ = new ::std::string;
  }
  lmadapterid_->assign(value);
}
inline void DataSourceInfo::set_lmadapterid(const char* value) {
  set_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    lmadapterid_ = new ::std::string;
  }
  lmadapterid_->assign(value);
}
inline void DataSourceInfo::set_lmadapterid(const char* value, size_t size) {
  set_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    lmadapterid_ = new ::std::string;
  }
  lmadapterid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataSourceInfo::mutable_lmadapterid() {
  set_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    lmadapterid_ = new ::std::string;
  }
  return lmadapterid_;
}
inline ::std::string* DataSourceInfo::release_lmadapterid() {
  clear_has_lmadapterid();
  if (lmadapterid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = lmadapterid_;
    lmadapterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataSourceInfo::set_allocated_lmadapterid(::std::string* lmadapterid) {
  if (lmadapterid_ != &::google::protobuf::internal::kEmptyString) {
    delete lmadapterid_;
  }
  if (lmadapterid) {
    set_has_lmadapterid();
    lmadapterid_ = lmadapterid;
  } else {
    clear_has_lmadapterid();
    lmadapterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool lmDataEnable = 13;
inline bool DataSourceInfo::has_lmdataenable() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DataSourceInfo::set_has_lmdataenable() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DataSourceInfo::clear_has_lmdataenable() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DataSourceInfo::clear_lmdataenable() {
  lmdataenable_ = false;
  clear_has_lmdataenable();
}
inline bool DataSourceInfo::lmdataenable() const {
  return lmdataenable_;
}
inline void DataSourceInfo::set_lmdataenable(bool value) {
  set_has_lmdataenable();
  lmdataenable_ = value;
}

// optional uint64 lmDataID = 14;
inline bool DataSourceInfo::has_lmdataid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DataSourceInfo::set_has_lmdataid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DataSourceInfo::clear_has_lmdataid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DataSourceInfo::clear_lmdataid() {
  lmdataid_ = GOOGLE_ULONGLONG(0);
  clear_has_lmdataid();
}
inline ::google::protobuf::uint64 DataSourceInfo::lmdataid() const {
  return lmdataid_;
}
inline void DataSourceInfo::set_lmdataid(::google::protobuf::uint64 value) {
  set_has_lmdataid();
  lmdataid_ = value;
}

// -------------------------------------------------------------------

// GetDataSourcesInfoRequest

// -------------------------------------------------------------------

// GetDataSourcesInfoReply

// optional int32 error = 1 [default = 0];
inline bool GetDataSourcesInfoReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDataSourcesInfoReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDataSourcesInfoReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDataSourcesInfoReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetDataSourcesInfoReply::error() const {
  return error_;
}
inline void GetDataSourcesInfoReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.DataSourceInfo dataSourceInfo = 2;
inline int GetDataSourcesInfoReply::datasourceinfo_size() const {
  return datasourceinfo_.size();
}
inline void GetDataSourcesInfoReply::clear_datasourceinfo() {
  datasourceinfo_.Clear();
}
inline const ::Network::DataSourceInfo& GetDataSourcesInfoReply::datasourceinfo(int index) const {
  return datasourceinfo_.Get(index);
}
inline ::Network::DataSourceInfo* GetDataSourcesInfoReply::mutable_datasourceinfo(int index) {
  return datasourceinfo_.Mutable(index);
}
inline ::Network::DataSourceInfo* GetDataSourcesInfoReply::add_datasourceinfo() {
  return datasourceinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >&
GetDataSourcesInfoReply::datasourceinfo() const {
  return datasourceinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >*
GetDataSourcesInfoReply::mutable_datasourceinfo() {
  return &datasourceinfo_;
}

// -------------------------------------------------------------------

// AppDataSourceState

// optional uint64 id = 1;
inline bool AppDataSourceState::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppDataSourceState::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppDataSourceState::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppDataSourceState::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 AppDataSourceState::id() const {
  return id_;
}
inline void AppDataSourceState::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int64 uptime = 2;
inline bool AppDataSourceState::has_uptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppDataSourceState::set_has_uptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppDataSourceState::clear_has_uptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppDataSourceState::clear_uptime() {
  uptime_ = GOOGLE_LONGLONG(0);
  clear_has_uptime();
}
inline ::google::protobuf::int64 AppDataSourceState::uptime() const {
  return uptime_;
}
inline void AppDataSourceState::set_uptime(::google::protobuf::int64 value) {
  set_has_uptime();
  uptime_ = value;
}

// optional int64 receivedDataSize = 3;
inline bool AppDataSourceState::has_receiveddatasize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppDataSourceState::set_has_receiveddatasize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppDataSourceState::clear_has_receiveddatasize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppDataSourceState::clear_receiveddatasize() {
  receiveddatasize_ = GOOGLE_LONGLONG(0);
  clear_has_receiveddatasize();
}
inline ::google::protobuf::int64 AppDataSourceState::receiveddatasize() const {
  return receiveddatasize_;
}
inline void AppDataSourceState::set_receiveddatasize(::google::protobuf::int64 value) {
  set_has_receiveddatasize();
  receiveddatasize_ = value;
}

// optional double dataReceivingRate = 4;
inline bool AppDataSourceState::has_datareceivingrate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppDataSourceState::set_has_datareceivingrate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppDataSourceState::clear_has_datareceivingrate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppDataSourceState::clear_datareceivingrate() {
  datareceivingrate_ = 0;
  clear_has_datareceivingrate();
}
inline double AppDataSourceState::datareceivingrate() const {
  return datareceivingrate_;
}
inline void AppDataSourceState::set_datareceivingrate(double value) {
  set_has_datareceivingrate();
  datareceivingrate_ = value;
}

// optional int64 receivedFramesCount = 5;
inline bool AppDataSourceState::has_receivedframescount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppDataSourceState::set_has_receivedframescount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppDataSourceState::clear_has_receivedframescount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppDataSourceState::clear_receivedframescount() {
  receivedframescount_ = GOOGLE_LONGLONG(0);
  clear_has_receivedframescount();
}
inline ::google::protobuf::int64 AppDataSourceState::receivedframescount() const {
  return receivedframescount_;
}
inline void AppDataSourceState::set_receivedframescount(::google::protobuf::int64 value) {
  set_has_receivedframescount();
  receivedframescount_ = value;
}

// optional bool processingEnabled = 6;
inline bool AppDataSourceState::has_processingenabled() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppDataSourceState::set_has_processingenabled() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppDataSourceState::clear_has_processingenabled() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppDataSourceState::clear_processingenabled() {
  processingenabled_ = false;
  clear_has_processingenabled();
}
inline bool AppDataSourceState::processingenabled() const {
  return processingenabled_;
}
inline void AppDataSourceState::set_processingenabled(bool value) {
  set_has_processingenabled();
  processingenabled_ = value;
}

// optional int64 processedPacketCount = 7;
inline bool AppDataSourceState::has_processedpacketcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppDataSourceState::set_has_processedpacketcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AppDataSourceState::clear_has_processedpacketcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AppDataSourceState::clear_processedpacketcount() {
  processedpacketcount_ = GOOGLE_LONGLONG(0);
  clear_has_processedpacketcount();
}
inline ::google::protobuf::int64 AppDataSourceState::processedpacketcount() const {
  return processedpacketcount_;
}
inline void AppDataSourceState::set_processedpacketcount(::google::protobuf::int64 value) {
  set_has_processedpacketcount();
  processedpacketcount_ = value;
}

// optional int64 errorProtocolVersion = 8;
inline bool AppDataSourceState::has_errorprotocolversion() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppDataSourceState::set_has_errorprotocolversion() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AppDataSourceState::clear_has_errorprotocolversion() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AppDataSourceState::clear_errorprotocolversion() {
  errorprotocolversion_ = GOOGLE_LONGLONG(0);
  clear_has_errorprotocolversion();
}
inline ::google::protobuf::int64 AppDataSourceState::errorprotocolversion() const {
  return errorprotocolversion_;
}
inline void AppDataSourceState::set_errorprotocolversion(::google::protobuf::int64 value) {
  set_has_errorprotocolversion();
  errorprotocolversion_ = value;
}

// optional int64 errorFramesQuantity = 9;
inline bool AppDataSourceState::has_errorframesquantity() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AppDataSourceState::set_has_errorframesquantity() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AppDataSourceState::clear_has_errorframesquantity() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AppDataSourceState::clear_errorframesquantity() {
  errorframesquantity_ = GOOGLE_LONGLONG(0);
  clear_has_errorframesquantity();
}
inline ::google::protobuf::int64 AppDataSourceState::errorframesquantity() const {
  return errorframesquantity_;
}
inline void AppDataSourceState::set_errorframesquantity(::google::protobuf::int64 value) {
  set_has_errorframesquantity();
  errorframesquantity_ = value;
}

// optional int64 errorFrameNo = 10;
inline bool AppDataSourceState::has_errorframeno() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AppDataSourceState::set_has_errorframeno() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AppDataSourceState::clear_has_errorframeno() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AppDataSourceState::clear_errorframeno() {
  errorframeno_ = GOOGLE_LONGLONG(0);
  clear_has_errorframeno();
}
inline ::google::protobuf::int64 AppDataSourceState::errorframeno() const {
  return errorframeno_;
}
inline void AppDataSourceState::set_errorframeno(::google::protobuf::int64 value) {
  set_has_errorframeno();
  errorframeno_ = value;
}

// optional int64 lostedPackets = 11;
inline bool AppDataSourceState::has_lostedpackets() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AppDataSourceState::set_has_lostedpackets() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AppDataSourceState::clear_has_lostedpackets() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AppDataSourceState::clear_lostedpackets() {
  lostedpackets_ = GOOGLE_LONGLONG(0);
  clear_has_lostedpackets();
}
inline ::google::protobuf::int64 AppDataSourceState::lostedpackets() const {
  return lostedpackets_;
}
inline void AppDataSourceState::set_lostedpackets(::google::protobuf::int64 value) {
  set_has_lostedpackets();
  lostedpackets_ = value;
}

// optional int64 errorDataID = 12;
inline bool AppDataSourceState::has_errordataid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AppDataSourceState::set_has_errordataid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AppDataSourceState::clear_has_errordataid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AppDataSourceState::clear_errordataid() {
  errordataid_ = GOOGLE_LONGLONG(0);
  clear_has_errordataid();
}
inline ::google::protobuf::int64 AppDataSourceState::errordataid() const {
  return errordataid_;
}
inline void AppDataSourceState::set_errordataid(::google::protobuf::int64 value) {
  set_has_errordataid();
  errordataid_ = value;
}

// optional uint64 receivedDataID = 13;
inline bool AppDataSourceState::has_receiveddataid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AppDataSourceState::set_has_receiveddataid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AppDataSourceState::clear_has_receiveddataid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AppDataSourceState::clear_receiveddataid() {
  receiveddataid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiveddataid();
}
inline ::google::protobuf::uint64 AppDataSourceState::receiveddataid() const {
  return receiveddataid_;
}
inline void AppDataSourceState::set_receiveddataid(::google::protobuf::uint64 value) {
  set_has_receiveddataid();
  receiveddataid_ = value;
}

// optional bool processingSkiped = 14;
inline bool AppDataSourceState::has_processingskiped() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AppDataSourceState::set_has_processingskiped() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AppDataSourceState::clear_has_processingskiped() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AppDataSourceState::clear_processingskiped() {
  processingskiped_ = false;
  clear_has_processingskiped();
}
inline bool AppDataSourceState::processingskiped() const {
  return processingskiped_;
}
inline void AppDataSourceState::set_processingskiped(bool value) {
  set_has_processingskiped();
  processingskiped_ = value;
}

// optional int32 state = 15;
inline bool AppDataSourceState::has_state() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AppDataSourceState::set_has_state() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AppDataSourceState::clear_has_state() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AppDataSourceState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AppDataSourceState::state() const {
  return state_;
}
inline void AppDataSourceState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int64 errorBadFrameSize = 16;
inline bool AppDataSourceState::has_errorbadframesize() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AppDataSourceState::set_has_errorbadframesize() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AppDataSourceState::clear_has_errorbadframesize() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AppDataSourceState::clear_errorbadframesize() {
  errorbadframesize_ = GOOGLE_LONGLONG(0);
  clear_has_errorbadframesize();
}
inline ::google::protobuf::int64 AppDataSourceState::errorbadframesize() const {
  return errorbadframesize_;
}
inline void AppDataSourceState::set_errorbadframesize(::google::protobuf::int64 value) {
  set_has_errorbadframesize();
  errorbadframesize_ = value;
}

// optional bool hasErrors = 17;
inline bool AppDataSourceState::has_haserrors() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void AppDataSourceState::set_has_haserrors() {
  _has_bits_[0] |= 0x00010000u;
}
inline void AppDataSourceState::clear_has_haserrors() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void AppDataSourceState::clear_haserrors() {
  haserrors_ = false;
  clear_has_haserrors();
}
inline bool AppDataSourceState::haserrors() const {
  return haserrors_;
}
inline void AppDataSourceState::set_haserrors(bool value) {
  set_has_haserrors();
  haserrors_ = value;
}

// -------------------------------------------------------------------

// GetAppDataSourcesStatesReply

// optional int32 error = 1 [default = 0];
inline bool GetAppDataSourcesStatesReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppDataSourcesStatesReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppDataSourcesStatesReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppDataSourcesStatesReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppDataSourcesStatesReply::error() const {
  return error_;
}
inline void GetAppDataSourcesStatesReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.AppDataSourceState appDataSourcesStates = 2;
inline int GetAppDataSourcesStatesReply::appdatasourcesstates_size() const {
  return appdatasourcesstates_.size();
}
inline void GetAppDataSourcesStatesReply::clear_appdatasourcesstates() {
  appdatasourcesstates_.Clear();
}
inline const ::Network::AppDataSourceState& GetAppDataSourcesStatesReply::appdatasourcesstates(int index) const {
  return appdatasourcesstates_.Get(index);
}
inline ::Network::AppDataSourceState* GetAppDataSourcesStatesReply::mutable_appdatasourcesstates(int index) {
  return appdatasourcesstates_.Mutable(index);
}
inline ::Network::AppDataSourceState* GetAppDataSourcesStatesReply::add_appdatasourcesstates() {
  return appdatasourcesstates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState >&
GetAppDataSourcesStatesReply::appdatasourcesstates() const {
  return appdatasourcesstates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::AppDataSourceState >*
GetAppDataSourcesStatesReply::mutable_appdatasourcesstates() {
  return &appdatasourcesstates_;
}

// -------------------------------------------------------------------

// GetUnitsRequest

// -------------------------------------------------------------------

// Unit

// optional int32 id = 1;
inline bool Unit::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Unit::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Unit::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Unit::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Unit::id() const {
  return id_;
}
inline void Unit::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string unit = 2;
inline bool Unit::has_unit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Unit::set_has_unit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Unit::clear_has_unit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Unit::clear_unit() {
  if (unit_ != &::google::protobuf::internal::kEmptyString) {
    unit_->clear();
  }
  clear_has_unit();
}
inline const ::std::string& Unit::unit() const {
  return *unit_;
}
inline void Unit::set_unit(const ::std::string& value) {
  set_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    unit_ = new ::std::string;
  }
  unit_->assign(value);
}
inline void Unit::set_unit(const char* value) {
  set_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    unit_ = new ::std::string;
  }
  unit_->assign(value);
}
inline void Unit::set_unit(const char* value, size_t size) {
  set_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    unit_ = new ::std::string;
  }
  unit_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Unit::mutable_unit() {
  set_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    unit_ = new ::std::string;
  }
  return unit_;
}
inline ::std::string* Unit::release_unit() {
  clear_has_unit();
  if (unit_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unit_;
    unit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Unit::set_allocated_unit(::std::string* unit) {
  if (unit_ != &::google::protobuf::internal::kEmptyString) {
    delete unit_;
  }
  if (unit) {
    set_has_unit();
    unit_ = unit;
  } else {
    clear_has_unit();
    unit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetUnitsReply

// optional int32 error = 1 [default = 0];
inline bool GetUnitsReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUnitsReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUnitsReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUnitsReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetUnitsReply::error() const {
  return error_;
}
inline void GetUnitsReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.Unit units = 2;
inline int GetUnitsReply::units_size() const {
  return units_.size();
}
inline void GetUnitsReply::clear_units() {
  units_.Clear();
}
inline const ::Network::Unit& GetUnitsReply::units(int index) const {
  return units_.Get(index);
}
inline ::Network::Unit* GetUnitsReply::mutable_units(int index) {
  return units_.Mutable(index);
}
inline ::Network::Unit* GetUnitsReply::add_units() {
  return units_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::Unit >&
GetUnitsReply::units() const {
  return units_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::Unit >*
GetUnitsReply::mutable_units() {
  return &units_;
}

// -------------------------------------------------------------------

// AppDataServiceState

// required bool CfgServiceIsConnected = 1 [default = false];
inline bool AppDataServiceState::has_cfgserviceisconnected() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppDataServiceState::set_has_cfgserviceisconnected() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppDataServiceState::clear_has_cfgserviceisconnected() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppDataServiceState::clear_cfgserviceisconnected() {
  cfgserviceisconnected_ = false;
  clear_has_cfgserviceisconnected();
}
inline bool AppDataServiceState::cfgserviceisconnected() const {
  return cfgserviceisconnected_;
}
inline void AppDataServiceState::set_cfgserviceisconnected(bool value) {
  set_has_cfgserviceisconnected();
  cfgserviceisconnected_ = value;
}

// optional string CfgServiceIp = 2;
inline bool AppDataServiceState::has_cfgserviceip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppDataServiceState::set_has_cfgserviceip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppDataServiceState::clear_has_cfgserviceip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppDataServiceState::clear_cfgserviceip() {
  if (cfgserviceip_ != &::google::protobuf::internal::kEmptyString) {
    cfgserviceip_->clear();
  }
  clear_has_cfgserviceip();
}
inline const ::std::string& AppDataServiceState::cfgserviceip() const {
  return *cfgserviceip_;
}
inline void AppDataServiceState::set_cfgserviceip(const ::std::string& value) {
  set_has_cfgserviceip();
  if (cfgserviceip_ == &::google::protobuf::internal::kEmptyString) {
    cfgserviceip_ = new ::std::string;
  }
  cfgserviceip_->assign(value);
}
inline void AppDataServiceState::set_cfgserviceip(const char* value) {
  set_has_cfgserviceip();
  if (cfgserviceip_ == &::google::protobuf::internal::kEmptyString) {
    cfgserviceip_ = new ::std::string;
  }
  cfgserviceip_->assign(value);
}
inline void AppDataServiceState::set_cfgserviceip(const char* value, size_t size) {
  set_has_cfgserviceip();
  if (cfgserviceip_ == &::google::protobuf::internal::kEmptyString) {
    cfgserviceip_ = new ::std::string;
  }
  cfgserviceip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AppDataServiceState::mutable_cfgserviceip() {
  set_has_cfgserviceip();
  if (cfgserviceip_ == &::google::protobuf::internal::kEmptyString) {
    cfgserviceip_ = new ::std::string;
  }
  return cfgserviceip_;
}
inline ::std::string* AppDataServiceState::release_cfgserviceip() {
  clear_has_cfgserviceip();
  if (cfgserviceip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cfgserviceip_;
    cfgserviceip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AppDataServiceState::set_allocated_cfgserviceip(::std::string* cfgserviceip) {
  if (cfgserviceip_ != &::google::protobuf::internal::kEmptyString) {
    delete cfgserviceip_;
  }
  if (cfgserviceip) {
    set_has_cfgserviceip();
    cfgserviceip_ = cfgserviceip;
  } else {
    clear_has_cfgserviceip();
    cfgserviceip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 CfgServicePort = 3;
inline bool AppDataServiceState::has_cfgserviceport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppDataServiceState::set_has_cfgserviceport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppDataServiceState::clear_has_cfgserviceport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppDataServiceState::clear_cfgserviceport() {
  cfgserviceport_ = 0;
  clear_has_cfgserviceport();
}
inline ::google::protobuf::int32 AppDataServiceState::cfgserviceport() const {
  return cfgserviceport_;
}
inline void AppDataServiceState::set_cfgserviceport(::google::protobuf::int32 value) {
  set_has_cfgserviceport();
  cfgserviceport_ = value;
}

// required bool ArchiveServiceIsConnected = 4 [default = false];
inline bool AppDataServiceState::has_archiveserviceisconnected() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppDataServiceState::set_has_archiveserviceisconnected() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppDataServiceState::clear_has_archiveserviceisconnected() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppDataServiceState::clear_archiveserviceisconnected() {
  archiveserviceisconnected_ = false;
  clear_has_archiveserviceisconnected();
}
inline bool AppDataServiceState::archiveserviceisconnected() const {
  return archiveserviceisconnected_;
}
inline void AppDataServiceState::set_archiveserviceisconnected(bool value) {
  set_has_archiveserviceisconnected();
  archiveserviceisconnected_ = value;
}

// optional string ArchiveServiceIp = 5;
inline bool AppDataServiceState::has_archiveserviceip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppDataServiceState::set_has_archiveserviceip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppDataServiceState::clear_has_archiveserviceip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppDataServiceState::clear_archiveserviceip() {
  if (archiveserviceip_ != &::google::protobuf::internal::kEmptyString) {
    archiveserviceip_->clear();
  }
  clear_has_archiveserviceip();
}
inline const ::std::string& AppDataServiceState::archiveserviceip() const {
  return *archiveserviceip_;
}
inline void AppDataServiceState::set_archiveserviceip(const ::std::string& value) {
  set_has_archiveserviceip();
  if (archiveserviceip_ == &::google::protobuf::internal::kEmptyString) {
    archiveserviceip_ = new ::std::string;
  }
  archiveserviceip_->assign(value);
}
inline void AppDataServiceState::set_archiveserviceip(const char* value) {
  set_has_archiveserviceip();
  if (archiveserviceip_ == &::google::protobuf::internal::kEmptyString) {
    archiveserviceip_ = new ::std::string;
  }
  archiveserviceip_->assign(value);
}
inline void AppDataServiceState::set_archiveserviceip(const char* value, size_t size) {
  set_has_archiveserviceip();
  if (archiveserviceip_ == &::google::protobuf::internal::kEmptyString) {
    archiveserviceip_ = new ::std::string;
  }
  archiveserviceip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AppDataServiceState::mutable_archiveserviceip() {
  set_has_archiveserviceip();
  if (archiveserviceip_ == &::google::protobuf::internal::kEmptyString) {
    archiveserviceip_ = new ::std::string;
  }
  return archiveserviceip_;
}
inline ::std::string* AppDataServiceState::release_archiveserviceip() {
  clear_has_archiveserviceip();
  if (archiveserviceip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = archiveserviceip_;
    archiveserviceip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AppDataServiceState::set_allocated_archiveserviceip(::std::string* archiveserviceip) {
  if (archiveserviceip_ != &::google::protobuf::internal::kEmptyString) {
    delete archiveserviceip_;
  }
  if (archiveserviceip) {
    set_has_archiveserviceip();
    archiveserviceip_ = archiveserviceip;
  } else {
    clear_has_archiveserviceip();
    archiveserviceip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 ArchiveServicePort = 6;
inline bool AppDataServiceState::has_archiveserviceport() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppDataServiceState::set_has_archiveserviceport() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppDataServiceState::clear_has_archiveserviceport() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppDataServiceState::clear_archiveserviceport() {
  archiveserviceport_ = 0;
  clear_has_archiveserviceport();
}
inline ::google::protobuf::int32 AppDataServiceState::archiveserviceport() const {
  return archiveserviceport_;
}
inline void AppDataServiceState::set_archiveserviceport(::google::protobuf::int32 value) {
  set_has_archiveserviceport();
  archiveserviceport_ = value;
}

// -------------------------------------------------------------------

// SoftwareInfo

// required int32 softwareType = 1 [default = 8000];
inline bool SoftwareInfo::has_softwaretype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoftwareInfo::set_has_softwaretype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoftwareInfo::clear_has_softwaretype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoftwareInfo::clear_softwaretype() {
  softwaretype_ = 8000;
  clear_has_softwaretype();
}
inline ::google::protobuf::int32 SoftwareInfo::softwaretype() const {
  return softwaretype_;
}
inline void SoftwareInfo::set_softwaretype(::google::protobuf::int32 value) {
  set_has_softwaretype();
  softwaretype_ = value;
}

// required string equipmentId = 2;
inline bool SoftwareInfo::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoftwareInfo::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoftwareInfo::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoftwareInfo::clear_equipmentid() {
  if (equipmentid_ != &::google::protobuf::internal::kEmptyString) {
    equipmentid_->clear();
  }
  clear_has_equipmentid();
}
inline const ::std::string& SoftwareInfo::equipmentid() const {
  return *equipmentid_;
}
inline void SoftwareInfo::set_equipmentid(const ::std::string& value) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(value);
}
inline void SoftwareInfo::set_equipmentid(const char* value) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(value);
}
inline void SoftwareInfo::set_equipmentid(const char* value, size_t size) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SoftwareInfo::mutable_equipmentid() {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  return equipmentid_;
}
inline ::std::string* SoftwareInfo::release_equipmentid() {
  clear_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = equipmentid_;
    equipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SoftwareInfo::set_allocated_equipmentid(::std::string* equipmentid) {
  if (equipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete equipmentid_;
  }
  if (equipmentid) {
    set_has_equipmentid();
    equipmentid_ = equipmentid;
  } else {
    clear_has_equipmentid();
    equipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 majorVersion = 3 [default = 0];
inline bool SoftwareInfo::has_majorversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoftwareInfo::set_has_majorversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoftwareInfo::clear_has_majorversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoftwareInfo::clear_majorversion() {
  majorversion_ = 0;
  clear_has_majorversion();
}
inline ::google::protobuf::int32 SoftwareInfo::majorversion() const {
  return majorversion_;
}
inline void SoftwareInfo::set_majorversion(::google::protobuf::int32 value) {
  set_has_majorversion();
  majorversion_ = value;
}

// required int32 minorVersion = 4 [default = 0];
inline bool SoftwareInfo::has_minorversion() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoftwareInfo::set_has_minorversion() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoftwareInfo::clear_has_minorversion() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoftwareInfo::clear_minorversion() {
  minorversion_ = 0;
  clear_has_minorversion();
}
inline ::google::protobuf::int32 SoftwareInfo::minorversion() const {
  return minorversion_;
}
inline void SoftwareInfo::set_minorversion(::google::protobuf::int32 value) {
  set_has_minorversion();
  minorversion_ = value;
}

// required int32 commitNo = 5 [default = 0];
inline bool SoftwareInfo::has_commitno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoftwareInfo::set_has_commitno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoftwareInfo::clear_has_commitno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoftwareInfo::clear_commitno() {
  commitno_ = 0;
  clear_has_commitno();
}
inline ::google::protobuf::int32 SoftwareInfo::commitno() const {
  return commitno_;
}
inline void SoftwareInfo::set_commitno(::google::protobuf::int32 value) {
  set_has_commitno();
  commitno_ = value;
}

// required string buildBranch = 6;
inline bool SoftwareInfo::has_buildbranch() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SoftwareInfo::set_has_buildbranch() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SoftwareInfo::clear_has_buildbranch() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SoftwareInfo::clear_buildbranch() {
  if (buildbranch_ != &::google::protobuf::internal::kEmptyString) {
    buildbranch_->clear();
  }
  clear_has_buildbranch();
}
inline const ::std::string& SoftwareInfo::buildbranch() const {
  return *buildbranch_;
}
inline void SoftwareInfo::set_buildbranch(const ::std::string& value) {
  set_has_buildbranch();
  if (buildbranch_ == &::google::protobuf::internal::kEmptyString) {
    buildbranch_ = new ::std::string;
  }
  buildbranch_->assign(value);
}
inline void SoftwareInfo::set_buildbranch(const char* value) {
  set_has_buildbranch();
  if (buildbranch_ == &::google::protobuf::internal::kEmptyString) {
    buildbranch_ = new ::std::string;
  }
  buildbranch_->assign(value);
}
inline void SoftwareInfo::set_buildbranch(const char* value, size_t size) {
  set_has_buildbranch();
  if (buildbranch_ == &::google::protobuf::internal::kEmptyString) {
    buildbranch_ = new ::std::string;
  }
  buildbranch_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SoftwareInfo::mutable_buildbranch() {
  set_has_buildbranch();
  if (buildbranch_ == &::google::protobuf::internal::kEmptyString) {
    buildbranch_ = new ::std::string;
  }
  return buildbranch_;
}
inline ::std::string* SoftwareInfo::release_buildbranch() {
  clear_has_buildbranch();
  if (buildbranch_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buildbranch_;
    buildbranch_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SoftwareInfo::set_allocated_buildbranch(::std::string* buildbranch) {
  if (buildbranch_ != &::google::protobuf::internal::kEmptyString) {
    delete buildbranch_;
  }
  if (buildbranch) {
    set_has_buildbranch();
    buildbranch_ = buildbranch;
  } else {
    clear_has_buildbranch();
    buildbranch_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string commitSHA = 7;
inline bool SoftwareInfo::has_commitsha() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SoftwareInfo::set_has_commitsha() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SoftwareInfo::clear_has_commitsha() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SoftwareInfo::clear_commitsha() {
  if (commitsha_ != &::google::protobuf::internal::kEmptyString) {
    commitsha_->clear();
  }
  clear_has_commitsha();
}
inline const ::std::string& SoftwareInfo::commitsha() const {
  return *commitsha_;
}
inline void SoftwareInfo::set_commitsha(const ::std::string& value) {
  set_has_commitsha();
  if (commitsha_ == &::google::protobuf::internal::kEmptyString) {
    commitsha_ = new ::std::string;
  }
  commitsha_->assign(value);
}
inline void SoftwareInfo::set_commitsha(const char* value) {
  set_has_commitsha();
  if (commitsha_ == &::google::protobuf::internal::kEmptyString) {
    commitsha_ = new ::std::string;
  }
  commitsha_->assign(value);
}
inline void SoftwareInfo::set_commitsha(const char* value, size_t size) {
  set_has_commitsha();
  if (commitsha_ == &::google::protobuf::internal::kEmptyString) {
    commitsha_ = new ::std::string;
  }
  commitsha_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SoftwareInfo::mutable_commitsha() {
  set_has_commitsha();
  if (commitsha_ == &::google::protobuf::internal::kEmptyString) {
    commitsha_ = new ::std::string;
  }
  return commitsha_;
}
inline ::std::string* SoftwareInfo::release_commitsha() {
  clear_has_commitsha();
  if (commitsha_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = commitsha_;
    commitsha_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SoftwareInfo::set_allocated_commitsha(::std::string* commitsha) {
  if (commitsha_ != &::google::protobuf::internal::kEmptyString) {
    delete commitsha_;
  }
  if (commitsha) {
    set_has_commitsha();
    commitsha_ = commitsha;
  } else {
    clear_has_commitsha();
    commitsha_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string userName = 8;
inline bool SoftwareInfo::has_username() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SoftwareInfo::set_has_username() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SoftwareInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SoftwareInfo::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& SoftwareInfo::username() const {
  return *username_;
}
inline void SoftwareInfo::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void SoftwareInfo::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void SoftwareInfo::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SoftwareInfo::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* SoftwareInfo::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SoftwareInfo::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 buildNo = 9 [default = 0];
inline bool SoftwareInfo::has_buildno() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SoftwareInfo::set_has_buildno() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SoftwareInfo::clear_has_buildno() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SoftwareInfo::clear_buildno() {
  buildno_ = 0;
  clear_has_buildno();
}
inline ::google::protobuf::int32 SoftwareInfo::buildno() const {
  return buildno_;
}
inline void SoftwareInfo::set_buildno(::google::protobuf::int32 value) {
  set_has_buildno();
  buildno_ = value;
}

// required uint32 crc = 10 [default = 0];
inline bool SoftwareInfo::has_crc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SoftwareInfo::set_has_crc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SoftwareInfo::clear_has_crc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SoftwareInfo::clear_crc() {
  crc_ = 0u;
  clear_has_crc();
}
inline ::google::protobuf::uint32 SoftwareInfo::crc() const {
  return crc_;
}
inline void SoftwareInfo::set_crc(::google::protobuf::uint32 value) {
  set_has_crc();
  crc_ = value;
}

// -------------------------------------------------------------------

// GetServiceInfoRequest

// -------------------------------------------------------------------

// ServiceInfo

// required .Network.SoftwareInfo softwareInfo = 1;
inline bool ServiceInfo::has_softwareinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceInfo::set_has_softwareinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceInfo::clear_has_softwareinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceInfo::clear_softwareinfo() {
  if (softwareinfo_ != NULL) softwareinfo_->::Network::SoftwareInfo::Clear();
  clear_has_softwareinfo();
}
inline const ::Network::SoftwareInfo& ServiceInfo::softwareinfo() const {
  return softwareinfo_ != NULL ? *softwareinfo_ : *default_instance_->softwareinfo_;
}
inline ::Network::SoftwareInfo* ServiceInfo::mutable_softwareinfo() {
  set_has_softwareinfo();
  if (softwareinfo_ == NULL) softwareinfo_ = new ::Network::SoftwareInfo;
  return softwareinfo_;
}
inline ::Network::SoftwareInfo* ServiceInfo::release_softwareinfo() {
  clear_has_softwareinfo();
  ::Network::SoftwareInfo* temp = softwareinfo_;
  softwareinfo_ = NULL;
  return temp;
}
inline void ServiceInfo::set_allocated_softwareinfo(::Network::SoftwareInfo* softwareinfo) {
  delete softwareinfo_;
  softwareinfo_ = softwareinfo;
  if (softwareinfo) {
    set_has_softwareinfo();
  } else {
    clear_has_softwareinfo();
  }
}

// optional int64 uptime = 2 [default = 0];
inline bool ServiceInfo::has_uptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceInfo::set_has_uptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceInfo::clear_has_uptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceInfo::clear_uptime() {
  uptime_ = GOOGLE_LONGLONG(0);
  clear_has_uptime();
}
inline ::google::protobuf::int64 ServiceInfo::uptime() const {
  return uptime_;
}
inline void ServiceInfo::set_uptime(::google::protobuf::int64 value) {
  set_has_uptime();
  uptime_ = value;
}

// optional int32 serviceState = 3 [default = 0];
inline bool ServiceInfo::has_servicestate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceInfo::set_has_servicestate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceInfo::clear_has_servicestate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceInfo::clear_servicestate() {
  servicestate_ = 0;
  clear_has_servicestate();
}
inline ::google::protobuf::int32 ServiceInfo::servicestate() const {
  return servicestate_;
}
inline void ServiceInfo::set_servicestate(::google::protobuf::int32 value) {
  set_has_servicestate();
  servicestate_ = value;
}

// optional int64 serviceUptime = 4 [default = 0];
inline bool ServiceInfo::has_serviceuptime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceInfo::set_has_serviceuptime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceInfo::clear_has_serviceuptime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceInfo::clear_serviceuptime() {
  serviceuptime_ = GOOGLE_LONGLONG(0);
  clear_has_serviceuptime();
}
inline ::google::protobuf::int64 ServiceInfo::serviceuptime() const {
  return serviceuptime_;
}
inline void ServiceInfo::set_serviceuptime(::google::protobuf::int64 value) {
  set_has_serviceuptime();
  serviceuptime_ = value;
}

// optional uint32 clientRequestIP = 5 [default = 0];
inline bool ServiceInfo::has_clientrequestip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceInfo::set_has_clientrequestip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceInfo::clear_has_clientrequestip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceInfo::clear_clientrequestip() {
  clientrequestip_ = 0u;
  clear_has_clientrequestip();
}
inline ::google::protobuf::uint32 ServiceInfo::clientrequestip() const {
  return clientrequestip_;
}
inline void ServiceInfo::set_clientrequestip(::google::protobuf::uint32 value) {
  set_has_clientrequestip();
  clientrequestip_ = value;
}

// optional int32 clientRequestPort = 6 [default = 0];
inline bool ServiceInfo::has_clientrequestport() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServiceInfo::set_has_clientrequestport() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServiceInfo::clear_has_clientrequestport() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServiceInfo::clear_clientrequestport() {
  clientrequestport_ = 0;
  clear_has_clientrequestport();
}
inline ::google::protobuf::int32 ServiceInfo::clientrequestport() const {
  return clientrequestport_;
}
inline void ServiceInfo::set_clientrequestport(::google::protobuf::int32 value) {
  set_has_clientrequestport();
  clientrequestport_ = value;
}

// -------------------------------------------------------------------

// GetServiceInfoReply

// required int32 error = 1 [default = 0];
inline bool GetServiceInfoReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetServiceInfoReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetServiceInfoReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetServiceInfoReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetServiceInfoReply::error() const {
  return error_;
}
inline void GetServiceInfoReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// required .Network.ServiceInfo serviceInfo = 2;
inline bool GetServiceInfoReply::has_serviceinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetServiceInfoReply::set_has_serviceinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetServiceInfoReply::clear_has_serviceinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetServiceInfoReply::clear_serviceinfo() {
  if (serviceinfo_ != NULL) serviceinfo_->::Network::ServiceInfo::Clear();
  clear_has_serviceinfo();
}
inline const ::Network::ServiceInfo& GetServiceInfoReply::serviceinfo() const {
  return serviceinfo_ != NULL ? *serviceinfo_ : *default_instance_->serviceinfo_;
}
inline ::Network::ServiceInfo* GetServiceInfoReply::mutable_serviceinfo() {
  set_has_serviceinfo();
  if (serviceinfo_ == NULL) serviceinfo_ = new ::Network::ServiceInfo;
  return serviceinfo_;
}
inline ::Network::ServiceInfo* GetServiceInfoReply::release_serviceinfo() {
  clear_has_serviceinfo();
  ::Network::ServiceInfo* temp = serviceinfo_;
  serviceinfo_ = NULL;
  return temp;
}
inline void GetServiceInfoReply::set_allocated_serviceinfo(::Network::ServiceInfo* serviceinfo) {
  delete serviceinfo_;
  serviceinfo_ = serviceinfo;
  if (serviceinfo) {
    set_has_serviceinfo();
  } else {
    clear_has_serviceinfo();
  }
}

// -------------------------------------------------------------------

// ConfigurationServiceState

// required string currentBuildDirectory = 1;
inline bool ConfigurationServiceState::has_currentbuilddirectory() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigurationServiceState::set_has_currentbuilddirectory() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigurationServiceState::clear_has_currentbuilddirectory() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigurationServiceState::clear_currentbuilddirectory() {
  if (currentbuilddirectory_ != &::google::protobuf::internal::kEmptyString) {
    currentbuilddirectory_->clear();
  }
  clear_has_currentbuilddirectory();
}
inline const ::std::string& ConfigurationServiceState::currentbuilddirectory() const {
  return *currentbuilddirectory_;
}
inline void ConfigurationServiceState::set_currentbuilddirectory(const ::std::string& value) {
  set_has_currentbuilddirectory();
  if (currentbuilddirectory_ == &::google::protobuf::internal::kEmptyString) {
    currentbuilddirectory_ = new ::std::string;
  }
  currentbuilddirectory_->assign(value);
}
inline void ConfigurationServiceState::set_currentbuilddirectory(const char* value) {
  set_has_currentbuilddirectory();
  if (currentbuilddirectory_ == &::google::protobuf::internal::kEmptyString) {
    currentbuilddirectory_ = new ::std::string;
  }
  currentbuilddirectory_->assign(value);
}
inline void ConfigurationServiceState::set_currentbuilddirectory(const char* value, size_t size) {
  set_has_currentbuilddirectory();
  if (currentbuilddirectory_ == &::google::protobuf::internal::kEmptyString) {
    currentbuilddirectory_ = new ::std::string;
  }
  currentbuilddirectory_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfigurationServiceState::mutable_currentbuilddirectory() {
  set_has_currentbuilddirectory();
  if (currentbuilddirectory_ == &::google::protobuf::internal::kEmptyString) {
    currentbuilddirectory_ = new ::std::string;
  }
  return currentbuilddirectory_;
}
inline ::std::string* ConfigurationServiceState::release_currentbuilddirectory() {
  clear_has_currentbuilddirectory();
  if (currentbuilddirectory_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = currentbuilddirectory_;
    currentbuilddirectory_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConfigurationServiceState::set_allocated_currentbuilddirectory(::std::string* currentbuilddirectory) {
  if (currentbuilddirectory_ != &::google::protobuf::internal::kEmptyString) {
    delete currentbuilddirectory_;
  }
  if (currentbuilddirectory) {
    set_has_currentbuilddirectory();
    currentbuilddirectory_ = currentbuilddirectory;
  } else {
    clear_has_currentbuilddirectory();
    currentbuilddirectory_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 checkBuildAttemptQuantity = 2;
inline bool ConfigurationServiceState::has_checkbuildattemptquantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigurationServiceState::set_has_checkbuildattemptquantity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigurationServiceState::clear_has_checkbuildattemptquantity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigurationServiceState::clear_checkbuildattemptquantity() {
  checkbuildattemptquantity_ = 0;
  clear_has_checkbuildattemptquantity();
}
inline ::google::protobuf::int32 ConfigurationServiceState::checkbuildattemptquantity() const {
  return checkbuildattemptquantity_;
}
inline void ConfigurationServiceState::set_checkbuildattemptquantity(::google::protobuf::int32 value) {
  set_has_checkbuildattemptquantity();
  checkbuildattemptquantity_ = value;
}

// required int32 buildCheckerState = 3;
inline bool ConfigurationServiceState::has_buildcheckerstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigurationServiceState::set_has_buildcheckerstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigurationServiceState::clear_has_buildcheckerstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigurationServiceState::clear_buildcheckerstate() {
  buildcheckerstate_ = 0;
  clear_has_buildcheckerstate();
}
inline ::google::protobuf::int32 ConfigurationServiceState::buildcheckerstate() const {
  return buildcheckerstate_;
}
inline void ConfigurationServiceState::set_buildcheckerstate(::google::protobuf::int32 value) {
  set_has_buildcheckerstate();
  buildcheckerstate_ = value;
}

// -------------------------------------------------------------------

// ServiceClientInfo

// required int32 ip = 3;
inline bool ServiceClientInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceClientInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceClientInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceClientInfo::clear_ip() {
  ip_ = 0;
  clear_has_ip();
}
inline ::google::protobuf::int32 ServiceClientInfo::ip() const {
  return ip_;
}
inline void ServiceClientInfo::set_ip(::google::protobuf::int32 value) {
  set_has_ip();
  ip_ = value;
}

// required int64 uptime = 5;
inline bool ServiceClientInfo::has_uptime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceClientInfo::set_has_uptime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceClientInfo::clear_has_uptime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceClientInfo::clear_uptime() {
  uptime_ = GOOGLE_LONGLONG(0);
  clear_has_uptime();
}
inline ::google::protobuf::int64 ServiceClientInfo::uptime() const {
  return uptime_;
}
inline void ServiceClientInfo::set_uptime(::google::protobuf::int64 value) {
  set_has_uptime();
  uptime_ = value;
}

// required bool isActual = 6;
inline bool ServiceClientInfo::has_isactual() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceClientInfo::set_has_isactual() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceClientInfo::clear_has_isactual() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceClientInfo::clear_isactual() {
  isactual_ = false;
  clear_has_isactual();
}
inline bool ServiceClientInfo::isactual() const {
  return isactual_;
}
inline void ServiceClientInfo::set_isactual(bool value) {
  set_has_isactual();
  isactual_ = value;
}

// required int64 replyQuantity = 7;
inline bool ServiceClientInfo::has_replyquantity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceClientInfo::set_has_replyquantity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceClientInfo::clear_has_replyquantity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceClientInfo::clear_replyquantity() {
  replyquantity_ = GOOGLE_LONGLONG(0);
  clear_has_replyquantity();
}
inline ::google::protobuf::int64 ServiceClientInfo::replyquantity() const {
  return replyquantity_;
}
inline void ServiceClientInfo::set_replyquantity(::google::protobuf::int64 value) {
  set_has_replyquantity();
  replyquantity_ = value;
}

// required .Network.SoftwareInfo softwareInfo = 11;
inline bool ServiceClientInfo::has_softwareinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceClientInfo::set_has_softwareinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceClientInfo::clear_has_softwareinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceClientInfo::clear_softwareinfo() {
  if (softwareinfo_ != NULL) softwareinfo_->::Network::SoftwareInfo::Clear();
  clear_has_softwareinfo();
}
inline const ::Network::SoftwareInfo& ServiceClientInfo::softwareinfo() const {
  return softwareinfo_ != NULL ? *softwareinfo_ : *default_instance_->softwareinfo_;
}
inline ::Network::SoftwareInfo* ServiceClientInfo::mutable_softwareinfo() {
  set_has_softwareinfo();
  if (softwareinfo_ == NULL) softwareinfo_ = new ::Network::SoftwareInfo;
  return softwareinfo_;
}
inline ::Network::SoftwareInfo* ServiceClientInfo::release_softwareinfo() {
  clear_has_softwareinfo();
  ::Network::SoftwareInfo* temp = softwareinfo_;
  softwareinfo_ = NULL;
  return temp;
}
inline void ServiceClientInfo::set_allocated_softwareinfo(::Network::SoftwareInfo* softwareinfo) {
  delete softwareinfo_;
  softwareinfo_ = softwareinfo;
  if (softwareinfo) {
    set_has_softwareinfo();
  } else {
    clear_has_softwareinfo();
  }
}

// -------------------------------------------------------------------

// ServiceClients

// repeated .Network.ServiceClientInfo clients = 1;
inline int ServiceClients::clients_size() const {
  return clients_.size();
}
inline void ServiceClients::clear_clients() {
  clients_.Clear();
}
inline const ::Network::ServiceClientInfo& ServiceClients::clients(int index) const {
  return clients_.Get(index);
}
inline ::Network::ServiceClientInfo* ServiceClients::mutable_clients(int index) {
  return clients_.Mutable(index);
}
inline ::Network::ServiceClientInfo* ServiceClients::add_clients() {
  return clients_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::ServiceClientInfo >&
ServiceClients::clients() const {
  return clients_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::ServiceClientInfo >*
ServiceClients::mutable_clients() {
  return &clients_;
}

// -------------------------------------------------------------------

// BuildInfo

// required string project = 1;
inline bool BuildInfo::has_project() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildInfo::set_has_project() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildInfo::clear_has_project() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildInfo::clear_project() {
  if (project_ != &::google::protobuf::internal::kEmptyString) {
    project_->clear();
  }
  clear_has_project();
}
inline const ::std::string& BuildInfo::project() const {
  return *project_;
}
inline void BuildInfo::set_project(const ::std::string& value) {
  set_has_project();
  if (project_ == &::google::protobuf::internal::kEmptyString) {
    project_ = new ::std::string;
  }
  project_->assign(value);
}
inline void BuildInfo::set_project(const char* value) {
  set_has_project();
  if (project_ == &::google::protobuf::internal::kEmptyString) {
    project_ = new ::std::string;
  }
  project_->assign(value);
}
inline void BuildInfo::set_project(const char* value, size_t size) {
  set_has_project();
  if (project_ == &::google::protobuf::internal::kEmptyString) {
    project_ = new ::std::string;
  }
  project_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuildInfo::mutable_project() {
  set_has_project();
  if (project_ == &::google::protobuf::internal::kEmptyString) {
    project_ = new ::std::string;
  }
  return project_;
}
inline ::std::string* BuildInfo::release_project() {
  clear_has_project();
  if (project_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = project_;
    project_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuildInfo::set_allocated_project(::std::string* project) {
  if (project_ != &::google::protobuf::internal::kEmptyString) {
    delete project_;
  }
  if (project) {
    set_has_project();
    project_ = project;
  } else {
    clear_has_project();
    project_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 id = 2 [default = -1];
inline bool BuildInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildInfo::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 BuildInfo::id() const {
  return id_;
}
inline void BuildInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required bool release = 3 [default = false];
inline bool BuildInfo::has_release() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildInfo::set_has_release() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildInfo::clear_has_release() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildInfo::clear_release() {
  release_ = false;
  clear_has_release();
}
inline bool BuildInfo::release() const {
  return release_;
}
inline void BuildInfo::set_release(bool value) {
  set_has_release();
  release_ = value;
}

// required int64 date = 4;
inline bool BuildInfo::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuildInfo::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuildInfo::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuildInfo::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
  clear_has_date();
}
inline ::google::protobuf::int64 BuildInfo::date() const {
  return date_;
}
inline void BuildInfo::set_date(::google::protobuf::int64 value) {
  set_has_date();
  date_ = value;
}

// required int32 changeset = 5 [default = 0];
inline bool BuildInfo::has_changeset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuildInfo::set_has_changeset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuildInfo::clear_has_changeset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuildInfo::clear_changeset() {
  changeset_ = 0;
  clear_has_changeset();
}
inline ::google::protobuf::int32 BuildInfo::changeset() const {
  return changeset_;
}
inline void BuildInfo::set_changeset(::google::protobuf::int32 value) {
  set_has_changeset();
  changeset_ = value;
}

// required string user = 6;
inline bool BuildInfo::has_user() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuildInfo::set_has_user() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuildInfo::clear_has_user() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuildInfo::clear_user() {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    user_->clear();
  }
  clear_has_user();
}
inline const ::std::string& BuildInfo::user() const {
  return *user_;
}
inline void BuildInfo::set_user(const ::std::string& value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void BuildInfo::set_user(const char* value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void BuildInfo::set_user(const char* value, size_t size) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuildInfo::mutable_user() {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  return user_;
}
inline ::std::string* BuildInfo::release_user() {
  clear_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_;
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuildInfo::set_allocated_user(::std::string* user) {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    delete user_;
  }
  if (user) {
    set_has_user();
    user_ = user;
  } else {
    clear_has_user();
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string workstation = 7;
inline bool BuildInfo::has_workstation() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuildInfo::set_has_workstation() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuildInfo::clear_has_workstation() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuildInfo::clear_workstation() {
  if (workstation_ != &::google::protobuf::internal::kEmptyString) {
    workstation_->clear();
  }
  clear_has_workstation();
}
inline const ::std::string& BuildInfo::workstation() const {
  return *workstation_;
}
inline void BuildInfo::set_workstation(const ::std::string& value) {
  set_has_workstation();
  if (workstation_ == &::google::protobuf::internal::kEmptyString) {
    workstation_ = new ::std::string;
  }
  workstation_->assign(value);
}
inline void BuildInfo::set_workstation(const char* value) {
  set_has_workstation();
  if (workstation_ == &::google::protobuf::internal::kEmptyString) {
    workstation_ = new ::std::string;
  }
  workstation_->assign(value);
}
inline void BuildInfo::set_workstation(const char* value, size_t size) {
  set_has_workstation();
  if (workstation_ == &::google::protobuf::internal::kEmptyString) {
    workstation_ = new ::std::string;
  }
  workstation_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuildInfo::mutable_workstation() {
  set_has_workstation();
  if (workstation_ == &::google::protobuf::internal::kEmptyString) {
    workstation_ = new ::std::string;
  }
  return workstation_;
}
inline ::std::string* BuildInfo::release_workstation() {
  clear_has_workstation();
  if (workstation_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = workstation_;
    workstation_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuildInfo::set_allocated_workstation(::std::string* workstation) {
  if (workstation_ != &::google::protobuf::internal::kEmptyString) {
    delete workstation_;
  }
  if (workstation) {
    set_has_workstation();
    workstation_ = workstation;
  } else {
    clear_has_workstation();
    workstation_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ConfigurationServiceSettings

// required string equipmentID = 1;
inline bool ConfigurationServiceSettings::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigurationServiceSettings::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigurationServiceSettings::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigurationServiceSettings::clear_equipmentid() {
  if (equipmentid_ != &::google::protobuf::internal::kEmptyString) {
    equipmentid_->clear();
  }
  clear_has_equipmentid();
}
inline const ::std::string& ConfigurationServiceSettings::equipmentid() const {
  return *equipmentid_;
}
inline void ConfigurationServiceSettings::set_equipmentid(const ::std::string& value) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(value);
}
inline void ConfigurationServiceSettings::set_equipmentid(const char* value) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(value);
}
inline void ConfigurationServiceSettings::set_equipmentid(const char* value, size_t size) {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  equipmentid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfigurationServiceSettings::mutable_equipmentid() {
  set_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    equipmentid_ = new ::std::string;
  }
  return equipmentid_;
}
inline ::std::string* ConfigurationServiceSettings::release_equipmentid() {
  clear_has_equipmentid();
  if (equipmentid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = equipmentid_;
    equipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConfigurationServiceSettings::set_allocated_equipmentid(::std::string* equipmentid) {
  if (equipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete equipmentid_;
  }
  if (equipmentid) {
    set_has_equipmentid();
    equipmentid_ = equipmentid;
  } else {
    clear_has_equipmentid();
    equipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string autoloadBuildPath = 2;
inline bool ConfigurationServiceSettings::has_autoloadbuildpath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigurationServiceSettings::set_has_autoloadbuildpath() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigurationServiceSettings::clear_has_autoloadbuildpath() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigurationServiceSettings::clear_autoloadbuildpath() {
  if (autoloadbuildpath_ != &::google::protobuf::internal::kEmptyString) {
    autoloadbuildpath_->clear();
  }
  clear_has_autoloadbuildpath();
}
inline const ::std::string& ConfigurationServiceSettings::autoloadbuildpath() const {
  return *autoloadbuildpath_;
}
inline void ConfigurationServiceSettings::set_autoloadbuildpath(const ::std::string& value) {
  set_has_autoloadbuildpath();
  if (autoloadbuildpath_ == &::google::protobuf::internal::kEmptyString) {
    autoloadbuildpath_ = new ::std::string;
  }
  autoloadbuildpath_->assign(value);
}
inline void ConfigurationServiceSettings::set_autoloadbuildpath(const char* value) {
  set_has_autoloadbuildpath();
  if (autoloadbuildpath_ == &::google::protobuf::internal::kEmptyString) {
    autoloadbuildpath_ = new ::std::string;
  }
  autoloadbuildpath_->assign(value);
}
inline void ConfigurationServiceSettings::set_autoloadbuildpath(const char* value, size_t size) {
  set_has_autoloadbuildpath();
  if (autoloadbuildpath_ == &::google::protobuf::internal::kEmptyString) {
    autoloadbuildpath_ = new ::std::string;
  }
  autoloadbuildpath_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfigurationServiceSettings::mutable_autoloadbuildpath() {
  set_has_autoloadbuildpath();
  if (autoloadbuildpath_ == &::google::protobuf::internal::kEmptyString) {
    autoloadbuildpath_ = new ::std::string;
  }
  return autoloadbuildpath_;
}
inline ::std::string* ConfigurationServiceSettings::release_autoloadbuildpath() {
  clear_has_autoloadbuildpath();
  if (autoloadbuildpath_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = autoloadbuildpath_;
    autoloadbuildpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConfigurationServiceSettings::set_allocated_autoloadbuildpath(::std::string* autoloadbuildpath) {
  if (autoloadbuildpath_ != &::google::protobuf::internal::kEmptyString) {
    delete autoloadbuildpath_;
  }
  if (autoloadbuildpath) {
    set_has_autoloadbuildpath();
    autoloadbuildpath_ = autoloadbuildpath;
  } else {
    clear_has_autoloadbuildpath();
    autoloadbuildpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string workDirectory = 3;
inline bool ConfigurationServiceSettings::has_workdirectory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigurationServiceSettings::set_has_workdirectory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigurationServiceSettings::clear_has_workdirectory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigurationServiceSettings::clear_workdirectory() {
  if (workdirectory_ != &::google::protobuf::internal::kEmptyString) {
    workdirectory_->clear();
  }
  clear_has_workdirectory();
}
inline const ::std::string& ConfigurationServiceSettings::workdirectory() const {
  return *workdirectory_;
}
inline void ConfigurationServiceSettings::set_workdirectory(const ::std::string& value) {
  set_has_workdirectory();
  if (workdirectory_ == &::google::protobuf::internal::kEmptyString) {
    workdirectory_ = new ::std::string;
  }
  workdirectory_->assign(value);
}
inline void ConfigurationServiceSettings::set_workdirectory(const char* value) {
  set_has_workdirectory();
  if (workdirectory_ == &::google::protobuf::internal::kEmptyString) {
    workdirectory_ = new ::std::string;
  }
  workdirectory_->assign(value);
}
inline void ConfigurationServiceSettings::set_workdirectory(const char* value, size_t size) {
  set_has_workdirectory();
  if (workdirectory_ == &::google::protobuf::internal::kEmptyString) {
    workdirectory_ = new ::std::string;
  }
  workdirectory_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfigurationServiceSettings::mutable_workdirectory() {
  set_has_workdirectory();
  if (workdirectory_ == &::google::protobuf::internal::kEmptyString) {
    workdirectory_ = new ::std::string;
  }
  return workdirectory_;
}
inline ::std::string* ConfigurationServiceSettings::release_workdirectory() {
  clear_has_workdirectory();
  if (workdirectory_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = workdirectory_;
    workdirectory_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConfigurationServiceSettings::set_allocated_workdirectory(::std::string* workdirectory) {
  if (workdirectory_ != &::google::protobuf::internal::kEmptyString) {
    delete workdirectory_;
  }
  if (workdirectory) {
    set_has_workdirectory();
    workdirectory_ = workdirectory;
  } else {
    clear_has_workdirectory();
    workdirectory_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetTuningSourcesInfo

// -------------------------------------------------------------------

// GetTuningSourcesInfoReply

// optional int32 error = 1 [default = 0];
inline bool GetTuningSourcesInfoReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTuningSourcesInfoReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTuningSourcesInfoReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTuningSourcesInfoReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetTuningSourcesInfoReply::error() const {
  return error_;
}
inline void GetTuningSourcesInfoReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.DataSourceInfo tuningSourceInfo = 2;
inline int GetTuningSourcesInfoReply::tuningsourceinfo_size() const {
  return tuningsourceinfo_.size();
}
inline void GetTuningSourcesInfoReply::clear_tuningsourceinfo() {
  tuningsourceinfo_.Clear();
}
inline const ::Network::DataSourceInfo& GetTuningSourcesInfoReply::tuningsourceinfo(int index) const {
  return tuningsourceinfo_.Get(index);
}
inline ::Network::DataSourceInfo* GetTuningSourcesInfoReply::mutable_tuningsourceinfo(int index) {
  return tuningsourceinfo_.Mutable(index);
}
inline ::Network::DataSourceInfo* GetTuningSourcesInfoReply::add_tuningsourceinfo() {
  return tuningsourceinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >&
GetTuningSourcesInfoReply::tuningsourceinfo() const {
  return tuningsourceinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::DataSourceInfo >*
GetTuningSourcesInfoReply::mutable_tuningsourceinfo() {
  return &tuningsourceinfo_;
}

// optional bool singleLmControlMode = 3 [default = true];
inline bool GetTuningSourcesInfoReply::has_singlelmcontrolmode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTuningSourcesInfoReply::set_has_singlelmcontrolmode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTuningSourcesInfoReply::clear_has_singlelmcontrolmode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTuningSourcesInfoReply::clear_singlelmcontrolmode() {
  singlelmcontrolmode_ = true;
  clear_has_singlelmcontrolmode();
}
inline bool GetTuningSourcesInfoReply::singlelmcontrolmode() const {
  return singlelmcontrolmode_;
}
inline void GetTuningSourcesInfoReply::set_singlelmcontrolmode(bool value) {
  set_has_singlelmcontrolmode();
  singlelmcontrolmode_ = value;
}

// -------------------------------------------------------------------

// GetTuningSourcesStates

// -------------------------------------------------------------------

// TuningSourceState

// optional uint64 sourceID = 1 [default = 0];
inline bool TuningSourceState::has_sourceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TuningSourceState::set_has_sourceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TuningSourceState::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TuningSourceState::clear_sourceid() {
  sourceid_ = GOOGLE_ULONGLONG(0);
  clear_has_sourceid();
}
inline ::google::protobuf::uint64 TuningSourceState::sourceid() const {
  return sourceid_;
}
inline void TuningSourceState::set_sourceid(::google::protobuf::uint64 value) {
  set_has_sourceid();
  sourceid_ = value;
}

// optional bool isReply = 2 [default = false];
inline bool TuningSourceState::has_isreply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TuningSourceState::set_has_isreply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TuningSourceState::clear_has_isreply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TuningSourceState::clear_isreply() {
  isreply_ = false;
  clear_has_isreply();
}
inline bool TuningSourceState::isreply() const {
  return isreply_;
}
inline void TuningSourceState::set_isreply(bool value) {
  set_has_isreply();
  isreply_ = value;
}

// optional int64 requestCount = 3 [default = 0];
inline bool TuningSourceState::has_requestcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TuningSourceState::set_has_requestcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TuningSourceState::clear_has_requestcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TuningSourceState::clear_requestcount() {
  requestcount_ = GOOGLE_LONGLONG(0);
  clear_has_requestcount();
}
inline ::google::protobuf::int64 TuningSourceState::requestcount() const {
  return requestcount_;
}
inline void TuningSourceState::set_requestcount(::google::protobuf::int64 value) {
  set_has_requestcount();
  requestcount_ = value;
}

// optional int64 replyCount = 4 [default = 0];
inline bool TuningSourceState::has_replycount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TuningSourceState::set_has_replycount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TuningSourceState::clear_has_replycount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TuningSourceState::clear_replycount() {
  replycount_ = GOOGLE_LONGLONG(0);
  clear_has_replycount();
}
inline ::google::protobuf::int64 TuningSourceState::replycount() const {
  return replycount_;
}
inline void TuningSourceState::set_replycount(::google::protobuf::int64 value) {
  set_has_replycount();
  replycount_ = value;
}

// optional int32 commandQueueSize = 5 [default = 0];
inline bool TuningSourceState::has_commandqueuesize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TuningSourceState::set_has_commandqueuesize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TuningSourceState::clear_has_commandqueuesize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TuningSourceState::clear_commandqueuesize() {
  commandqueuesize_ = 0;
  clear_has_commandqueuesize();
}
inline ::google::protobuf::int32 TuningSourceState::commandqueuesize() const {
  return commandqueuesize_;
}
inline void TuningSourceState::set_commandqueuesize(::google::protobuf::int32 value) {
  set_has_commandqueuesize();
  commandqueuesize_ = value;
}

// optional int64 errUntimelyReplay = 6 [default = 0];
inline bool TuningSourceState::has_erruntimelyreplay() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TuningSourceState::set_has_erruntimelyreplay() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TuningSourceState::clear_has_erruntimelyreplay() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TuningSourceState::clear_erruntimelyreplay() {
  erruntimelyreplay_ = GOOGLE_LONGLONG(0);
  clear_has_erruntimelyreplay();
}
inline ::google::protobuf::int64 TuningSourceState::erruntimelyreplay() const {
  return erruntimelyreplay_;
}
inline void TuningSourceState::set_erruntimelyreplay(::google::protobuf::int64 value) {
  set_has_erruntimelyreplay();
  erruntimelyreplay_ = value;
}

// optional int64 errSent = 7 [default = 0];
inline bool TuningSourceState::has_errsent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TuningSourceState::set_has_errsent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TuningSourceState::clear_has_errsent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TuningSourceState::clear_errsent() {
  errsent_ = GOOGLE_LONGLONG(0);
  clear_has_errsent();
}
inline ::google::protobuf::int64 TuningSourceState::errsent() const {
  return errsent_;
}
inline void TuningSourceState::set_errsent(::google::protobuf::int64 value) {
  set_has_errsent();
  errsent_ = value;
}

// optional int64 errPartialSent = 8 [default = 0];
inline bool TuningSourceState::has_errpartialsent() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TuningSourceState::set_has_errpartialsent() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TuningSourceState::clear_has_errpartialsent() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TuningSourceState::clear_errpartialsent() {
  errpartialsent_ = GOOGLE_LONGLONG(0);
  clear_has_errpartialsent();
}
inline ::google::protobuf::int64 TuningSourceState::errpartialsent() const {
  return errpartialsent_;
}
inline void TuningSourceState::set_errpartialsent(::google::protobuf::int64 value) {
  set_has_errpartialsent();
  errpartialsent_ = value;
}

// optional int64 errReplySize = 9 [default = 0];
inline bool TuningSourceState::has_errreplysize() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TuningSourceState::set_has_errreplysize() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TuningSourceState::clear_has_errreplysize() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TuningSourceState::clear_errreplysize() {
  errreplysize_ = GOOGLE_LONGLONG(0);
  clear_has_errreplysize();
}
inline ::google::protobuf::int64 TuningSourceState::errreplysize() const {
  return errreplysize_;
}
inline void TuningSourceState::set_errreplysize(::google::protobuf::int64 value) {
  set_has_errreplysize();
  errreplysize_ = value;
}

// optional int64 errNoReply = 10 [default = 0];
inline bool TuningSourceState::has_errnoreply() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TuningSourceState::set_has_errnoreply() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TuningSourceState::clear_has_errnoreply() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TuningSourceState::clear_errnoreply() {
  errnoreply_ = GOOGLE_LONGLONG(0);
  clear_has_errnoreply();
}
inline ::google::protobuf::int64 TuningSourceState::errnoreply() const {
  return errnoreply_;
}
inline void TuningSourceState::set_errnoreply(::google::protobuf::int64 value) {
  set_has_errnoreply();
  errnoreply_ = value;
}

// optional int64 errRupProtocolVersion = 11 [default = 0];
inline bool TuningSourceState::has_errrupprotocolversion() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TuningSourceState::set_has_errrupprotocolversion() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TuningSourceState::clear_has_errrupprotocolversion() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TuningSourceState::clear_errrupprotocolversion() {
  errrupprotocolversion_ = GOOGLE_LONGLONG(0);
  clear_has_errrupprotocolversion();
}
inline ::google::protobuf::int64 TuningSourceState::errrupprotocolversion() const {
  return errrupprotocolversion_;
}
inline void TuningSourceState::set_errrupprotocolversion(::google::protobuf::int64 value) {
  set_has_errrupprotocolversion();
  errrupprotocolversion_ = value;
}

// optional int64 errRupFrameSize = 12 [default = 0];
inline bool TuningSourceState::has_errrupframesize() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TuningSourceState::set_has_errrupframesize() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TuningSourceState::clear_has_errrupframesize() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TuningSourceState::clear_errrupframesize() {
  errrupframesize_ = GOOGLE_LONGLONG(0);
  clear_has_errrupframesize();
}
inline ::google::protobuf::int64 TuningSourceState::errrupframesize() const {
  return errrupframesize_;
}
inline void TuningSourceState::set_errrupframesize(::google::protobuf::int64 value) {
  set_has_errrupframesize();
  errrupframesize_ = value;
}

// optional int64 errRupNonTuningData = 13 [default = 0];
inline bool TuningSourceState::has_errrupnontuningdata() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TuningSourceState::set_has_errrupnontuningdata() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TuningSourceState::clear_has_errrupnontuningdata() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TuningSourceState::clear_errrupnontuningdata() {
  errrupnontuningdata_ = GOOGLE_LONGLONG(0);
  clear_has_errrupnontuningdata();
}
inline ::google::protobuf::int64 TuningSourceState::errrupnontuningdata() const {
  return errrupnontuningdata_;
}
inline void TuningSourceState::set_errrupnontuningdata(::google::protobuf::int64 value) {
  set_has_errrupnontuningdata();
  errrupnontuningdata_ = value;
}

// optional int64 errRupModuleType = 14 [default = 0];
inline bool TuningSourceState::has_errrupmoduletype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TuningSourceState::set_has_errrupmoduletype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TuningSourceState::clear_has_errrupmoduletype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TuningSourceState::clear_errrupmoduletype() {
  errrupmoduletype_ = GOOGLE_LONGLONG(0);
  clear_has_errrupmoduletype();
}
inline ::google::protobuf::int64 TuningSourceState::errrupmoduletype() const {
  return errrupmoduletype_;
}
inline void TuningSourceState::set_errrupmoduletype(::google::protobuf::int64 value) {
  set_has_errrupmoduletype();
  errrupmoduletype_ = value;
}

// optional int64 errRupFramesQuantity = 15 [default = 0];
inline bool TuningSourceState::has_errrupframesquantity() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TuningSourceState::set_has_errrupframesquantity() {
  _has_bits_[0] |= 0x00004000u;
}
inline void TuningSourceState::clear_has_errrupframesquantity() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void TuningSourceState::clear_errrupframesquantity() {
  errrupframesquantity_ = GOOGLE_LONGLONG(0);
  clear_has_errrupframesquantity();
}
inline ::google::protobuf::int64 TuningSourceState::errrupframesquantity() const {
  return errrupframesquantity_;
}
inline void TuningSourceState::set_errrupframesquantity(::google::protobuf::int64 value) {
  set_has_errrupframesquantity();
  errrupframesquantity_ = value;
}

// optional int64 errRupFrameNumber = 16 [default = 0];
inline bool TuningSourceState::has_errrupframenumber() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void TuningSourceState::set_has_errrupframenumber() {
  _has_bits_[0] |= 0x00008000u;
}
inline void TuningSourceState::clear_has_errrupframenumber() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void TuningSourceState::clear_errrupframenumber() {
  errrupframenumber_ = GOOGLE_LONGLONG(0);
  clear_has_errrupframenumber();
}
inline ::google::protobuf::int64 TuningSourceState::errrupframenumber() const {
  return errrupframenumber_;
}
inline void TuningSourceState::set_errrupframenumber(::google::protobuf::int64 value) {
  set_has_errrupframenumber();
  errrupframenumber_ = value;
}

// optional int64 errFotipProtocolVersion = 17 [default = 0];
inline bool TuningSourceState::has_errfotipprotocolversion() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void TuningSourceState::set_has_errfotipprotocolversion() {
  _has_bits_[0] |= 0x00010000u;
}
inline void TuningSourceState::clear_has_errfotipprotocolversion() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void TuningSourceState::clear_errfotipprotocolversion() {
  errfotipprotocolversion_ = GOOGLE_LONGLONG(0);
  clear_has_errfotipprotocolversion();
}
inline ::google::protobuf::int64 TuningSourceState::errfotipprotocolversion() const {
  return errfotipprotocolversion_;
}
inline void TuningSourceState::set_errfotipprotocolversion(::google::protobuf::int64 value) {
  set_has_errfotipprotocolversion();
  errfotipprotocolversion_ = value;
}

// optional int64 errFotipUniqueID = 18 [default = 0];
inline bool TuningSourceState::has_errfotipuniqueid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void TuningSourceState::set_has_errfotipuniqueid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void TuningSourceState::clear_has_errfotipuniqueid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void TuningSourceState::clear_errfotipuniqueid() {
  errfotipuniqueid_ = GOOGLE_LONGLONG(0);
  clear_has_errfotipuniqueid();
}
inline ::google::protobuf::int64 TuningSourceState::errfotipuniqueid() const {
  return errfotipuniqueid_;
}
inline void TuningSourceState::set_errfotipuniqueid(::google::protobuf::int64 value) {
  set_has_errfotipuniqueid();
  errfotipuniqueid_ = value;
}

// optional int64 errFotipLmNumber = 19 [default = 0];
inline bool TuningSourceState::has_errfotiplmnumber() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void TuningSourceState::set_has_errfotiplmnumber() {
  _has_bits_[0] |= 0x00040000u;
}
inline void TuningSourceState::clear_has_errfotiplmnumber() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void TuningSourceState::clear_errfotiplmnumber() {
  errfotiplmnumber_ = GOOGLE_LONGLONG(0);
  clear_has_errfotiplmnumber();
}
inline ::google::protobuf::int64 TuningSourceState::errfotiplmnumber() const {
  return errfotiplmnumber_;
}
inline void TuningSourceState::set_errfotiplmnumber(::google::protobuf::int64 value) {
  set_has_errfotiplmnumber();
  errfotiplmnumber_ = value;
}

// optional int64 errFotipSubsystemCode = 20 [default = 0];
inline bool TuningSourceState::has_errfotipsubsystemcode() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void TuningSourceState::set_has_errfotipsubsystemcode() {
  _has_bits_[0] |= 0x00080000u;
}
inline void TuningSourceState::clear_has_errfotipsubsystemcode() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void TuningSourceState::clear_errfotipsubsystemcode() {
  errfotipsubsystemcode_ = GOOGLE_LONGLONG(0);
  clear_has_errfotipsubsystemcode();
}
inline ::google::protobuf::int64 TuningSourceState::errfotipsubsystemcode() const {
  return errfotipsubsystemcode_;
}
inline void TuningSourceState::set_errfotipsubsystemcode(::google::protobuf::int64 value) {
  set_has_errfotipsubsystemcode();
  errfotipsubsystemcode_ = value;
}

// optional int64 errFotipOperationCode = 21 [default = 0];
inline bool TuningSourceState::has_errfotipoperationcode() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void TuningSourceState::set_has_errfotipoperationcode() {
  _has_bits_[0] |= 0x00100000u;
}
inline void TuningSourceState::clear_has_errfotipoperationcode() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void TuningSourceState::clear_errfotipoperationcode() {
  errfotipoperationcode_ = GOOGLE_LONGLONG(0);
  clear_has_errfotipoperationcode();
}
inline ::google::protobuf::int64 TuningSourceState::errfotipoperationcode() const {
  return errfotipoperationcode_;
}
inline void TuningSourceState::set_errfotipoperationcode(::google::protobuf::int64 value) {
  set_has_errfotipoperationcode();
  errfotipoperationcode_ = value;
}

// optional int64 errFotipFrameSize = 22 [default = 0];
inline bool TuningSourceState::has_errfotipframesize() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void TuningSourceState::set_has_errfotipframesize() {
  _has_bits_[0] |= 0x00200000u;
}
inline void TuningSourceState::clear_has_errfotipframesize() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void TuningSourceState::clear_errfotipframesize() {
  errfotipframesize_ = GOOGLE_LONGLONG(0);
  clear_has_errfotipframesize();
}
inline ::google::protobuf::int64 TuningSourceState::errfotipframesize() const {
  return errfotipframesize_;
}
inline void TuningSourceState::set_errfotipframesize(::google::protobuf::int64 value) {
  set_has_errfotipframesize();
  errfotipframesize_ = value;
}

// optional int64 errFotipRomSize = 23 [default = 0];
inline bool TuningSourceState::has_errfotipromsize() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void TuningSourceState::set_has_errfotipromsize() {
  _has_bits_[0] |= 0x00400000u;
}
inline void TuningSourceState::clear_has_errfotipromsize() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void TuningSourceState::clear_errfotipromsize() {
  errfotipromsize_ = GOOGLE_LONGLONG(0);
  clear_has_errfotipromsize();
}
inline ::google::protobuf::int64 TuningSourceState::errfotipromsize() const {
  return errfotipromsize_;
}
inline void TuningSourceState::set_errfotipromsize(::google::protobuf::int64 value) {
  set_has_errfotipromsize();
  errfotipromsize_ = value;
}

// optional int64 errFotipRomFrameSize = 24 [default = 0];
inline bool TuningSourceState::has_errfotipromframesize() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void TuningSourceState::set_has_errfotipromframesize() {
  _has_bits_[0] |= 0x00800000u;
}
inline void TuningSourceState::clear_has_errfotipromframesize() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void TuningSourceState::clear_errfotipromframesize() {
  errfotipromframesize_ = GOOGLE_LONGLONG(0);
  clear_has_errfotipromframesize();
}
inline ::google::protobuf::int64 TuningSourceState::errfotipromframesize() const {
  return errfotipromframesize_;
}
inline void TuningSourceState::set_errfotipromframesize(::google::protobuf::int64 value) {
  set_has_errfotipromframesize();
  errfotipromframesize_ = value;
}

// optional int64 fotipFlagBoundsCheckSuccess = 25 [default = 0];
inline bool TuningSourceState::has_fotipflagboundschecksuccess() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void TuningSourceState::set_has_fotipflagboundschecksuccess() {
  _has_bits_[0] |= 0x01000000u;
}
inline void TuningSourceState::clear_has_fotipflagboundschecksuccess() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void TuningSourceState::clear_fotipflagboundschecksuccess() {
  fotipflagboundschecksuccess_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagboundschecksuccess();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagboundschecksuccess() const {
  return fotipflagboundschecksuccess_;
}
inline void TuningSourceState::set_fotipflagboundschecksuccess(::google::protobuf::int64 value) {
  set_has_fotipflagboundschecksuccess();
  fotipflagboundschecksuccess_ = value;
}

// optional int64 fotipFlagWriteSuccess = 26 [default = 0];
inline bool TuningSourceState::has_fotipflagwritesuccess() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void TuningSourceState::set_has_fotipflagwritesuccess() {
  _has_bits_[0] |= 0x02000000u;
}
inline void TuningSourceState::clear_has_fotipflagwritesuccess() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void TuningSourceState::clear_fotipflagwritesuccess() {
  fotipflagwritesuccess_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagwritesuccess();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagwritesuccess() const {
  return fotipflagwritesuccess_;
}
inline void TuningSourceState::set_fotipflagwritesuccess(::google::protobuf::int64 value) {
  set_has_fotipflagwritesuccess();
  fotipflagwritesuccess_ = value;
}

// optional int64 fotipFlagDataTypeErr = 27 [default = 0];
inline bool TuningSourceState::has_fotipflagdatatypeerr() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void TuningSourceState::set_has_fotipflagdatatypeerr() {
  _has_bits_[0] |= 0x04000000u;
}
inline void TuningSourceState::clear_has_fotipflagdatatypeerr() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void TuningSourceState::clear_fotipflagdatatypeerr() {
  fotipflagdatatypeerr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagdatatypeerr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagdatatypeerr() const {
  return fotipflagdatatypeerr_;
}
inline void TuningSourceState::set_fotipflagdatatypeerr(::google::protobuf::int64 value) {
  set_has_fotipflagdatatypeerr();
  fotipflagdatatypeerr_ = value;
}

// optional int64 fotipFlagOpCodeErr = 28 [default = 0];
inline bool TuningSourceState::has_fotipflagopcodeerr() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void TuningSourceState::set_has_fotipflagopcodeerr() {
  _has_bits_[0] |= 0x08000000u;
}
inline void TuningSourceState::clear_has_fotipflagopcodeerr() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void TuningSourceState::clear_fotipflagopcodeerr() {
  fotipflagopcodeerr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagopcodeerr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagopcodeerr() const {
  return fotipflagopcodeerr_;
}
inline void TuningSourceState::set_fotipflagopcodeerr(::google::protobuf::int64 value) {
  set_has_fotipflagopcodeerr();
  fotipflagopcodeerr_ = value;
}

// optional int64 fotipFlagStartAddrErr = 29 [default = 0];
inline bool TuningSourceState::has_fotipflagstartaddrerr() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void TuningSourceState::set_has_fotipflagstartaddrerr() {
  _has_bits_[0] |= 0x10000000u;
}
inline void TuningSourceState::clear_has_fotipflagstartaddrerr() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void TuningSourceState::clear_fotipflagstartaddrerr() {
  fotipflagstartaddrerr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagstartaddrerr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagstartaddrerr() const {
  return fotipflagstartaddrerr_;
}
inline void TuningSourceState::set_fotipflagstartaddrerr(::google::protobuf::int64 value) {
  set_has_fotipflagstartaddrerr();
  fotipflagstartaddrerr_ = value;
}

// optional int64 fotipFlagRomSizeErr = 30 [default = 0];
inline bool TuningSourceState::has_fotipflagromsizeerr() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void TuningSourceState::set_has_fotipflagromsizeerr() {
  _has_bits_[0] |= 0x20000000u;
}
inline void TuningSourceState::clear_has_fotipflagromsizeerr() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void TuningSourceState::clear_fotipflagromsizeerr() {
  fotipflagromsizeerr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagromsizeerr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagromsizeerr() const {
  return fotipflagromsizeerr_;
}
inline void TuningSourceState::set_fotipflagromsizeerr(::google::protobuf::int64 value) {
  set_has_fotipflagromsizeerr();
  fotipflagromsizeerr_ = value;
}

// optional int64 fotipFlagRomFrameSizeErr = 31 [default = 0];
inline bool TuningSourceState::has_fotipflagromframesizeerr() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void TuningSourceState::set_has_fotipflagromframesizeerr() {
  _has_bits_[0] |= 0x40000000u;
}
inline void TuningSourceState::clear_has_fotipflagromframesizeerr() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void TuningSourceState::clear_fotipflagromframesizeerr() {
  fotipflagromframesizeerr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagromframesizeerr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagromframesizeerr() const {
  return fotipflagromframesizeerr_;
}
inline void TuningSourceState::set_fotipflagromframesizeerr(::google::protobuf::int64 value) {
  set_has_fotipflagromframesizeerr();
  fotipflagromframesizeerr_ = value;
}

// optional int64 fotipFlagFrameSizeErr = 32 [default = 0];
inline bool TuningSourceState::has_fotipflagframesizeerr() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void TuningSourceState::set_has_fotipflagframesizeerr() {
  _has_bits_[0] |= 0x80000000u;
}
inline void TuningSourceState::clear_has_fotipflagframesizeerr() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void TuningSourceState::clear_fotipflagframesizeerr() {
  fotipflagframesizeerr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagframesizeerr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagframesizeerr() const {
  return fotipflagframesizeerr_;
}
inline void TuningSourceState::set_fotipflagframesizeerr(::google::protobuf::int64 value) {
  set_has_fotipflagframesizeerr();
  fotipflagframesizeerr_ = value;
}

// optional int64 fotipFlagProtocolVersionErr = 33 [default = 0];
inline bool TuningSourceState::has_fotipflagprotocolversionerr() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void TuningSourceState::set_has_fotipflagprotocolversionerr() {
  _has_bits_[1] |= 0x00000001u;
}
inline void TuningSourceState::clear_has_fotipflagprotocolversionerr() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void TuningSourceState::clear_fotipflagprotocolversionerr() {
  fotipflagprotocolversionerr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagprotocolversionerr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagprotocolversionerr() const {
  return fotipflagprotocolversionerr_;
}
inline void TuningSourceState::set_fotipflagprotocolversionerr(::google::protobuf::int64 value) {
  set_has_fotipflagprotocolversionerr();
  fotipflagprotocolversionerr_ = value;
}

// optional int64 fotipFlagSubsystemKeyErr = 34 [default = 0];
inline bool TuningSourceState::has_fotipflagsubsystemkeyerr() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void TuningSourceState::set_has_fotipflagsubsystemkeyerr() {
  _has_bits_[1] |= 0x00000002u;
}
inline void TuningSourceState::clear_has_fotipflagsubsystemkeyerr() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void TuningSourceState::clear_fotipflagsubsystemkeyerr() {
  fotipflagsubsystemkeyerr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagsubsystemkeyerr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagsubsystemkeyerr() const {
  return fotipflagsubsystemkeyerr_;
}
inline void TuningSourceState::set_fotipflagsubsystemkeyerr(::google::protobuf::int64 value) {
  set_has_fotipflagsubsystemkeyerr();
  fotipflagsubsystemkeyerr_ = value;
}

// optional int64 fotipFlagUniueIDErr = 35 [default = 0];
inline bool TuningSourceState::has_fotipflaguniueiderr() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void TuningSourceState::set_has_fotipflaguniueiderr() {
  _has_bits_[1] |= 0x00000004u;
}
inline void TuningSourceState::clear_has_fotipflaguniueiderr() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void TuningSourceState::clear_fotipflaguniueiderr() {
  fotipflaguniueiderr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflaguniueiderr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflaguniueiderr() const {
  return fotipflaguniueiderr_;
}
inline void TuningSourceState::set_fotipflaguniueiderr(::google::protobuf::int64 value) {
  set_has_fotipflaguniueiderr();
  fotipflaguniueiderr_ = value;
}

// optional int64 fotipFlagOffsetErr = 36 [default = 0];
inline bool TuningSourceState::has_fotipflagoffseterr() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void TuningSourceState::set_has_fotipflagoffseterr() {
  _has_bits_[1] |= 0x00000008u;
}
inline void TuningSourceState::clear_has_fotipflagoffseterr() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void TuningSourceState::clear_fotipflagoffseterr() {
  fotipflagoffseterr_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagoffseterr();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagoffseterr() const {
  return fotipflagoffseterr_;
}
inline void TuningSourceState::set_fotipflagoffseterr(::google::protobuf::int64 value) {
  set_has_fotipflagoffseterr();
  fotipflagoffseterr_ = value;
}

// optional int64 fotipFlagApplySuccess = 37 [default = 0];
inline bool TuningSourceState::has_fotipflagapplysuccess() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void TuningSourceState::set_has_fotipflagapplysuccess() {
  _has_bits_[1] |= 0x00000010u;
}
inline void TuningSourceState::clear_has_fotipflagapplysuccess() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void TuningSourceState::clear_fotipflagapplysuccess() {
  fotipflagapplysuccess_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagapplysuccess();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagapplysuccess() const {
  return fotipflagapplysuccess_;
}
inline void TuningSourceState::set_fotipflagapplysuccess(::google::protobuf::int64 value) {
  set_has_fotipflagapplysuccess();
  fotipflagapplysuccess_ = value;
}

// optional int64 fotipFlagSetSOR = 38 [default = 0];
inline bool TuningSourceState::has_fotipflagsetsor() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void TuningSourceState::set_has_fotipflagsetsor() {
  _has_bits_[1] |= 0x00000020u;
}
inline void TuningSourceState::clear_has_fotipflagsetsor() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void TuningSourceState::clear_fotipflagsetsor() {
  fotipflagsetsor_ = GOOGLE_LONGLONG(0);
  clear_has_fotipflagsetsor();
}
inline ::google::protobuf::int64 TuningSourceState::fotipflagsetsor() const {
  return fotipflagsetsor_;
}
inline void TuningSourceState::set_fotipflagsetsor(::google::protobuf::int64 value) {
  set_has_fotipflagsetsor();
  fotipflagsetsor_ = value;
}

// optional int64 errAnalogLowBoundCheck = 39 [default = 0];
inline bool TuningSourceState::has_erranaloglowboundcheck() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void TuningSourceState::set_has_erranaloglowboundcheck() {
  _has_bits_[1] |= 0x00000040u;
}
inline void TuningSourceState::clear_has_erranaloglowboundcheck() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void TuningSourceState::clear_erranaloglowboundcheck() {
  erranaloglowboundcheck_ = GOOGLE_LONGLONG(0);
  clear_has_erranaloglowboundcheck();
}
inline ::google::protobuf::int64 TuningSourceState::erranaloglowboundcheck() const {
  return erranaloglowboundcheck_;
}
inline void TuningSourceState::set_erranaloglowboundcheck(::google::protobuf::int64 value) {
  set_has_erranaloglowboundcheck();
  erranaloglowboundcheck_ = value;
}

// optional int64 errAnalogHighBoundCheck = 40 [default = 0];
inline bool TuningSourceState::has_erranaloghighboundcheck() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void TuningSourceState::set_has_erranaloghighboundcheck() {
  _has_bits_[1] |= 0x00000080u;
}
inline void TuningSourceState::clear_has_erranaloghighboundcheck() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void TuningSourceState::clear_erranaloghighboundcheck() {
  erranaloghighboundcheck_ = GOOGLE_LONGLONG(0);
  clear_has_erranaloghighboundcheck();
}
inline ::google::protobuf::int64 TuningSourceState::erranaloghighboundcheck() const {
  return erranaloghighboundcheck_;
}
inline void TuningSourceState::set_erranaloghighboundcheck(::google::protobuf::int64 value) {
  set_has_erranaloghighboundcheck();
  erranaloghighboundcheck_ = value;
}

// optional int64 errRupCRC = 41 [default = 0];
inline bool TuningSourceState::has_errrupcrc() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void TuningSourceState::set_has_errrupcrc() {
  _has_bits_[1] |= 0x00000100u;
}
inline void TuningSourceState::clear_has_errrupcrc() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void TuningSourceState::clear_errrupcrc() {
  errrupcrc_ = GOOGLE_LONGLONG(0);
  clear_has_errrupcrc();
}
inline ::google::protobuf::int64 TuningSourceState::errrupcrc() const {
  return errrupcrc_;
}
inline void TuningSourceState::set_errrupcrc(::google::protobuf::int64 value) {
  set_has_errrupcrc();
  errrupcrc_ = value;
}

// optional bool controlIsActive = 42 [default = false];
inline bool TuningSourceState::has_controlisactive() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void TuningSourceState::set_has_controlisactive() {
  _has_bits_[1] |= 0x00000200u;
}
inline void TuningSourceState::clear_has_controlisactive() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void TuningSourceState::clear_controlisactive() {
  controlisactive_ = false;
  clear_has_controlisactive();
}
inline bool TuningSourceState::controlisactive() const {
  return controlisactive_;
}
inline void TuningSourceState::set_controlisactive(bool value) {
  set_has_controlisactive();
  controlisactive_ = value;
}

// optional bool setSOR = 43 [default = false];
inline bool TuningSourceState::has_setsor() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void TuningSourceState::set_has_setsor() {
  _has_bits_[1] |= 0x00000400u;
}
inline void TuningSourceState::clear_has_setsor() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void TuningSourceState::clear_setsor() {
  setsor_ = false;
  clear_has_setsor();
}
inline bool TuningSourceState::setsor() const {
  return setsor_;
}
inline void TuningSourceState::set_setsor(bool value) {
  set_has_setsor();
  setsor_ = value;
}

// -------------------------------------------------------------------

// GetTuningSourcesStatesReply

// optional int32 error = 1 [default = 0];
inline bool GetTuningSourcesStatesReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTuningSourcesStatesReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTuningSourcesStatesReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTuningSourcesStatesReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetTuningSourcesStatesReply::error() const {
  return error_;
}
inline void GetTuningSourcesStatesReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.TuningSourceState tuningSourcesState = 2;
inline int GetTuningSourcesStatesReply::tuningsourcesstate_size() const {
  return tuningsourcesstate_.size();
}
inline void GetTuningSourcesStatesReply::clear_tuningsourcesstate() {
  tuningsourcesstate_.Clear();
}
inline const ::Network::TuningSourceState& GetTuningSourcesStatesReply::tuningsourcesstate(int index) const {
  return tuningsourcesstate_.Get(index);
}
inline ::Network::TuningSourceState* GetTuningSourcesStatesReply::mutable_tuningsourcesstate(int index) {
  return tuningsourcesstate_.Mutable(index);
}
inline ::Network::TuningSourceState* GetTuningSourcesStatesReply::add_tuningsourcesstate() {
  return tuningsourcesstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::TuningSourceState >&
GetTuningSourcesStatesReply::tuningsourcesstate() const {
  return tuningsourcesstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::TuningSourceState >*
GetTuningSourcesStatesReply::mutable_tuningsourcesstate() {
  return &tuningsourcesstate_;
}

// optional bool singleLmControlMode = 3 [default = true];
inline bool GetTuningSourcesStatesReply::has_singlelmcontrolmode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetTuningSourcesStatesReply::set_has_singlelmcontrolmode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetTuningSourcesStatesReply::clear_has_singlelmcontrolmode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetTuningSourcesStatesReply::clear_singlelmcontrolmode() {
  singlelmcontrolmode_ = true;
  clear_has_singlelmcontrolmode();
}
inline bool GetTuningSourcesStatesReply::singlelmcontrolmode() const {
  return singlelmcontrolmode_;
}
inline void GetTuningSourcesStatesReply::set_singlelmcontrolmode(bool value) {
  set_has_singlelmcontrolmode();
  singlelmcontrolmode_ = value;
}

// -------------------------------------------------------------------

// ChangeConrolledTuningSourceRequest

// optional string tuningSourceEquipmentID = 1;
inline bool ChangeConrolledTuningSourceRequest::has_tuningsourceequipmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeConrolledTuningSourceRequest::set_has_tuningsourceequipmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeConrolledTuningSourceRequest::clear_has_tuningsourceequipmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeConrolledTuningSourceRequest::clear_tuningsourceequipmentid() {
  if (tuningsourceequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    tuningsourceequipmentid_->clear();
  }
  clear_has_tuningsourceequipmentid();
}
inline const ::std::string& ChangeConrolledTuningSourceRequest::tuningsourceequipmentid() const {
  return *tuningsourceequipmentid_;
}
inline void ChangeConrolledTuningSourceRequest::set_tuningsourceequipmentid(const ::std::string& value) {
  set_has_tuningsourceequipmentid();
  if (tuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    tuningsourceequipmentid_ = new ::std::string;
  }
  tuningsourceequipmentid_->assign(value);
}
inline void ChangeConrolledTuningSourceRequest::set_tuningsourceequipmentid(const char* value) {
  set_has_tuningsourceequipmentid();
  if (tuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    tuningsourceequipmentid_ = new ::std::string;
  }
  tuningsourceequipmentid_->assign(value);
}
inline void ChangeConrolledTuningSourceRequest::set_tuningsourceequipmentid(const char* value, size_t size) {
  set_has_tuningsourceequipmentid();
  if (tuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    tuningsourceequipmentid_ = new ::std::string;
  }
  tuningsourceequipmentid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChangeConrolledTuningSourceRequest::mutable_tuningsourceequipmentid() {
  set_has_tuningsourceequipmentid();
  if (tuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    tuningsourceequipmentid_ = new ::std::string;
  }
  return tuningsourceequipmentid_;
}
inline ::std::string* ChangeConrolledTuningSourceRequest::release_tuningsourceequipmentid() {
  clear_has_tuningsourceequipmentid();
  if (tuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tuningsourceequipmentid_;
    tuningsourceequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChangeConrolledTuningSourceRequest::set_allocated_tuningsourceequipmentid(::std::string* tuningsourceequipmentid) {
  if (tuningsourceequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete tuningsourceequipmentid_;
  }
  if (tuningsourceequipmentid) {
    set_has_tuningsourceequipmentid();
    tuningsourceequipmentid_ = tuningsourceequipmentid;
  } else {
    clear_has_tuningsourceequipmentid();
    tuningsourceequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool activateControl = 2 [default = false];
inline bool ChangeConrolledTuningSourceRequest::has_activatecontrol() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeConrolledTuningSourceRequest::set_has_activatecontrol() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeConrolledTuningSourceRequest::clear_has_activatecontrol() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeConrolledTuningSourceRequest::clear_activatecontrol() {
  activatecontrol_ = false;
  clear_has_activatecontrol();
}
inline bool ChangeConrolledTuningSourceRequest::activatecontrol() const {
  return activatecontrol_;
}
inline void ChangeConrolledTuningSourceRequest::set_activatecontrol(bool value) {
  set_has_activatecontrol();
  activatecontrol_ = value;
}

// -------------------------------------------------------------------

// ChangeConrolledTuningSourceReply

// optional int32 error = 1 [default = 0];
inline bool ChangeConrolledTuningSourceReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeConrolledTuningSourceReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeConrolledTuningSourceReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeConrolledTuningSourceReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 ChangeConrolledTuningSourceReply::error() const {
  return error_;
}
inline void ChangeConrolledTuningSourceReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional string controlledTuningSourceEquipmentID = 2;
inline bool ChangeConrolledTuningSourceReply::has_controlledtuningsourceequipmentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeConrolledTuningSourceReply::set_has_controlledtuningsourceequipmentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeConrolledTuningSourceReply::clear_has_controlledtuningsourceequipmentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeConrolledTuningSourceReply::clear_controlledtuningsourceequipmentid() {
  if (controlledtuningsourceequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    controlledtuningsourceequipmentid_->clear();
  }
  clear_has_controlledtuningsourceequipmentid();
}
inline const ::std::string& ChangeConrolledTuningSourceReply::controlledtuningsourceequipmentid() const {
  return *controlledtuningsourceequipmentid_;
}
inline void ChangeConrolledTuningSourceReply::set_controlledtuningsourceequipmentid(const ::std::string& value) {
  set_has_controlledtuningsourceequipmentid();
  if (controlledtuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    controlledtuningsourceequipmentid_ = new ::std::string;
  }
  controlledtuningsourceequipmentid_->assign(value);
}
inline void ChangeConrolledTuningSourceReply::set_controlledtuningsourceequipmentid(const char* value) {
  set_has_controlledtuningsourceequipmentid();
  if (controlledtuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    controlledtuningsourceequipmentid_ = new ::std::string;
  }
  controlledtuningsourceequipmentid_->assign(value);
}
inline void ChangeConrolledTuningSourceReply::set_controlledtuningsourceequipmentid(const char* value, size_t size) {
  set_has_controlledtuningsourceequipmentid();
  if (controlledtuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    controlledtuningsourceequipmentid_ = new ::std::string;
  }
  controlledtuningsourceequipmentid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChangeConrolledTuningSourceReply::mutable_controlledtuningsourceequipmentid() {
  set_has_controlledtuningsourceequipmentid();
  if (controlledtuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    controlledtuningsourceequipmentid_ = new ::std::string;
  }
  return controlledtuningsourceequipmentid_;
}
inline ::std::string* ChangeConrolledTuningSourceReply::release_controlledtuningsourceequipmentid() {
  clear_has_controlledtuningsourceequipmentid();
  if (controlledtuningsourceequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = controlledtuningsourceequipmentid_;
    controlledtuningsourceequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChangeConrolledTuningSourceReply::set_allocated_controlledtuningsourceequipmentid(::std::string* controlledtuningsourceequipmentid) {
  if (controlledtuningsourceequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete controlledtuningsourceequipmentid_;
  }
  if (controlledtuningsourceequipmentid) {
    set_has_controlledtuningsourceequipmentid();
    controlledtuningsourceequipmentid_ = controlledtuningsourceequipmentid;
  } else {
    clear_has_controlledtuningsourceequipmentid();
    controlledtuningsourceequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool controlIsActive = 3;
inline bool ChangeConrolledTuningSourceReply::has_controlisactive() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeConrolledTuningSourceReply::set_has_controlisactive() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeConrolledTuningSourceReply::clear_has_controlisactive() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeConrolledTuningSourceReply::clear_controlisactive() {
  controlisactive_ = false;
  clear_has_controlisactive();
}
inline bool ChangeConrolledTuningSourceReply::controlisactive() const {
  return controlisactive_;
}
inline void ChangeConrolledTuningSourceReply::set_controlisactive(bool value) {
  set_has_controlisactive();
  controlisactive_ = value;
}

// -------------------------------------------------------------------

// TuningSignalsRead

// repeated uint64 signalHash = 2;
inline int TuningSignalsRead::signalhash_size() const {
  return signalhash_.size();
}
inline void TuningSignalsRead::clear_signalhash() {
  signalhash_.Clear();
}
inline ::google::protobuf::uint64 TuningSignalsRead::signalhash(int index) const {
  return signalhash_.Get(index);
}
inline void TuningSignalsRead::set_signalhash(int index, ::google::protobuf::uint64 value) {
  signalhash_.Set(index, value);
}
inline void TuningSignalsRead::add_signalhash(::google::protobuf::uint64 value) {
  signalhash_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TuningSignalsRead::signalhash() const {
  return signalhash_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TuningSignalsRead::mutable_signalhash() {
  return &signalhash_;
}

// -------------------------------------------------------------------

// TuningSignalState

// optional fixed64 signalHash = 1 [default = 0];
inline bool TuningSignalState::has_signalhash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TuningSignalState::set_has_signalhash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TuningSignalState::clear_has_signalhash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TuningSignalState::clear_signalhash() {
  signalhash_ = GOOGLE_ULONGLONG(0);
  clear_has_signalhash();
}
inline ::google::protobuf::uint64 TuningSignalState::signalhash() const {
  return signalhash_;
}
inline void TuningSignalState::set_signalhash(::google::protobuf::uint64 value) {
  set_has_signalhash();
  signalhash_ = value;
}

// optional int32 error = 2 [default = 0];
inline bool TuningSignalState::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TuningSignalState::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TuningSignalState::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TuningSignalState::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 TuningSignalState::error() const {
  return error_;
}
inline void TuningSignalState::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional bool valid = 3 [default = false];
inline bool TuningSignalState::has_valid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TuningSignalState::set_has_valid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TuningSignalState::clear_has_valid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TuningSignalState::clear_valid() {
  valid_ = false;
  clear_has_valid();
}
inline bool TuningSignalState::valid() const {
  return valid_;
}
inline void TuningSignalState::set_valid(bool value) {
  set_has_valid();
  valid_ = value;
}

// optional .Proto.TuningValue value = 4;
inline bool TuningSignalState::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TuningSignalState::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TuningSignalState::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TuningSignalState::clear_value() {
  if (value_ != NULL) value_->::Proto::TuningValue::Clear();
  clear_has_value();
}
inline const ::Proto::TuningValue& TuningSignalState::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::Proto::TuningValue* TuningSignalState::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::Proto::TuningValue;
  return value_;
}
inline ::Proto::TuningValue* TuningSignalState::release_value() {
  clear_has_value();
  ::Proto::TuningValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline void TuningSignalState::set_allocated_value(::Proto::TuningValue* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
}

// optional .Proto.TuningValue readLowBound = 5;
inline bool TuningSignalState::has_readlowbound() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TuningSignalState::set_has_readlowbound() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TuningSignalState::clear_has_readlowbound() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TuningSignalState::clear_readlowbound() {
  if (readlowbound_ != NULL) readlowbound_->::Proto::TuningValue::Clear();
  clear_has_readlowbound();
}
inline const ::Proto::TuningValue& TuningSignalState::readlowbound() const {
  return readlowbound_ != NULL ? *readlowbound_ : *default_instance_->readlowbound_;
}
inline ::Proto::TuningValue* TuningSignalState::mutable_readlowbound() {
  set_has_readlowbound();
  if (readlowbound_ == NULL) readlowbound_ = new ::Proto::TuningValue;
  return readlowbound_;
}
inline ::Proto::TuningValue* TuningSignalState::release_readlowbound() {
  clear_has_readlowbound();
  ::Proto::TuningValue* temp = readlowbound_;
  readlowbound_ = NULL;
  return temp;
}
inline void TuningSignalState::set_allocated_readlowbound(::Proto::TuningValue* readlowbound) {
  delete readlowbound_;
  readlowbound_ = readlowbound;
  if (readlowbound) {
    set_has_readlowbound();
  } else {
    clear_has_readlowbound();
  }
}

// optional .Proto.TuningValue readHighBound = 6;
inline bool TuningSignalState::has_readhighbound() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TuningSignalState::set_has_readhighbound() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TuningSignalState::clear_has_readhighbound() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TuningSignalState::clear_readhighbound() {
  if (readhighbound_ != NULL) readhighbound_->::Proto::TuningValue::Clear();
  clear_has_readhighbound();
}
inline const ::Proto::TuningValue& TuningSignalState::readhighbound() const {
  return readhighbound_ != NULL ? *readhighbound_ : *default_instance_->readhighbound_;
}
inline ::Proto::TuningValue* TuningSignalState::mutable_readhighbound() {
  set_has_readhighbound();
  if (readhighbound_ == NULL) readhighbound_ = new ::Proto::TuningValue;
  return readhighbound_;
}
inline ::Proto::TuningValue* TuningSignalState::release_readhighbound() {
  clear_has_readhighbound();
  ::Proto::TuningValue* temp = readhighbound_;
  readhighbound_ = NULL;
  return temp;
}
inline void TuningSignalState::set_allocated_readhighbound(::Proto::TuningValue* readhighbound) {
  delete readhighbound_;
  readhighbound_ = readhighbound;
  if (readhighbound) {
    set_has_readhighbound();
  } else {
    clear_has_readhighbound();
  }
}

// optional bool writeInProgress = 7 [default = false];
inline bool TuningSignalState::has_writeinprogress() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TuningSignalState::set_has_writeinprogress() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TuningSignalState::clear_has_writeinprogress() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TuningSignalState::clear_writeinprogress() {
  writeinprogress_ = false;
  clear_has_writeinprogress();
}
inline bool TuningSignalState::writeinprogress() const {
  return writeinprogress_;
}
inline void TuningSignalState::set_writeinprogress(bool value) {
  set_has_writeinprogress();
  writeinprogress_ = value;
}

// optional int32 writeErrorCode = 8 [default = 0];
inline bool TuningSignalState::has_writeerrorcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TuningSignalState::set_has_writeerrorcode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TuningSignalState::clear_has_writeerrorcode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TuningSignalState::clear_writeerrorcode() {
  writeerrorcode_ = 0;
  clear_has_writeerrorcode();
}
inline ::google::protobuf::int32 TuningSignalState::writeerrorcode() const {
  return writeerrorcode_;
}
inline void TuningSignalState::set_writeerrorcode(::google::protobuf::int32 value) {
  set_has_writeerrorcode();
  writeerrorcode_ = value;
}

// optional fixed64 writeClient = 9 [default = 0];
inline bool TuningSignalState::has_writeclient() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TuningSignalState::set_has_writeclient() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TuningSignalState::clear_has_writeclient() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TuningSignalState::clear_writeclient() {
  writeclient_ = GOOGLE_ULONGLONG(0);
  clear_has_writeclient();
}
inline ::google::protobuf::uint64 TuningSignalState::writeclient() const {
  return writeclient_;
}
inline void TuningSignalState::set_writeclient(::google::protobuf::uint64 value) {
  set_has_writeclient();
  writeclient_ = value;
}

// optional sfixed64 successfulReadTime = 10 [default = 0];
inline bool TuningSignalState::has_successfulreadtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TuningSignalState::set_has_successfulreadtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TuningSignalState::clear_has_successfulreadtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TuningSignalState::clear_successfulreadtime() {
  successfulreadtime_ = GOOGLE_LONGLONG(0);
  clear_has_successfulreadtime();
}
inline ::google::protobuf::int64 TuningSignalState::successfulreadtime() const {
  return successfulreadtime_;
}
inline void TuningSignalState::set_successfulreadtime(::google::protobuf::int64 value) {
  set_has_successfulreadtime();
  successfulreadtime_ = value;
}

// optional sfixed64 writeRequestTime = 11 [default = 0];
inline bool TuningSignalState::has_writerequesttime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TuningSignalState::set_has_writerequesttime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TuningSignalState::clear_has_writerequesttime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TuningSignalState::clear_writerequesttime() {
  writerequesttime_ = GOOGLE_LONGLONG(0);
  clear_has_writerequesttime();
}
inline ::google::protobuf::int64 TuningSignalState::writerequesttime() const {
  return writerequesttime_;
}
inline void TuningSignalState::set_writerequesttime(::google::protobuf::int64 value) {
  set_has_writerequesttime();
  writerequesttime_ = value;
}

// optional sfixed64 successfulWriteTime = 12 [default = 0];
inline bool TuningSignalState::has_successfulwritetime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TuningSignalState::set_has_successfulwritetime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TuningSignalState::clear_has_successfulwritetime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TuningSignalState::clear_successfulwritetime() {
  successfulwritetime_ = GOOGLE_LONGLONG(0);
  clear_has_successfulwritetime();
}
inline ::google::protobuf::int64 TuningSignalState::successfulwritetime() const {
  return successfulwritetime_;
}
inline void TuningSignalState::set_successfulwritetime(::google::protobuf::int64 value) {
  set_has_successfulwritetime();
  successfulwritetime_ = value;
}

// optional sfixed64 unsuccessfulWriteTime = 13 [default = 0];
inline bool TuningSignalState::has_unsuccessfulwritetime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TuningSignalState::set_has_unsuccessfulwritetime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TuningSignalState::clear_has_unsuccessfulwritetime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TuningSignalState::clear_unsuccessfulwritetime() {
  unsuccessfulwritetime_ = GOOGLE_LONGLONG(0);
  clear_has_unsuccessfulwritetime();
}
inline ::google::protobuf::int64 TuningSignalState::unsuccessfulwritetime() const {
  return unsuccessfulwritetime_;
}
inline void TuningSignalState::set_unsuccessfulwritetime(::google::protobuf::int64 value) {
  set_has_unsuccessfulwritetime();
  unsuccessfulwritetime_ = value;
}

// -------------------------------------------------------------------

// TuningSignalsReadReply

// optional int32 error = 1 [default = 0];
inline bool TuningSignalsReadReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TuningSignalsReadReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TuningSignalsReadReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TuningSignalsReadReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 TuningSignalsReadReply::error() const {
  return error_;
}
inline void TuningSignalsReadReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.TuningSignalState tuningSignalState = 2;
inline int TuningSignalsReadReply::tuningsignalstate_size() const {
  return tuningsignalstate_.size();
}
inline void TuningSignalsReadReply::clear_tuningsignalstate() {
  tuningsignalstate_.Clear();
}
inline const ::Network::TuningSignalState& TuningSignalsReadReply::tuningsignalstate(int index) const {
  return tuningsignalstate_.Get(index);
}
inline ::Network::TuningSignalState* TuningSignalsReadReply::mutable_tuningsignalstate(int index) {
  return tuningsignalstate_.Mutable(index);
}
inline ::Network::TuningSignalState* TuningSignalsReadReply::add_tuningsignalstate() {
  return tuningsignalstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalState >&
TuningSignalsReadReply::tuningsignalstate() const {
  return tuningsignalstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalState >*
TuningSignalsReadReply::mutable_tuningsignalstate() {
  return &tuningsignalstate_;
}

// -------------------------------------------------------------------

// TuningWriteCommand

// optional uint64 signalHash = 1 [default = 0];
inline bool TuningWriteCommand::has_signalhash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TuningWriteCommand::set_has_signalhash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TuningWriteCommand::clear_has_signalhash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TuningWriteCommand::clear_signalhash() {
  signalhash_ = GOOGLE_ULONGLONG(0);
  clear_has_signalhash();
}
inline ::google::protobuf::uint64 TuningWriteCommand::signalhash() const {
  return signalhash_;
}
inline void TuningWriteCommand::set_signalhash(::google::protobuf::uint64 value) {
  set_has_signalhash();
  signalhash_ = value;
}

// optional .Proto.TuningValue value = 2;
inline bool TuningWriteCommand::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TuningWriteCommand::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TuningWriteCommand::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TuningWriteCommand::clear_value() {
  if (value_ != NULL) value_->::Proto::TuningValue::Clear();
  clear_has_value();
}
inline const ::Proto::TuningValue& TuningWriteCommand::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::Proto::TuningValue* TuningWriteCommand::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::Proto::TuningValue;
  return value_;
}
inline ::Proto::TuningValue* TuningWriteCommand::release_value() {
  clear_has_value();
  ::Proto::TuningValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline void TuningWriteCommand::set_allocated_value(::Proto::TuningValue* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
}

// -------------------------------------------------------------------

// TuningSignalsWrite

// optional bool autoApply = 2 [default = false];
inline bool TuningSignalsWrite::has_autoapply() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TuningSignalsWrite::set_has_autoapply() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TuningSignalsWrite::clear_has_autoapply() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TuningSignalsWrite::clear_autoapply() {
  autoapply_ = false;
  clear_has_autoapply();
}
inline bool TuningSignalsWrite::autoapply() const {
  return autoapply_;
}
inline void TuningSignalsWrite::set_autoapply(bool value) {
  set_has_autoapply();
  autoapply_ = value;
}

// repeated .Network.TuningWriteCommand commands = 3;
inline int TuningSignalsWrite::commands_size() const {
  return commands_.size();
}
inline void TuningSignalsWrite::clear_commands() {
  commands_.Clear();
}
inline const ::Network::TuningWriteCommand& TuningSignalsWrite::commands(int index) const {
  return commands_.Get(index);
}
inline ::Network::TuningWriteCommand* TuningSignalsWrite::mutable_commands(int index) {
  return commands_.Mutable(index);
}
inline ::Network::TuningWriteCommand* TuningSignalsWrite::add_commands() {
  return commands_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::TuningWriteCommand >&
TuningSignalsWrite::commands() const {
  return commands_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::TuningWriteCommand >*
TuningSignalsWrite::mutable_commands() {
  return &commands_;
}

// -------------------------------------------------------------------

// TuningSignalWriteResult

// optional uint64 signalHash = 1 [default = 0];
inline bool TuningSignalWriteResult::has_signalhash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TuningSignalWriteResult::set_has_signalhash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TuningSignalWriteResult::clear_has_signalhash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TuningSignalWriteResult::clear_signalhash() {
  signalhash_ = GOOGLE_ULONGLONG(0);
  clear_has_signalhash();
}
inline ::google::protobuf::uint64 TuningSignalWriteResult::signalhash() const {
  return signalhash_;
}
inline void TuningSignalWriteResult::set_signalhash(::google::protobuf::uint64 value) {
  set_has_signalhash();
  signalhash_ = value;
}

// optional int32 error = 2 [default = 0];
inline bool TuningSignalWriteResult::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TuningSignalWriteResult::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TuningSignalWriteResult::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TuningSignalWriteResult::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 TuningSignalWriteResult::error() const {
  return error_;
}
inline void TuningSignalWriteResult::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// TuningSignalsWriteReply

// optional int32 error = 1 [default = 0];
inline bool TuningSignalsWriteReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TuningSignalsWriteReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TuningSignalsWriteReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TuningSignalsWriteReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 TuningSignalsWriteReply::error() const {
  return error_;
}
inline void TuningSignalsWriteReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// repeated .Network.TuningSignalWriteResult writeResult = 2;
inline int TuningSignalsWriteReply::writeresult_size() const {
  return writeresult_.size();
}
inline void TuningSignalsWriteReply::clear_writeresult() {
  writeresult_.Clear();
}
inline const ::Network::TuningSignalWriteResult& TuningSignalsWriteReply::writeresult(int index) const {
  return writeresult_.Get(index);
}
inline ::Network::TuningSignalWriteResult* TuningSignalsWriteReply::mutable_writeresult(int index) {
  return writeresult_.Mutable(index);
}
inline ::Network::TuningSignalWriteResult* TuningSignalsWriteReply::add_writeresult() {
  return writeresult_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalWriteResult >&
TuningSignalsWriteReply::writeresult() const {
  return writeresult_;
}
inline ::google::protobuf::RepeatedPtrField< ::Network::TuningSignalWriteResult >*
TuningSignalsWriteReply::mutable_writeresult() {
  return &writeresult_;
}

// -------------------------------------------------------------------

// TuningSignalsApply

// -------------------------------------------------------------------

// TuningSignalsApplyReply

// optional int32 error = 1 [default = 0];
inline bool TuningSignalsApplyReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TuningSignalsApplyReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TuningSignalsApplyReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TuningSignalsApplyReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 TuningSignalsApplyReply::error() const {
  return error_;
}
inline void TuningSignalsApplyReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// -------------------------------------------------------------------

// SaveAppSignalsStatesToArchiveRequest

// optional string clientEquipmentID = 1;
inline bool SaveAppSignalsStatesToArchiveRequest::has_clientequipmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveAppSignalsStatesToArchiveRequest::set_has_clientequipmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveAppSignalsStatesToArchiveRequest::clear_has_clientequipmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveAppSignalsStatesToArchiveRequest::clear_clientequipmentid() {
  if (clientequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_->clear();
  }
  clear_has_clientequipmentid();
}
inline const ::std::string& SaveAppSignalsStatesToArchiveRequest::clientequipmentid() const {
  return *clientequipmentid_;
}
inline void SaveAppSignalsStatesToArchiveRequest::set_clientequipmentid(const ::std::string& value) {
  set_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_ = new ::std::string;
  }
  clientequipmentid_->assign(value);
}
inline void SaveAppSignalsStatesToArchiveRequest::set_clientequipmentid(const char* value) {
  set_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_ = new ::std::string;
  }
  clientequipmentid_->assign(value);
}
inline void SaveAppSignalsStatesToArchiveRequest::set_clientequipmentid(const char* value, size_t size) {
  set_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_ = new ::std::string;
  }
  clientequipmentid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SaveAppSignalsStatesToArchiveRequest::mutable_clientequipmentid() {
  set_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_ = new ::std::string;
  }
  return clientequipmentid_;
}
inline ::std::string* SaveAppSignalsStatesToArchiveRequest::release_clientequipmentid() {
  clear_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = clientequipmentid_;
    clientequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SaveAppSignalsStatesToArchiveRequest::set_allocated_clientequipmentid(::std::string* clientequipmentid) {
  if (clientequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete clientequipmentid_;
  }
  if (clientequipmentid) {
    set_has_clientequipmentid();
    clientequipmentid_ = clientequipmentid;
  } else {
    clear_has_clientequipmentid();
    clientequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .Proto.AppSignalState appSignalStates = 2;
inline int SaveAppSignalsStatesToArchiveRequest::appsignalstates_size() const {
  return appsignalstates_.size();
}
inline void SaveAppSignalsStatesToArchiveRequest::clear_appsignalstates() {
  appsignalstates_.Clear();
}
inline const ::Proto::AppSignalState& SaveAppSignalsStatesToArchiveRequest::appsignalstates(int index) const {
  return appsignalstates_.Get(index);
}
inline ::Proto::AppSignalState* SaveAppSignalsStatesToArchiveRequest::mutable_appsignalstates(int index) {
  return appsignalstates_.Mutable(index);
}
inline ::Proto::AppSignalState* SaveAppSignalsStatesToArchiveRequest::add_appsignalstates() {
  return appsignalstates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >&
SaveAppSignalsStatesToArchiveRequest::appsignalstates() const {
  return appsignalstates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >*
SaveAppSignalsStatesToArchiveRequest::mutable_appsignalstates() {
  return &appsignalstates_;
}

// -------------------------------------------------------------------

// SaveAppSignalsStatesToArchiveReply

// optional int32 error = 1 [default = 0];
inline bool SaveAppSignalsStatesToArchiveReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveAppSignalsStatesToArchiveReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveAppSignalsStatesToArchiveReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveAppSignalsStatesToArchiveReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 SaveAppSignalsStatesToArchiveReply::error() const {
  return error_;
}
inline void SaveAppSignalsStatesToArchiveReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 archError = 2 [default = 100];
inline bool SaveAppSignalsStatesToArchiveReply::has_archerror() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveAppSignalsStatesToArchiveReply::set_has_archerror() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveAppSignalsStatesToArchiveReply::clear_has_archerror() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveAppSignalsStatesToArchiveReply::clear_archerror() {
  archerror_ = 100;
  clear_has_archerror();
}
inline ::google::protobuf::int32 SaveAppSignalsStatesToArchiveReply::archerror() const {
  return archerror_;
}
inline void SaveAppSignalsStatesToArchiveReply::set_archerror(::google::protobuf::int32 value) {
  set_has_archerror();
  archerror_ = value;
}

// -------------------------------------------------------------------

// GetAppSignalStatesFromArchiveStartRequest

// optional string clientEquipmentID = 1;
inline bool GetAppSignalStatesFromArchiveStartRequest::has_clientequipmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_has_clientequipmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_has_clientequipmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_clientequipmentid() {
  if (clientequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_->clear();
  }
  clear_has_clientequipmentid();
}
inline const ::std::string& GetAppSignalStatesFromArchiveStartRequest::clientequipmentid() const {
  return *clientequipmentid_;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_clientequipmentid(const ::std::string& value) {
  set_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_ = new ::std::string;
  }
  clientequipmentid_->assign(value);
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_clientequipmentid(const char* value) {
  set_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_ = new ::std::string;
  }
  clientequipmentid_->assign(value);
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_clientequipmentid(const char* value, size_t size) {
  set_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_ = new ::std::string;
  }
  clientequipmentid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetAppSignalStatesFromArchiveStartRequest::mutable_clientequipmentid() {
  set_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    clientequipmentid_ = new ::std::string;
  }
  return clientequipmentid_;
}
inline ::std::string* GetAppSignalStatesFromArchiveStartRequest::release_clientequipmentid() {
  clear_has_clientequipmentid();
  if (clientequipmentid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = clientequipmentid_;
    clientequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_allocated_clientequipmentid(::std::string* clientequipmentid) {
  if (clientequipmentid_ != &::google::protobuf::internal::kEmptyString) {
    delete clientequipmentid_;
  }
  if (clientequipmentid) {
    set_has_clientequipmentid();
    clientequipmentid_ = clientequipmentid;
  } else {
    clear_has_clientequipmentid();
    clientequipmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 timeType = 2 [default = 1];
inline bool GetAppSignalStatesFromArchiveStartRequest::has_timetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_has_timetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_has_timetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_timetype() {
  timetype_ = 1;
  clear_has_timetype();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveStartRequest::timetype() const {
  return timetype_;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_timetype(::google::protobuf::int32 value) {
  set_has_timetype();
  timetype_ = value;
}

// optional sfixed64 startTime = 3 [default = 0];
inline bool GetAppSignalStatesFromArchiveStartRequest::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 GetAppSignalStatesFromArchiveStartRequest::starttime() const {
  return starttime_;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
}

// optional sfixed64 endTime = 4 [default = 0];
inline bool GetAppSignalStatesFromArchiveStartRequest::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 GetAppSignalStatesFromArchiveStartRequest::endtime() const {
  return endtime_;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
}

// repeated uint64 signalHashes = 5;
inline int GetAppSignalStatesFromArchiveStartRequest::signalhashes_size() const {
  return signalhashes_.size();
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_signalhashes() {
  signalhashes_.Clear();
}
inline ::google::protobuf::uint64 GetAppSignalStatesFromArchiveStartRequest::signalhashes(int index) const {
  return signalhashes_.Get(index);
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_signalhashes(int index, ::google::protobuf::uint64 value) {
  signalhashes_.Set(index, value);
}
inline void GetAppSignalStatesFromArchiveStartRequest::add_signalhashes(::google::protobuf::uint64 value) {
  signalhashes_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetAppSignalStatesFromArchiveStartRequest::signalhashes() const {
  return signalhashes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetAppSignalStatesFromArchiveStartRequest::mutable_signalhashes() {
  return &signalhashes_;
}

// optional bool removePeriodic = 6 [default = true];
inline bool GetAppSignalStatesFromArchiveStartRequest::has_removeperiodic() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_has_removeperiodic() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_has_removeperiodic() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetAppSignalStatesFromArchiveStartRequest::clear_removeperiodic() {
  removeperiodic_ = true;
  clear_has_removeperiodic();
}
inline bool GetAppSignalStatesFromArchiveStartRequest::removeperiodic() const {
  return removeperiodic_;
}
inline void GetAppSignalStatesFromArchiveStartRequest::set_removeperiodic(bool value) {
  set_has_removeperiodic();
  removeperiodic_ = value;
}

// -------------------------------------------------------------------

// GetAppSignalStatesFromArchiveStartReply

// optional int32 error = 1 [default = 0];
inline bool GetAppSignalStatesFromArchiveStartReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalStatesFromArchiveStartReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalStatesFromArchiveStartReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveStartReply::error() const {
  return error_;
}
inline void GetAppSignalStatesFromArchiveStartReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 archError = 2 [default = 100];
inline bool GetAppSignalStatesFromArchiveStartReply::has_archerror() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartReply::set_has_archerror() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppSignalStatesFromArchiveStartReply::clear_has_archerror() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppSignalStatesFromArchiveStartReply::clear_archerror() {
  archerror_ = 100;
  clear_has_archerror();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveStartReply::archerror() const {
  return archerror_;
}
inline void GetAppSignalStatesFromArchiveStartReply::set_archerror(::google::protobuf::int32 value) {
  set_has_archerror();
  archerror_ = value;
}

// optional string errorString = 4;
inline bool GetAppSignalStatesFromArchiveStartReply::has_errorstring() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartReply::set_has_errorstring() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAppSignalStatesFromArchiveStartReply::clear_has_errorstring() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAppSignalStatesFromArchiveStartReply::clear_errorstring() {
  if (errorstring_ != &::google::protobuf::internal::kEmptyString) {
    errorstring_->clear();
  }
  clear_has_errorstring();
}
inline const ::std::string& GetAppSignalStatesFromArchiveStartReply::errorstring() const {
  return *errorstring_;
}
inline void GetAppSignalStatesFromArchiveStartReply::set_errorstring(const ::std::string& value) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void GetAppSignalStatesFromArchiveStartReply::set_errorstring(const char* value) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void GetAppSignalStatesFromArchiveStartReply::set_errorstring(const char* value, size_t size) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetAppSignalStatesFromArchiveStartReply::mutable_errorstring() {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  return errorstring_;
}
inline ::std::string* GetAppSignalStatesFromArchiveStartReply::release_errorstring() {
  clear_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = errorstring_;
    errorstring_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetAppSignalStatesFromArchiveStartReply::set_allocated_errorstring(::std::string* errorstring) {
  if (errorstring_ != &::google::protobuf::internal::kEmptyString) {
    delete errorstring_;
  }
  if (errorstring) {
    set_has_errorstring();
    errorstring_ = errorstring;
  } else {
    clear_has_errorstring();
    errorstring_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 requestID = 3 [default = 0];
inline bool GetAppSignalStatesFromArchiveStartReply::has_requestid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAppSignalStatesFromArchiveStartReply::set_has_requestid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAppSignalStatesFromArchiveStartReply::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAppSignalStatesFromArchiveStartReply::clear_requestid() {
  requestid_ = 0u;
  clear_has_requestid();
}
inline ::google::protobuf::uint32 GetAppSignalStatesFromArchiveStartReply::requestid() const {
  return requestid_;
}
inline void GetAppSignalStatesFromArchiveStartReply::set_requestid(::google::protobuf::uint32 value) {
  set_has_requestid();
  requestid_ = value;
}

// -------------------------------------------------------------------

// GetAppSignalStatesFromArchiveNextRequest

// optional uint32 requestID = 1 [default = 0];
inline bool GetAppSignalStatesFromArchiveNextRequest::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextRequest::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalStatesFromArchiveNextRequest::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalStatesFromArchiveNextRequest::clear_requestid() {
  requestid_ = 0u;
  clear_has_requestid();
}
inline ::google::protobuf::uint32 GetAppSignalStatesFromArchiveNextRequest::requestid() const {
  return requestid_;
}
inline void GetAppSignalStatesFromArchiveNextRequest::set_requestid(::google::protobuf::uint32 value) {
  set_has_requestid();
  requestid_ = value;
}

// -------------------------------------------------------------------

// GetAppSignalStatesFromArchiveNextReply

// optional int32 error = 1 [default = 0];
inline bool GetAppSignalStatesFromArchiveNextReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveNextReply::error() const {
  return error_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 archError = 2 [default = 100];
inline bool GetAppSignalStatesFromArchiveNextReply::has_archerror() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_archerror() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_archerror() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_archerror() {
  archerror_ = 100;
  clear_has_archerror();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveNextReply::archerror() const {
  return archerror_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_archerror(::google::protobuf::int32 value) {
  set_has_archerror();
  archerror_ = value;
}

// optional uint32 requestID = 3 [default = 0];
inline bool GetAppSignalStatesFromArchiveNextReply::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_requestid() {
  requestid_ = 0u;
  clear_has_requestid();
}
inline ::google::protobuf::uint32 GetAppSignalStatesFromArchiveNextReply::requestid() const {
  return requestid_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_requestid(::google::protobuf::uint32 value) {
  set_has_requestid();
  requestid_ = value;
}

// optional string errorString = 10;
inline bool GetAppSignalStatesFromArchiveNextReply::has_errorstring() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_errorstring() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_errorstring() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_errorstring() {
  if (errorstring_ != &::google::protobuf::internal::kEmptyString) {
    errorstring_->clear();
  }
  clear_has_errorstring();
}
inline const ::std::string& GetAppSignalStatesFromArchiveNextReply::errorstring() const {
  return *errorstring_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_errorstring(const ::std::string& value) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void GetAppSignalStatesFromArchiveNextReply::set_errorstring(const char* value) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void GetAppSignalStatesFromArchiveNextReply::set_errorstring(const char* value, size_t size) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetAppSignalStatesFromArchiveNextReply::mutable_errorstring() {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  return errorstring_;
}
inline ::std::string* GetAppSignalStatesFromArchiveNextReply::release_errorstring() {
  clear_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = errorstring_;
    errorstring_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetAppSignalStatesFromArchiveNextReply::set_allocated_errorstring(::std::string* errorstring) {
  if (errorstring_ != &::google::protobuf::internal::kEmptyString) {
    delete errorstring_;
  }
  if (errorstring) {
    set_has_errorstring();
    errorstring_ = errorstring;
  } else {
    clear_has_errorstring();
    errorstring_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool dataReady = 4 [default = false];
inline bool GetAppSignalStatesFromArchiveNextReply::has_dataready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_dataready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_dataready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_dataready() {
  dataready_ = false;
  clear_has_dataready();
}
inline bool GetAppSignalStatesFromArchiveNextReply::dataready() const {
  return dataready_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_dataready(bool value) {
  set_has_dataready();
  dataready_ = value;
}

// optional int32 totalStatesCount = 5 [default = 0];
inline bool GetAppSignalStatesFromArchiveNextReply::has_totalstatescount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_totalstatescount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_totalstatescount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_totalstatescount() {
  totalstatescount_ = 0;
  clear_has_totalstatescount();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveNextReply::totalstatescount() const {
  return totalstatescount_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_totalstatescount(::google::protobuf::int32 value) {
  set_has_totalstatescount();
  totalstatescount_ = value;
}

// optional int32 sentStatesCount = 6 [default = 0];
inline bool GetAppSignalStatesFromArchiveNextReply::has_sentstatescount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_sentstatescount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_sentstatescount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_sentstatescount() {
  sentstatescount_ = 0;
  clear_has_sentstatescount();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveNextReply::sentstatescount() const {
  return sentstatescount_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_sentstatescount(::google::protobuf::int32 value) {
  set_has_sentstatescount();
  sentstatescount_ = value;
}

// optional int32 statesInPartCount = 7 [default = 0];
inline bool GetAppSignalStatesFromArchiveNextReply::has_statesinpartcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_statesinpartcount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_statesinpartcount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_statesinpartcount() {
  statesinpartcount_ = 0;
  clear_has_statesinpartcount();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveNextReply::statesinpartcount() const {
  return statesinpartcount_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_statesinpartcount(::google::protobuf::int32 value) {
  set_has_statesinpartcount();
  statesinpartcount_ = value;
}

// optional bool isLastPart = 8 [default = false];
inline bool GetAppSignalStatesFromArchiveNextReply::has_islastpart() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_has_islastpart() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_has_islastpart() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_islastpart() {
  islastpart_ = false;
  clear_has_islastpart();
}
inline bool GetAppSignalStatesFromArchiveNextReply::islastpart() const {
  return islastpart_;
}
inline void GetAppSignalStatesFromArchiveNextReply::set_islastpart(bool value) {
  set_has_islastpart();
  islastpart_ = value;
}

// repeated .Proto.AppSignalState appSignalStates = 9;
inline int GetAppSignalStatesFromArchiveNextReply::appsignalstates_size() const {
  return appsignalstates_.size();
}
inline void GetAppSignalStatesFromArchiveNextReply::clear_appsignalstates() {
  appsignalstates_.Clear();
}
inline const ::Proto::AppSignalState& GetAppSignalStatesFromArchiveNextReply::appsignalstates(int index) const {
  return appsignalstates_.Get(index);
}
inline ::Proto::AppSignalState* GetAppSignalStatesFromArchiveNextReply::mutable_appsignalstates(int index) {
  return appsignalstates_.Mutable(index);
}
inline ::Proto::AppSignalState* GetAppSignalStatesFromArchiveNextReply::add_appsignalstates() {
  return appsignalstates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >&
GetAppSignalStatesFromArchiveNextReply::appsignalstates() const {
  return appsignalstates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::AppSignalState >*
GetAppSignalStatesFromArchiveNextReply::mutable_appsignalstates() {
  return &appsignalstates_;
}

// -------------------------------------------------------------------

// GetAppSignalStatesFromArchiveCancelRequest

// optional uint32 requestID = 1 [default = 0];
inline bool GetAppSignalStatesFromArchiveCancelRequest::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalStatesFromArchiveCancelRequest::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalStatesFromArchiveCancelRequest::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalStatesFromArchiveCancelRequest::clear_requestid() {
  requestid_ = 0u;
  clear_has_requestid();
}
inline ::google::protobuf::uint32 GetAppSignalStatesFromArchiveCancelRequest::requestid() const {
  return requestid_;
}
inline void GetAppSignalStatesFromArchiveCancelRequest::set_requestid(::google::protobuf::uint32 value) {
  set_has_requestid();
  requestid_ = value;
}

// -------------------------------------------------------------------

// GetAppSignalStatesFromArchiveCancelReply

// optional int32 error = 1 [default = 0];
inline bool GetAppSignalStatesFromArchiveCancelReply::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSignalStatesFromArchiveCancelReply::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSignalStatesFromArchiveCancelReply::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveCancelReply::error() const {
  return error_;
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int32 archError = 2 [default = 100];
inline bool GetAppSignalStatesFromArchiveCancelReply::has_archerror() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_has_archerror() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppSignalStatesFromArchiveCancelReply::clear_has_archerror() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppSignalStatesFromArchiveCancelReply::clear_archerror() {
  archerror_ = 100;
  clear_has_archerror();
}
inline ::google::protobuf::int32 GetAppSignalStatesFromArchiveCancelReply::archerror() const {
  return archerror_;
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_archerror(::google::protobuf::int32 value) {
  set_has_archerror();
  archerror_ = value;
}

// optional string errorString = 3;
inline bool GetAppSignalStatesFromArchiveCancelReply::has_errorstring() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_has_errorstring() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAppSignalStatesFromArchiveCancelReply::clear_has_errorstring() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAppSignalStatesFromArchiveCancelReply::clear_errorstring() {
  if (errorstring_ != &::google::protobuf::internal::kEmptyString) {
    errorstring_->clear();
  }
  clear_has_errorstring();
}
inline const ::std::string& GetAppSignalStatesFromArchiveCancelReply::errorstring() const {
  return *errorstring_;
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_errorstring(const ::std::string& value) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_errorstring(const char* value) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_errorstring(const char* value, size_t size) {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetAppSignalStatesFromArchiveCancelReply::mutable_errorstring() {
  set_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    errorstring_ = new ::std::string;
  }
  return errorstring_;
}
inline ::std::string* GetAppSignalStatesFromArchiveCancelReply::release_errorstring() {
  clear_has_errorstring();
  if (errorstring_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = errorstring_;
    errorstring_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetAppSignalStatesFromArchiveCancelReply::set_allocated_errorstring(::std::string* errorstring) {
  if (errorstring_ != &::google::protobuf::internal::kEmptyString) {
    delete errorstring_;
  }
  if (errorstring) {
    set_has_errorstring();
    errorstring_ = errorstring;
  } else {
    clear_has_errorstring();
    errorstring_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Network

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_network_2eproto__INCLUDED
