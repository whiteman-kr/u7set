<?xml version="1.0" encoding="UTF-8"?>
<ApplicationFunctionalBlocks>
    <AfbElement StrId="#scale_16ui_16ui_v1">
        <Properties>
            <Caption>scale_16ui_16ui</Caption>
            <Version>1.1</Version>
            <Implementation Version="104" OpIndex="16"/>
            <Description>Scaling Block, 16-bit unsigned integer to 16-bit unsigned integer</Description>
            <Category>Scaling</Category>
            <OpCode>14</OpCode>
            <HasRam>false</HasRam>
            <RequiredStart>true</RequiredStart>
            <InternalUse>true</InternalUse>
        </Properties>
        <InputSignals>
            <AfbElementSignal OpName="i_ui_data" Caption="in" Type="Analog" DataFormat="UnsignedInt" OpIndex="5" Size="16"/>
        </InputSignals>
        <OutputSignals>
            <AfbElementSignal OpName="o_ui_result" Caption="out" Type="Analog" DataFormat="UnsignedInt" OpIndex="8" Size="16"/>

            <AfbElementSignal OpName="o_overflow" Caption="overflow" Type="Discrete" OpIndex="12" Size="1"/>            
            <AfbElementSignal OpName="o_zero" Caption="zero" Type="Discrete" OpIndex="14" Size="1"/>
        </OutputSignals>
        <Params>
            <AfbElementParam OpName="i_scal_k1_coef" Caption="K1" Visible="false" OpIndex="1" Size="32" Instantiator="true" User="false" Type="Analog" DataFormat="SignedInt">
                <Value>1</Value>
                <Default>1</Default>
                <LowLimit>-2147483648</LowLimit>
                <HighLimit>2147483647</HighLimit>
                <Script>
                    <Changed></Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam OpName="i_scal_k2_coef" Caption="K2" Visible="false" OpIndex="3" Size="32" Instantiator="true" User="false" Type="Analog" DataFormat="SignedInt">
                <Value>0</Value>
                <Default>0</Default>
                <LowLimit>-2147483648</LowLimit>
                <HighLimit>2147483647</HighLimit>
                <Script>
                    <Changed></Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam OpName="x1" Caption="X1" Visible="true" OpIndex="-1" Size="16" Instantiator="false" User="true" Type="Analog" DataFormat="UnsignedInt">
                <Value>0</Value>
                <Default>0</Default>
                <LowLimit>0</LowLimit>
                <HighLimit>65535</HighLimit>
                <Script>
                    <Changed></Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam OpName="y1" Caption="Y1" Visible="true" OpIndex="-1" Size="16" Instantiator="false" User="true" Type="Analog" DataFormat="UnsignedInt">
                <Value>0</Value>
                <Default>0</Default>
                <LowLimit>0</LowLimit>
                <HighLimit>65535</HighLimit>
                <Script>
                    <Changed></Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam OpName="x2" Caption="X2" Visible="true" OpIndex="-1" Size="16" Instantiator="false" User="true" Type="Analog" DataFormat="UnsignedInt">
                <Value>100</Value>
                <Default>100</Default>
                <LowLimit>0</LowLimit>
                <HighLimit>65535</HighLimit>
                <Script>
                    <Changed></Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam OpName="y2" Caption="Y2" Visible="true" OpIndex="-1" Size="16" Instantiator="false" User="true" Type="Analog" DataFormat="UnsignedInt">
                <Value>100</Value>
                <Default>100</Default>
                <LowLimit>0</LowLimit>
                <HighLimit>65535</HighLimit>
                <Script>
                    <Changed></Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam OpName="i_conf" Caption="Config" Visible="false" OpIndex="0" Size="5" Instantiator="true" User="false" Type="Analog" DataFormat="UnsignedInt">
                <Value>1</Value>
                <Default>1</Default>
                <LowLimit>1</LowLimit>
                <HighLimit>9</HighLimit>
                <Script>
                    <Changed></Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam OpName="OutOverflow" Caption="OutOverflow" Visible="false" OpIndex="-1" Size="1" Instantiator="false" User="true" Type="Discrete">
                <Value>1</Value>
                <Default>1</Default>
                <Script>
                    <Changed>
function(videoItemFblElement, afbElement)
{
	return createOutputSignals(videoItemFblElement, afbElement);
}
		</Changed>
                </Script>
            </AfbElementParam>            
            <AfbElementParam OpName="OutZero" Caption="OutZero" Visible="false" OpIndex="-1" Size="1" Instantiator="false" User="true" Type="Discrete">
                <Value>1</Value>
                <Default>1</Default>
                <Script>
                    <Changed>
function(videoItemFblElement, afbElement)
{
	return createOutputSignals(videoItemFblElement, afbElement);
}
		</Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam OpName="test_start_count" Caption="TestStartCount" Visible="false" OpIndex="-1" Size="16" Instantiator="false" User="true" Type="Analog" DataFormat="UnsignedInt">
                <Value>1</Value>
                <Default>1</Default>
                <LowLimit>0</LowLimit>
                <HighLimit>65535</HighLimit>
                <Script>
                    <Changed>
		</Changed>
                </Script>
            </AfbElementParam>
        </Params>
        <CommonScript>
            <Library>
            function createOutput(videoItemFblElement, afbElement, paramName, signalCaption)
{
	var show = videoItemFblElement.getParamBoolValue(paramName);
	if (show == true)
	{
		var s = afbElement.getAfbSignalByCaption(signalCaption);
		if (s != null)
		{
			videoItemFblElement.addOutputSignal(s.jsCaption(), s.jsType(), s.operandIndex(), s.size());
		}	
	}
}

function createOutputSignals(videoItemFblElement, afbElement)
{
	videoItemFblElement.removeOutputSignals();
	
	var out = afbElement.getAfbSignalByCaption("out");
	if (out != null)
	{
		videoItemFblElement.addOutputSignal(out.jsCaption(), out.jsType(), out.operandIndex(), out.size());
	}
	
	createOutput(videoItemFblElement, afbElement, "OutOverflow", "overflow");	
	createOutput(videoItemFblElement, afbElement, "OutZero", "zero");

	videoItemFblElement.adjustHeight();

	return true;
}
            </Library>
            <AfterCreation>
function(videoItemFblElement, afbElement)
{
	return createOutputSignals(videoItemFblElement, afbElement);
}
            </AfterCreation>
        </CommonScript>
    </AfbElement>
</ApplicationFunctionalBlocks>