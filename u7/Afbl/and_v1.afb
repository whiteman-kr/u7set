<?xml version="1.0" encoding="UTF-8"?>
<ApplicationFunctionalBlocks>
    <AfbElement StrId="#and_v1">
        <Properties>
            <Caption>and_v1</Caption>
            <OpCode>1</OpCode>
            <hasRam>false</hasRam>
            <requiredStart>true</requiredStart>
        </Properties>
        <InputSignals>
            <AfbElementSignal Caption="i_1_oprd" Type="Discrete" OpIndex = "2" Size = "1"/>
            <AfbElementSignal Caption="i_2_oprd" Type="Discrete" OpIndex = "3" Size = "1"/>
            <AfbElementSignal Caption="i_3_oprd" Type="Discrete" OpIndex = "4" Size = "1"/>
            <AfbElementSignal Caption="i_4_oprd" Type="Discrete" OpIndex = "5" Size = "1"/>
            <AfbElementSignal Caption="i_5_oprd" Type="Discrete" OpIndex = "6" Size = "1"/>
            <AfbElementSignal Caption="i_6_oprd" Type="Discrete" OpIndex = "7" Size = "1"/>
            <AfbElementSignal Caption="i_7_oprd" Type="Discrete" OpIndex = "8" Size = "1"/>
            <AfbElementSignal Caption="i_8_oprd" Type="Discrete" OpIndex = "9" Size = "1"/>
            <AfbElementSignal Caption="i_9_oprd" Type="Discrete" OpIndex = "10" Size = "1"/>
            <AfbElementSignal Caption="i_10_oprd" Type="Discrete" OpIndex = "11" Size = "1"/>
            <AfbElementSignal Caption="i_11_oprd" Type="Discrete" OpIndex = "12" Size = "1"/>
            <AfbElementSignal Caption="i_12_oprd" Type="Discrete" OpIndex = "13" Size = "1"/>
            <AfbElementSignal Caption="i_13_oprd" Type="Discrete" OpIndex = "14" Size = "1"/>
            <AfbElementSignal Caption="i_14_oprd" Type="Discrete" OpIndex = "15" Size = "1"/>
            <AfbElementSignal Caption="i_15_oprd" Type="Discrete" OpIndex = "16" Size = "1"/>
            <AfbElementSignal Caption="i_16_oprd" Type="Discrete" OpIndex = "17" Size = "1"/>
        </InputSignals>
        <OutputSignals>
            <AfbElementSignal Caption="o_result" Type="Discrete" OpIndex = "19" Size = "1"/>
        </OutputSignals>
        <Params>
            <AfbElementParam Caption="i_oprd_quant" Visible="false" OpIndex="0" Size="5" Instantiator="true" User="true" Type="AnalogIntegral">
                <Value>2</Value>
                <Default>2</Default>
                <LowLimit>2</LowLimit>
                <HighLimit>16</HighLimit>
                <Script>
                    <Changed>
function(videoItemFblElement, afbElement)
{
	return createInputSignals(videoItemFblElement, afbElement);
}
		</Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam Caption="i_bus_width" Visible="false" OpIndex="1" Size="5" Instantiator="true" User="false" Type="AnalogIntegral">
                <Value>1</Value>
                <Script>
                    <Changed></Changed>
                </Script>
            </AfbElementParam>
            <AfbElementParam Caption="test_start_count" Visible="false" OpIndex="-1" Size="16" Instantiator="false" User="true" Type="AnalogIntegral">
                <Value>1</Value>
                <Default>1</Default>
                <LowLimit>0</LowLimit>
                <HighLimit>65535</HighLimit>
                <Script>
                    <Changed>
		</Changed>
                </Script>
            </AfbElementParam>
        </Params>
        <CommonScript>
            <Library>
function createInputSignals(videoItemFblElement, afbElement)
{
	videoItemFblElement.removeInputSignals();

	var count = videoItemFblElement.getParamIntValue("i_oprd_quant");
	if (count == -1)
	{
		return false;
	}

	var opIndex = 2;
	for (var i = 0; i &lt; count; i++)
	{
		var afbInputSignal = afbElement.getAfbSignalByOpIndex(opIndex);
		if (afbInputSignal != null)
		{
			var caption = afbInputSignal.jsCaption();
			var type = afbInputSignal.jsType();
			var operandIndex = afbInputSignal.operandIndex();
			var size = afbInputSignal.size();
			videoItemFblElement.addInputSignal(caption, type, operandIndex, size);
		}
		opIndex++;
	}

	videoItemFblElement.adjustHeight();

	return true;
}
	</Library>
            <AfterCreation>
function(videoItemFblElement, afbElement)
{
	return createInputSignals(videoItemFblElement, afbElement);
}
	</AfterCreation>
        </CommonScript>
    </AfbElement>
</ApplicationFunctionalBlocks>
