#pragma once

#include <QtCore>
#include "../include/SimpleThread.h"


#pragma pack(1, push)


#pragma pack(pop)


class TuningUdpSocketWorker : public SimpleThreadWorker
{
	const int ROM_FRAME_SIZE_B = 1016;
	const int ROM_SIZE_B = 262144;

	enum OperationCode
	{
		Read = 1200,
		Write = 1400,
	};

	enum DataType
	{
		AnalogSignetInt = 1300,
		AnalogFloat = 1500,
		Discrete = 1700
	};

	struct RequestHeader
	{
		quint16 version;				// current version 1
		quint64 id;						// unique connection ID generated by RPCT
		quint16 subsystemKey;			// key of Subsystem assigned in RPCT Subsystems List Editor
		quint16 operationCode;			// OperationCode enum values
		quint16 flags;
		quint32 startAddressW;			//
		quint16 requestSizeB;			// UDP frame size = 1432 bytes
		quint32 romSizeB;				// = ROM_SIZE_B
		quint16 romFrameSizeB;			// = ROM_FRAME_SIZE_B
		quint16 dataType;				// DataType enum values
	};

	struct Request
	{
		RequestHeader header;

		char reserv[98];

		char data[ROM_FRAME_SIZE_B];

		char cmpResult[64];

		char reserv2[224];
	};


};


class TuningUdpSocket : public SimpleThread
{
public:
	TuningUdpSocket();
};
